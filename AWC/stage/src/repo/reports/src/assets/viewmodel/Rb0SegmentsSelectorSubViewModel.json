{
    "schemaVersion": "1.0.0",
    "actions": {
        "performRelatedObjectSearch": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2023-06-Finder",
            "method": "performSearchViewModel5",
            "inputData": {
                "columnConfigInput": {
                    "clientName": "AWClient",
                    "clientScopeURI": "Awp0SearchResults",
                    "columnsToExclude": [],
                    "hostingClientName": "",
                    "operationType": "intersection"
                },
                "saveColumnConfigData": {
                    "columnConfigId": "",
                    "clientScopeURI": "",
                    "columns": [],
                    "scope": "",
                    "scopeName": ""
                },
                "searchInput": {
                    "attributesToInflate": [ "object_name", "object_desc", "object_type" ],
                    "internalPropertyName": "",
                    "maxToLoad": 50,
                    "maxToReturn": 50,
                    "providerName": "Rb0ReportsDataProvider",
                    "searchCriteria": {
                        "sourceObject": "{{subPanelContext.reportsContext.rootClassSampleObject[0].uid}}",
                        "relationsPath": "{{function:getTraversalPath}}"
                    },
                    "startIndex": "{{data.dataProviders.traversedObjectProvider.startIndex}}"
                }
            },
            "outputData": {
                "totalFound": "totalFound",
                "searchResults": "{{json:searchResultsJSON}}",
                "output": "{{function:processOutput}}"
            },
            "events": {
                "success": [
                    {
                        "name": "rb0SegmentSelector.updateCtxFilter"
                    }
                ],
                "failure": [ {
                    "name": "rb0SegmentSelector.onError"
                } ]
            },
            "deps": "js/configureItemReportService"
        },
        "updateDataProviderOnError": {
            "actionType": "JSFunction",
            "method": "updateDataProviderOnError",
            "inputData": {
                "dataProviders": "{{data.dataProviders.traversedObjectProvider}}",
                "i18n": "{{data.i18n.noTraversedObject}}"
            },
            "deps": "js/configureItemReportService"
        },
        "updateState": {
            "actionType": "JSFunction",
            "method": "getTraversalPath",
            "inputData": {
                "repContext": "{{subPanelContext.reportsContext}}"
            },
            "outputData": {
                "searchState.criteria.searchString": ""
            },
            "deps": "js/configureItemReportService"
        },
        "updateAtomicDataValue": {
            "actionType": "JSFunction",
            "method": "updateAtomicDataValue",
            "inputData": {
                "AtomicObj": "{{subPanelContext.reportsContext}}",
                "value": {
                    "segmentTree": "{{data.dataforSegmentTree}}",
                    "relationsPath": "{{data.searchState.criteria.searchString}}"
                }
            },
            "events": {
                "success": [{
                    "name": "complete",
                    "eventData": {
                        "source": "toolAndInfoPanel"
                    },
                    "condition": "!subPanelContext.panelPinned"
                }]
            },
            "deps": "js/addObjectUtils"
        },
        "verifyTraversal": {
            "actionType": "dataProvider",
            "method": "traversedObjectProvider"
        },
        "initiateSegmentActions":{
            "actionType": "batchJob",
            "steps": [ {
                    "action": "initiateSegmentsRetreival",
                    "condition": "!subPanelContext.reportsContext.segments || subPanelContext.reportsContext.segments.length === 0"
                },
                {
                    "action": "processAndAddNewSegment",
                    "condition": "!subPanelContext.reportsContext.segments || subPanelContext.reportsContext.segments.length === 0"
                },
                {
                    "action": "initiateVerifyTraversal",
                    "condition": "subPanelContext.reportsContext.segments && subPanelContext.reportsContext.segments.length > 0"
                }
            ]
        },
        "addSegmentActions":{
            "actionType": "batchJob",
            "steps": [ {
                    "action": "initiateSegmentsRetreival"
                },
                {
                    "action": "processAndAddNewSegment"
                },
                {
                    "action": "initiateVerifyTraversal",
                    "condition": "subPanelContext.reportsContext.segments && subPanelContext.reportsContext.segments.length > 0"
                }
            ]
        },
        "actionForEditItemReport":{
            "actionType": "batchJob",
            "steps": [ {
                    "action": "buildAndUpdateSegPanel",
                    "condition": "subPanelContext.reportsContext.segments && subPanelContext.reportsContext.segments.length > 0 && !ctx.setLayoutTabPageReached && ((ctx.state.params.referenceId === 'edit' && ctx.ReportsContext.showPreview === false) || (ctx.state.params.referenceId === 'new' && ctx.ReportsContext.showPreview === true))"
                } ]
        },
        "buildAndUpdateSegPanel":{
            "actionType": "batchJob",
            "steps": [{
                "action": "updateState"
            },{
                "action": "buildSegmentTreeAndNavigate"
            },{
                "action": "updateAtomicDataValue"
            }]
        },
        "initiateSegmentsRetreival": {
            "actionType": "TcSoaService",
            "serviceName": "Internal-AWS2-2016-12-DataManagement",
            "method": "getDeclarativeStyleSheets",
            "inputData": {
                "input": [ {
                    "businessObjectType": "Fnd0TraversalSegment",
                    "businessObject": {
                        "uid": "AAAAAAAAAAAAAA",
                        "type": "Fnd0TraversalSegment"
                    },
                    "styleSheetLastModDate": "",
                    "styleSheetType": "CREATE",
                    "targetPage": "",
                    "clientContext": {
                        "ActiveWorkspace:Location": "com.siemens.splm.client.logicalobject.configurationLocation",
                        "ActiveWorkspace:SubLocation": "com.siemens.splm.client.logicalobject:logicalObjectsSubLocation"
                    }
                } ],
                "processEntireXRT": true
            },
            "outputData": {
                "segment": "{{dataParseDefinitions:convertNvObject}}"
            },
            "deps": "js/configureItemReportService"
        },
        "processAndAddNewSegment": {
            "actionType": "JSFunction",
            "method": "processAndAddNewSegment",
            "inputData": {
                "data": "{{data}}",
                "repContext": "{{subPanelContext.reportsContext}}"
            },
            "outputData":{
                "segments": ""
            },
            "deps": "js/configureItemReportService"
        },
        "buildSegmentTreeAndNavigate": {
            "actionType": "JSFunction",
            "method": "buildSegmentTreeAndNavigate",
            "inputData": {
                "data": "{{data}}",
                "i18n": "{{i18n}}",
                "repContext": "{{subPanelContext.reportsContext}}"
            },
            "outputData": {
                "dataforSegmentTree": ""
            },
            "deps": "js/configureItemReportService"
        },
        "updateConfigureActiveView": {
            "actionType": "JSFunction",
            "method": "updateAtomicDataValue",
            "inputData": {
                "AtomicObj": "{{subPanelContext.reportsContext}}",
                "value": {
                    "activeView": "ConfigureItemReportPanel"
                }
            },
            "deps": "js/addObjectUtils"
        },
        "updateCtxFilter": {
            "actionType": "JSFunction",
            "method": "updateReportsCtxForFilters",
            "inputData": {
                "subPanelContext": "{{subPanelContext}}",
                "data": "{{data}}"
            },
            "deps": "js/configureReportService"
        },
        "goToPreview": {
            "actionType": "JSFunction",
            "method": "updateReportsCtxForFilters",
            "inputData": {
                "subPanelContext": "{{subPanelContext}}",
                "data": "{{data}}"
            },
            "deps": "js/configureReportService"
        },
        "initiateVerifyTraversal":{
            "actionType": "JSFunction",
            "method": "initiateVerifyTraversal",
            "inputData": {
                "data": "{{props.subPanelContext.reportsContext}}"
            },
            "deps": "js/configureItemReportService"
        },
        "updateSelectedLovEntries":{
            "actionType": "JSFunction",
            "method": "updateSelectedLovEntries",
            "inputData": {
                "eventData": "{{data.eventData}}",
                "segments": "{{props.subPanelContext.reportsContext}}"
            },
            "deps": "js/configureItemReportService"
        }
    },
    "data": {
        "showSegment": {
            "dbValue": false
        },
        "previewLink": {
            "displayName": "Preview",
            "type": "STRING",
            "isRequired": "false"
        },
        "showPreview":{
            "displayName": "",
            "type": "BOOLEAN",
            "dbValue": true
        },
        "vmPropDirection": {
            "type": "BOOLEAN",
            "isEditable": "true",
            "dbValue": true,
            "labelPosition": "NO_PROPERTY_LABEL",
            "propertyRadioTrueText": "{{i18n.forward}}",
            "propertyRadioFalseText": "{{i18n.backward}}"
        },
        "rb0RemoveSegmentCommands": "rb0_removeSegmentCommands",
        "segmentPreviewCommands": "rb0_segmentPreviewCommands",
        "radio1":{
            "displayName": "Approved",
            "type": "BOOLEAN",
            "isEditable": "true",
            "labelPosition": "PROPERTY_LABEL_AT_RIGHT"
        },
        "bomExpansionCheckbox": {
            "displayName": "{{i18n.expandStructureLabel}}",
            "type": "BOOLEAN",
            "isRequired": "false",
            "isEditable": "true",
            "dbValue": false,
            "dispValue": "{{i18n.expandStructureLabel}}",
            "labelPosition": "PROPERTY_LABEL_AT_RIGHT"
        },
        "searchState":{
            "initialValues": {
            },
            "meta": {
            }
        }
    },

    "dataProviders": {
        "traversedObjectProvider": {
            "action": "performRelatedObjectSearch",
            "response": "{{data.searchResults}}",
            "totalFound": "{{data.totalFound}}",
            "selectionModelMode": "single",
            "noResultsFound": "{{i18n.noTraversedObject}}"
        }
    },
    "messages": {

    },
    "dataParseDefinitions": {
        "convertNvObject": {
            "outputFormatType": "ViewModelObject",
            "dataInput": "ServiceData.plain[0]",
            "operationType": "CREATE"
        }
    },
    "onEvent": [
        {
            "eventId": "rb0SegmentSelector.processSegment",
            "action": "processAndAddNewSegment"
        },
        {
            "eventId": "rb0SegmentSelector.updateCtxFilter",
            "action": "updateCtxFilter"
        },
        {
            "eventId": "rb0segmentselector.addNewSegment",
            "action": "initiateSegmentsRetreival",
            "cacheEventData": true
        },
        {
            "eventId": "fnd0RelationOrReference.lovValueChanged",
            "action": "initiateVerifyTraversal"
        },
        {
            "eventId": "fnd0DestinationType.lovValueChanged",
            "action": "initiateVerifyTraversal"
        },
        {
            "eventId":"rb0SegmentSelector.verifyTraversal",
            "action": "verifyTraversal"
        },
        {
            "eventId": "tcDataprovider.validSelectionEvent",
            "action": "updateSelectedLovEntries",
            "cacheEventData": true
        },
        {
            "eventId": "rb0SegmentSelector.onError",
            "action": "updateDataProviderOnError"
        }
    ],
    "conditions": {
        "canAddNewSegment":{
            "expression": "data.totalFound !== undefined && data.totalFound > 0"
        },
        "shouldShowPreview":{
            "expression": "data.showPreview.dbValue"
        }
    },
    "lifecycleHooks": {
        "onMount": "initiateSegmentActions",
        "onUpdate": [ {
            "action": "actionForEditItemReport",
            "observers": [ "props.subPanelContext.reportsContext.searchFilterChartProps" ]
        } ]
    },
    "i18n": {
        "addChartCommand":["ReportChartMessages"],
        "segment": [ "ReportChartMessages" ],
        "preview": [ "ReportChartMessages" ],
        "noTraversedObject": [ "ReportChartMessages" ],
        "verify": [ "ReportChartMessages" ],
        "forward": [ "ReportChartMessages" ],
        "backward": [ "ReportChartMessages" ],
        "addSegment":[ "ReportChartMessages" ],
        "parentSource":[ "ReportChartMessages" ],
        "expandStructureLabel":[ "ReportChartMessages" ],
        "structure": [ "ReportChartMessages" ]
    },
    "functions": {
        "getTraversalPath": {
            "functionName": "getTraversalPath",
            "parameters": [
                "{{props.reportsContext}}"
            ]
        },
        "callGetCategoriesForReports": {
            "functionName": "callGetCategoriesForReports",
            "parameters": []
        },
        "processOutput": {
            "functionName": "processOutput",
            "parameters": [
                "{{data}}",
                "{{fields.searchState}}",
                "{{props.subPanelContext.reportsContext}}"
            ]
        }
    }

}
