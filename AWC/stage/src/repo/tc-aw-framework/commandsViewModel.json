{
  "commands": {
    "DigitalAssetsPanel": {
      "iconId": "cmdShowDigitalAssets",
      "isGroup": false,
      "title": "{{i18n.digitalAssetsPanelTitle}}",
      "description": "{{i18n.DigitalAssetsPanelDesc}}"
    },
    "ImagePanel": {
      "iconId": "cmdShowDigitalAssets",
      "isGroup": false,
      "title": "{{i18n.imagePanelTitle}}",
      "description": "{{i18n.ImagePanelDesc}}"
    },
    "cmdReplaceDigitalAsset": {
      "iconId": "cmdReplace",
      "isGroup": false,
      "title": "{{i18n.cmdReplaceDigitalAsset}}",
      "description": "{{i18n.cmdReplaceDigitalAssetDesc}}"
    },
    "cmdDeleteDigitalAsset": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.cmdDeleteDigitalAsset}}",
      "description": "{{i18n.cmdDeleteDigitalAssetDesc}}"
    },
    "showObjectCell1": {
      "iconId": "cmdOpen",
      "isGroup": false,
      "title": "{{i18n.showObjectCell}}",
      "description": "{{i18n.showObjectCellDesc}}"
    },
    "showObjectCell2": {
      "iconId": "cmdOpen",
      "isGroup": false,
      "title": "{{i18n.showObjectCell}}",
      "description": "{{i18n.showObjectCellDesc}}"
    },
    "Arm0ExportImport": {
      "iconId": "cmdImportExportExcel",
      "isRibbon": true,
      "title": "{{i18n.exportImportCmdTitle}}",
      "description": "{{i18n.Arm0ExportImportDesc}}"
    },
    "Arm0Export": {
      "iconId": "cmdExport",
      "isGroup": false,
      "title": "{{i18n.exportCmdTitle}}",
      "description": "{{i18n.Arm0ExportDesc}}",
      "hasDialog": true
    },
    "Arm0ImportExcel": {
      "iconId": "cmdImport",
      "isGroup": false,
      "title": "{{i18n.importCmdTitle}}",
      "description": "{{i18n.Arm0ImportExcelDesc}}"
    },
    "Arm0SummaryTableExportImport": {
      "iconId": "cmdImportExportExcel",
      "isGroup": true,
      "title": "{{i18n.exportImportCmdTitle}}",
      "description": "{{i18n.Arm0ExportImportDesc}}"
    },
    "Arm0SummaryTableExport": {
      "iconId": "cmdExport",
      "isGroup": false,
      "title": "{{i18n.exportCmdTitle}}",
      "description": "{{i18n.Arm0ExportDesc}}"
    },
    "Arm0SummaryTableImportExcel": {
      "iconId": "cmdImport",
      "isGroup": false,
      "title": "{{i18n.importCmdTitle}}",
      "description": "{{i18n.Arm0ImportExcelDesc}}"
    },
    "Arm0DeletePropOnExportPanel": {
      "iconId": "cmdDelete",
      "title": "{{i18n.deletePropCmdTitle}}"
    },
    "Arm0SelectedColmnsSubAddCmd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addColumns}}",
      "description": "{{i18n.Arm0SelectedColmnsSubAddCmdDesc}}"
    },
    "Arm0MoveUpExcelColumn": {
      "iconId": "cmdMoveUp",
      "isGroup": false,
      "title": "{{i18n.exportMoveUpCommandTitle}}",
      "description": "{{i18n.Arm0MoveUpExcelColumnDesc}}"
    },
    "Arm0MoveDownExcelColumn": {
      "iconId": "cmdMoveDown",
      "isGroup": false,
      "title": "{{i18n.exportMoveDownCommandTitle}}",
      "description": "{{i18n.Arm0MoveDownExcelColumnDesc}}"
    },
    "Awp0AddToFavorites": {
      "iconId": "cmdEmptyStar",
      "isGroup": false,
      "title": "{{i18n.addToFavoritesCommandTitle}}",
      "description": "{{i18n.Awp0AddToFavoritesDesc}}"
    },
    "Awp0RemoveFromFavorites": {
      "iconId": "cmdFilledStar",
      "isGroup": false,
      "title": "{{i18n.removeFromFavoritesCommandTitle}}",
      "description": "{{i18n.Awp0RemoveFromFavoritesDesc}}"
    },
    "HostingSetRevisionRule": {
      "iconId": "",
      "isGroup": false,
      "title": "{{i18n.HostingSetRevisionRule}}"
    },
    "Awp0OpenHosted": {
      "iconId": "cmdOpenInHostApplication",
      "isGroup": false,
      "title": "{{ctx.aw_hosting_config.SendToCommandDisplayName}}",
      "description": "{{i18n.Awp0OpenHostedDesc}}"
    },
    "Awp0OpenNewViewHosted": {
      "iconId": "cmdOpenInNewTab",
      "isGroup": false,
      "title": "{{ctx.aw_hosting_config.SendToNewViewCommandDisplayName}}"
    },
    "Awp0AddComponentHosted": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{ctx.aw_hosting_config.AddComponentHostedDisplayName}}",
      "description": "{{i18n.Awp0AddComponentHostedDesc}}"
    },
    "Awp0ReplaceDataset": {
      "iconId": "cmdReplace",
      "isGroup": false,
      "title": "{{i18n.replaceFileCommandTitle}}",
      "description": "{{i18n.Awp0ReplaceDatasetDesc}}"
    },
    "FileUpload": {
      "iconId": "cmdUpload",
      "title": "{{i18n.FileUploadTitle}}",
      "description": "{{i18n.FileUploadDesc}}"
    },
    "FileDownloadForSelectedFile": {
      "iconId": "cmdDownload",
      "title": "{{i18n.Awp0ViewFileTitle}}",
      "description": "{{i18n.Awp0ViewFileDesc}}"
    },
    "FileDelete": {
      "iconId": "cmdDelete",
      "title": "{{i18n.delete}}",
      "description": "{{i18n.Awp0DeleteDesc}}"
    },
    "Awp0CreateAlternateId": {
      "iconId": "cmdAdd",
      "title": "{{i18n.Awp0CreateAlternateIdTitle}}",
      "description": "{{i18n.Awp0CreateAlternateIdDesc}}"
    },
    "Awp0CreateAliasId": {
      "iconId": "cmdAdd",
      "title": "{{i18n.Awp0CreateAliasIdTitle}}",
      "description": "{{i18n.Awp0CreateAliasIdDesc}}"
    },
    "Awp0CreateDispRule": {
      "iconId": "cmdAdd",
      "title": "{{i18n.Awp0CreateDispRuleTitle}}",
      "description": "{{i18n.Awp0CreateDispRuleDesc}}"
    },
    "Awp0IdDispRuleAdminInfo": {
      "iconId": "cmdShowInfoPanel",
      "title": "{{i18n.objectInfoLabel}}",
      "description": "{{i18n.Awp0IdDispRuleAdminInfoDesc}}"
    },
    "Awp0RedLineMode": {
      "title": "{{i18n.Awp0EnableRedLineMode}}",
      "isGroup": false,
      "selected": {
        "title": "{{i18n.Awp0EnableRedLineMode}}"
      },
      "description": "{{i18n.Awp0RedLineModeDesc}}"
    },
    "Awp0GoHome": {
      "iconId": "cmdHomeLHN",
      "title": "{{i18n.homeCommandTitle}}",
      "description": "{{i18n.Awp0GoHomeDesc}}"
    },
    "cmdSignOut": {
      "iconId": "cmdSignout",
      "title": "{{i18n.signOut}}",
      "description": "{{i18n.Awp0SignOutDesc}}"
    },
    "cmdViewProfile": {
      "iconId": "cmdGuide",
      "title": "{{i18n.profile}}",
      "description": "{{i18n.cmdViewProfileDesc}}"
    },
    "cmdQuickAccess": {
      "iconId": "cmdQuickLink",
      "title": "{{i18n.QuickAccessTitle}}",
      "description": "{{i18n.cmdQuickAccessDesc}}"
    },
    "Awp0SignOut": {
      "iconId": "cmdSignOut",
      "title": "{{i18n.signOut}}",
      "description": "{{i18n.Awp0SignOutDesc}}"
    },
    "Awp0Cut": {
      "iconId": "cmdCut",
      "title": "{{i18n.Awp0CutTitle}}",
      "description": "{{i18n.Awp0CutDesc}}"
    },
    "Awp0CutContextMenu": {
      "iconId": "cmdCut",
      "title": "{{i18n.Awp0CutTitle}}",
      "description": "{{i18n.Awp0CutDesc}}"
    },
    "Awp0Checkout": {
      "iconId": "cmdCheckout",
      "title": "{{i18n.checkoutTitle}}",
      "description": "{{i18n.Awp0CheckoutDesc}}"
    },
    "Awp0CancelCheckout": {
      "iconId": "cmdCancelCheckout",
      "title": "{{i18n.cancelCheckoutTitle}}",
      "description": "{{i18n.Awp0CancelCheckoutDesc}}"
    },
    "Awp0Checkin": {
      "iconId": "cmdCheckin",
      "title": "{{i18n.checkinTitle}}",
      "description": "{{i18n.Awp0CheckinDesc}}"
    },
    "Awp0ShowObject": {
      "iconId": "cmdOpen",
      "title": "{{i18n.showObjectCommandTitle}}",
      "description": "{{i18n.Awp0ShowObjectDesc}}"
    },
    "Awp0ShowSaveAs": {
      "iconId": "cmdSaveAs",
      "title": "{{i18n.Awp0ShowSaveAsTitle}}",
      "description": "{{i18n.Awp0ShowSaveAsDesc}}"
    },
    "Awp0ShowRevise": {
      "iconId": "cmdRevise",
      "title": "{{i18n.Awp0ShowReviseTitle}}",
      "description": "{{i18n.Awp0ShowReviseDesc}}"
    },
    "Awp0OpenInNewTab": {
      "iconId": "cmdOpenInNewTab",
      "title": "{{i18n.Awp0OpenInNewTabTitle}}",
      "description": "{{i18n.Awp0OpenInNewTabDesc}}"
    },
    "Awp0OpenInNewWindow": {
      "iconId": "cmdOpen",
      "title": "{{i18n.Awp0OpenInNewWindowTitle}}",
      "description": "{{i18n.Awp0OpenInNewWindowDesc}}"
    },
    "Awp0OpenInRAC": {
      "iconId": "cmdOpen",
      "isGroup": false,
      "title": "{{i18n.Awp0OpenInRACTitle}}",
      "description": "{{i18n.Awp0OpenInRACDesc}}"
    },
    "Awp0ShareURL": {
      "iconId": "cmdCopyLink",
      "isGroup": false,
      "title": "{{i18n.Awp0ShareURLTitle}}",
      "description": "{{i18n.Awp0ShareURLDesc}}"
    },
    "Awp0ShowObjectCell": {
      "iconId": "cmdOpen",
      "isGroup": false,
      "title": "{{i18n.showObjectCommandTitle}}",
      "description": "{{i18n.Awp0ShowObjectDesc}}"
    },
    "Awp0ShowObjectCellForObjectNavigation": {
      "iconId": "cmdOpen",
      "isGroup": false,
      "title": "{{i18n.showObjectCommandTitle}}",
      "description": "{{i18n.Awp0ShowObjectDesc}}"
    },
    "Awp0ShowObjectCellDataset": {
      "iconId": "cmdDownload",
      "isGroup": false,
      "title": "{{i18n.showObjectCommandDownloadTitle}}",
      "description": "{{i18n.Awp0ShowObjectCellDatasetDesc}}"
    },
    "Awp0ViewFile": {
      "iconId": "cmdDownload",
      "isGroup": false,
      "title": "{{i18n.Awp0MultipleFileDwnldTitle}}",
      "description": "{{i18n.Awp0ViewFileDesc}}"
    },
    "Awp0NavigateObject": {
      "iconId": "miscCollapse",
      "isGroup": false,
      "title": "{{i18n.objectNavigationSubLocationTitle}}",
      "description": "{{i18n.Awp0NavigateObjectDesc}}"
    },
    "Awp0StartEdit": {
      "iconId": "cmdEdit",
      "isGroup": false,
      "title": "{{i18n.startEdit}}",
      "description": "{{i18n.Awp0StartEditSummaryDesc}}"
    },
    "StartEditGroupCommand": {
      "iconId": "cmdEdit",
      "isGroup": true,
      "title": "{{i18n.startEdit}}"
    },
    "Awp0StartEditSummary": {
      "iconId": "cmdEdit",
      "isGroup": false,
      "title": "{{i18n.Awp0StartEditSummaryTitle}}",
      "description": "{{i18n.Awp0StartEditSummaryDesc}}"
    },
    "Awp0StartEditSummaryHeader": {
      "iconId": "cmdEdit",
      "isGroup": true,
      "title": "{{i18n.Awp0EditGroup}}",
      "description": "{{i18n.Awp0StartEditSummaryDesc}}"
    },
    "Awp0StartEditTable": {
      "iconId": "cmdEdit",
      "isGroup": false,
      "title": "{{i18n.Awp0EditGroup}}",
      "description": "{{i18n.Awp0StartEditTableDesc}}"
    },
    "Awp0OpenGroup": {
      "iconId": "cmdOpen",
      "isRibbon": true,
      "title": "{{i18n.showObjectCommandTitle}}",
      "description": "{{i18n.Awp0OpenGroupDesc}}"
    },
    "OpenGroupCommandFooter": {
      "iconId": "cmdOpen",
      "isGroup": true,
      "title": "{{i18n.showObjectCommandTitle}}",
      "description": "{{i18n.OpenGroupCommandFooterDesc}}"
    },
    "Awp0SaveEdits": {
      "iconId": "cmdSave",
      "title": "{{i18n.saveEditsTitle}}",
      "description": "{{i18n.Awp0SaveEditsDesc}}"
    },
    "Awp0SaveEditSummaryHeader": {
      "iconId": "cmdSave",
      "title": "{{i18n.Awp0SaveEditsGroup}}",
      "description": "{{i18n.Awp0SaveEditsDesc}}",
      "isGroup": true
    },
    "Awp0CancelEdits": {
      "iconId": "cmdCancelEdit",
      "isGroup": false,
      "title": "{{i18n.cancelEditsTitle}}",
      "description": "{{i18n.Awp0CancelEdits}}"
    },
    "Awp0CancelEditsSummaryHeader": {
      "iconId": "cmdCancelEdit",
      "isGroup": true,
      "title": "{{i18n.cancel}}",
      "description": "{{i18n.Awp0CancelEdits}}"
    },
    "Awp0SaveEditsPWA": {
      "iconId": "cmdSave",
      "isGroup": false,
      "title": "{{i18n.saveEditsTitle}}",
      "description": "{{i18n.Awp0SaveEditsDesc}}"
    },
    "Awp0CancelEditsPWA": {
      "iconId": "cmdCancelEdit",
      "isGroup": false,
      "title": "{{i18n.cancelEditsTitle}}",
      "description": "{{i18n.Awp0CancelEditsPWADesc}}"
    },
    "Awp0CommandLabelToggle": {
      "iconId": "cmdIconLabel",
      "title": "{{i18n.Awp0CommandLabelToggleTitle}}",
      "description": "{{i18n.Awp0CommandLabelToggleDesc}}"
    },
    "Awp0AddReference": {
      "iconId": "",
      "title": ""
    },
    "Awp0AddProfilePicture": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.AddProfilePicture}}",
      "description": "{{i18n.Awp0AddProfilePictureDesc}}"
    },
    "Awp0ChangePassword": {
      "iconId": "cmdChangePassword",
      "title": "{{i18n.Awp0ChangePasswordTitle}}",
      "description": "{{i18n.Awp0ChangePasswordDesc}}"
    },
    "Awp0SelectAll": {
      "iconId": "cmdCheckmark",
      "title": "{{i18n.selectAll}}",
      "description": "{{i18n.Awp0SelectAllDesc}}"
    },
    "Awp0ObjectInfo": {
      "iconId": "cmdShowInfoPanel",
      "isGroup": false,
      "title": "{{i18n.objectInfoLabel}}",
      "description": "{{i18n.Awp0ObjectInfoDesc}}"
    },
    "Awp0DeselectAll": {
      "iconId": "cmdCheckmark",
      "title": "{{i18n.clearSelections}}",
      "description": "{{i18n.Awp0DeselectAllDesc}}"
    },
    "Awp0SelectAllObjectSet": {
      "iconId": "cmdCheckmark",
      "title": "{{i18n.selectAll}}",
      "description": "{{i18n.Awp0SelectAllDesc}}"
    },
    "Awp0DeselectAllObjectSet": {
      "iconId": "cmdCheckmark",
      "title": "{{i18n.clearSelections}}",
      "description": "{{i18n.Awp0DeselectAllDesc}}"
    },
    "Awp0EnableMultiSelect": {
      "iconId": "cmdMultiSelect",
      "title": "{{i18n.selectionMode}}",
      "description": "{{i18n.Awp0EnableMultiSelectDesc}}"
    },
    "Awp0DisableMultiSelect": {
      "iconId": "cmdMultiSelect",
      "title": "{{i18n.selectionMode}}",
      "description": "{{i18n.Awp0EnableMultiSelectDesc}}"
    },
    "Awp0EnableMultiSelectObjectSet": {
      "iconId": "cmdMultiSelect",
      "title": "{{i18n.selectionMode}}",
      "description": "{{i18n.Awp0EnableMultiSelectDesc}}"
    },
    "Awp0DisableMultiSelectObjectSet": {
      "iconId": "cmdMultiSelect",
      "title": "{{i18n.selectionMode}}",
      "description": "{{i18n.Awp0EnableMultiSelectDesc}}"
    },
    "Awp0ShowCreateObject": {
      "iconId": "cmdAdd",
      "title": "{{i18n.ADD_BUTTON_TITLE}}",
      "description": "{{i18n.Awp0ShowCreateObjectDesc}}"
    },
    "Awp0ShowAddObject": {
      "iconId": "cmdAdd",
      "title": "{{i18n.Awp0AddObjectTitle}}",
      "description": "{{i18n.Awp0ShowAddObjectDesc}}"
    },
    "Awp0Delete": {
      "iconId": "cmdDelete",
      "title": "{{i18n.delete}}",
      "description": "{{i18n.Awp0DeleteDesc}}"
    },
    "Awp0ExportDelete": {
      "iconId": "cmdDelete",
      "title": "{{i18n.delete}}",
      "description": "{{i18n.Awp0DeleteCommandDesc}}"
    },
    "Awp0Copy": {
      "iconId": "cmdCopy",
      "title": "{{i18n.Awp0CopyTitle}}",
      "description": "{{i18n.Awp0CopyDesc}}"
    },
    "Awp0CopyContextMenu": {
      "iconId": "cmdCopy",
      "title": "{{i18n.Awp0CopyTitle}}",
      "description": "{{i18n.Awp0CopyDesc}}"
    },
    "Awp0CopyDownloadLink": {
      "iconId": "cmdCopy",
      "title": "{{i18n.Awp0CopyFileLinkTitle}}",
      "description": "{{i18n.Awp0CopyDownloadLinkDesc}}"
    },
    "Awp0Paste": {
      "iconId": "cmdPaste",
      "title": "{{i18n.Awp0PasteGroup}}",
      "description": "{{i18n.Awp0PasteDesc}}"
    },
    "Awp0PasteContextMenu": {
      "iconId": "cmdPaste",
      "title": "{{i18n.Awp0PasteGroup}}",
      "description": "{{i18n.Awp0PasteDesc}}"
    },
    "Awp0ExportToExcel": {
      "iconId": "cmdExport",
      "title": "{{i18n.Awp0ExportToExcelTitle}}",
      "description": "{{i18n.Awp0ExportToExcelDesc}}"
    },
    "Awp0ExportSelectedColumnsAdd": {
      "iconId": "cmdAdd",
      "isGroup": false,
      "title": "{{i18n.addColumns}}",
      "description": "{{i18n.Awp0ExportSelectedColumnsAddDesc}}"
    },
    "Awp0MoveUpExcelColumn": {
      "iconId": "cmdMoveUp",
      "isGroup": false,
      "title": "{{i18n.MOVE_UP_BUTTON_TITLE}}",
      "description": "{{i18n.Awp0MoveUpExcelColumnDesc}}"
    },
    "Awp0MoveDownExcelColumn": {
      "iconId": "cmdMoveDown",
      "isGroup": false,
      "title": "{{i18n.MOVE_DOWN_BUTTON_TITLE}}",
      "description": "{{i18n.Awp0MoveDownExcelColumnDesc}}"
    },
    "arrangeShowAll": {
      "iconId": "cmdShow",
      "isGroup": false,
      "title": "{{i18n.arrangeShowCommon}}",
      "selected": {
        "iconId": "cmdShow",
        "title": "{{i18n.arrangeShowAll}}"
      },
      "description": "{{i18n.arrangeShowAllDesc}}"
    },
    "arrangeReset": {
      "iconId": "cmdReset",
      "isGroup": false,
      "title": "{{i18n.RESET_TEXT}}",
      "description": "{{i18n.arrangeResetDesc}}"
    },
    "arrangeMoveUp": {
      "iconId": "cmdMoveUp",
      "isGroup": false,
      "title": "{{i18n.arrangeMoveUp}}",
      "description": "{{i18n.arrangeMoveUpDesc}}"
    },
    "arrangeMoveDown": {
      "iconId": "cmdMoveDown",
      "isGroup": false,
      "title": "{{i18n.arrangeMoveDown}}",
      "description": "{{i18n.arrangeMoveDownDesc}}"
    },
    "arrangeAddColumns": {
      "iconId": "cmdChevronRight_uxRefresh",
      "isGroup": false,
      "title": "{{i18n.ADD_BUTTON_TITLE}}",
      "description": "{{i18n.arrangeAddColumnsDesc}}"
    },
    "arrangeRemoveColumns": {
      "iconId": "cmdChevronLeft_uxRefresh",
      "isGroup": false,
      "title": "{{i18n.REMOVE_BUTTON_TITLE}}",
      "description": "{{i18n.arrangeRemoveColumnsDesc}}"
    },
    "arrangeViewConfigs": {
      "iconId": "cmdColumnConfigurations",
      "isGroup": false,
      "title": "{{i18n.arrangeViewConfigs}}",
      "description": "{{i18n.arrangeViewConfigsDesc}}"
    },
    "deleteNamedColumnConfig": {
      "iconId": "cmdDelete",
      "title": "{{i18n.delete}}",
      "description": "{{i18n.deleteNamedColumnConfigDesc}}"
    },
    "Awp0ChangeOwner": {
      "iconId": "cmdChangeOwner",
      "title": "{{i18n.Awp0ChangeOwner}}",
      "description": "{{i18n.Awp0ChangeOwnerDesc}}"
    },
    "Awp0ShowCompactLayout": {
      "iconId": "cmdCompact",
      "title": "{{i18n.compactLayout}}",
      "description": "{{i18n.Awp0ShowCompactLayoutDesc}}"
    },
    "Awp0ShowComfyLayout": {
      "iconId": "cmdComfy",
      "title": "{{i18n.comfyLayout}}",
      "description": "{{i18n.Awp0ShowComfyLayoutDesc}}"
    },
    "Awp0CloseCommandPanel": {
      "iconId": "cmdClosePanel",
      "isGroup": false,
      "title": "{{i18n.COMMON_USER_SETTING_BAR_CLOSE}}",
      "description": "{{i18n.Awp0CloseCommandPanelDesc}}"
    },
    "Awp0PinCommandPanel": {
      "iconId": "cmdPin",
      "isGroup": false,
      "title": "{{i18n.addObjectPanelPinButtonToolTip}}",
      "description": "{{i18n.panelPinButtonDesc}}"
    },
    "Awp0UnpinCommandPanel": {
      "iconId": "cmdUnpin",
      "isGroup": false,
      "title": "{{i18n.addObjectPanelUnpinButtonToolTip}}",
      "description": "{{i18n.panelUnPinButtonDesc}}"
    },
    "Awp0EditGroup": {
      "iconId": "cmdEdit",
      "isRibbon": true,
      "title": "{{i18n.Awp0EditGroup}}",
      "description": "{{i18n.Awp0EditGroupDesc}}"
    },
    "Awp0ManageGroup": {
      "iconId": "cmdManage",
      "isRibbon": true,
      "title": "{{i18n.Awp0ManageGroup}}",
      "description": "{{i18n.Awp0ManageGroupDesc}}"
    },
    "Awp0MoreGroup": {
      "iconId": "cmdMore",
      "isRibbon": true,
      "title": "{{i18n.MORE_LINK_TEXT}}",
      "description": "{{i18n.MORE_LINK_TEXT}}"
    },
    "Awp0NewGroup": {
      "iconId": "cmdNew",
      "isRibbon": true,
      "title": "{{i18n.newTabTitle}}",
      "description": "{{i18n.Awp0NewGroupDesc}}"
    },
    "Awp0ShareGroup": {
      "iconId": "cmdShare",
      "isRibbon": true,
      "title": "{{i18n.Awp0ShareGroup}}",
      "description": "{{i18n.Awp0ShareGroupDesc}}"
    },
    "Awp0ViewGroup": {
      "iconId": "cmdShow",
      "isRibbon": true,
      "title": "{{i18n.Awp0ViewGroup}}",
      "description": "{{i18n.Awp0ViewGroupDesc}}"
    },
    "Awp0PasteGroup": {
      "iconId": "cmdPaste",
      "isGroup": true,
      "title": "{{i18n.Awp0PasteGroup}}",
      "description": "{{i18n.Awp0PasteGroupDesc}}"
    },
    "Awp0GoFavorites": {
      "iconId": "cmdFavorites",
      "title": "{{i18n.favoritesTitle}}",
      "description": "{{i18n.Awp0GoFavoritesDesc}}"
    },
    "Awp0Help": {
      "iconId": "cmdHelp",
      "title": "{{i18n.helpTitle}}",
      "description": "{{i18n.Awp0HelpDesc}}"
    },
    "Awp0HelpGroup": {
      "iconId": "cmdHelp",
      "isGroup": true,
      "title": "{{i18n.helpTitle}}",
      "description": "{{i18n.Awp0HelpGroupDesc}}"
    },
    "Awp0HelpAbout": {
      "iconId": "cmdHelp",
      "title": "{{i18n.helpAboutTitle}}",
      "description": "{{i18n.Awp0HelpAboutDesc}}"
    },
    "Awp0ShowObjectCellTitle": {
      "iconId": "cmdOpen",
      "title": ""
    },
    "Awp0OpenInNewTabCellTitle": {
      "iconId": "cmdOpenInNewTab",
      "title": "",
      "description": "{{i18n.Awp0OpenInNewTabCellTitleDesc}}"
    },
    "Awp0OpenInNewWindowCellTitle": {
      "iconId": "cmdOpen",
      "title": "",
      "description": "{{i18n.Awp0OpenInNewWindowCellTitleDesc}}"
    },
    "openArrangePanel": {
      "iconId": "",
      "title": "{{i18n.arrangeMenu}}",
      "description": "{{i18n.openArrangePanelDesc}}"
    },
    "Awp0ShowFileVersions": {
      "iconId": "cmdShowDatasetVersions",
      "title": "{{i18n.showFileVersions}}",
      "description": "{{i18n.showFileVersionsDesc}}"
    },
    "Awp0AddorRemoveLocales": {
      "iconId": "cmdAdd",
      "title": "{{i18n.addorRemoveLocales}}",
      "description": "{{i18n.addorRemoveLocalesDesc}}"
    },
    "Awp0RemoveLocale": {
      "iconId": "cmdDelete",
      "title": "{{i18n.removeLocale}}",
      "description": "{{i18n.removeLocaleDesc}}"
    },
    "Awp0EditLocalizationSingle": {
      "iconId": "cmdTranslate",
      "title": "{{i18n.editLocalizationSingle}}",
      "description": "{{i18n.editLocalizationSingleDesc}}"
    },
    "Awp0PLStats": {
      "iconId": "cmdPerformanceMonitor",
      "title": "{{i18n.plStatsTitle}}",
      "description": "{{i18n.plStatsDesc}}"
    },
    "Awp0EditInfoPanel": {
      "iconId": "cmdEdit",
      "title": "{{i18n.Awp0EditGroup}}",
      "description": "{{i18n.Awp0StartEditSummaryDesc}}"
    },
    "Awp0SaveInfoPanel": {
      "iconId": "cmdSave",
      "title": "{{i18n.Awp0SaveEditsGroup}}",
      "description": "{{i18n.Awp0SaveEditsDesc}}"
    },
    "Awp0CancelInfoPanel": {
      "iconId": "cmdCancelEdit",
      "title": "{{i18n.cancel}}",
      "description": "{{i18n.Awp0CancelEdits}}"
    },
    "Awp0RemoveProjectsCell": {
      "iconId": "cmdRemove",
      "isGroup": false,
      "title": "{{i18n.removeProjectTitle}}",
      "description": "{{i18n.Awp0RemoveProjectsCellDesc}}"
    },
    "uiwidgetAddProjectCmd": {
      "iconId": "cmdAdd",
      "title": "{{i18n.addProjectButtonTitle}}",
      "description": "{{i18n.uiwidgetAddcmdDesc}}"
    },
    "uvCheckout": {
      "iconId": "cmdCheckout",
      "title": "{{i18n.uvCheckoutTitle}}",
      "description": "{{i18n.uvCheckoutDesc}}"
    },
    "uvCancelCheckout": {
      "iconId": "cmdCancelCheckout",
      "title": "{{i18n.cancelCheckoutTitle}}",
      "description": "{{i18n.Awp0CancelCheckoutDesc}}"
    },
    "uvCheckin": {
      "iconId": "cmdCheckin",
      "title": "{{i18n.uvCheckinTitle}}",
      "description": "{{i18n.Awp0CheckinDesc}}"
    },
    "Awp0ShowObjectForUV": {
      "iconId": "cmdOpen",
      "isGroup": false,
      "title": "{{i18n.Awp0ShowObjectTitle}}",
      "description": "{{i18n.Awp0ShowObjectForUVpDesc}}"
    },
    "Awp0ViewFileForUV": {
      "iconId": "cmdOpen",
      "isGroup": false,
      "title": "{{i18n.Awp0ViewFileTitle}}",
      "description": "{{i18n.Awp0ViewFileForUVDesc}}"
    },
    "Awp0OpenInNewWindowForUV": {
      "iconId": "cmdOpen",
      "isGroup": false,
      "title": "{{i18n.Awp0OpenInNewWindowTitle}}",
      "description": "{{i18n.Awp0OpenInNewWindowDesc}}"
    },
    "Awp0OpenInNewTabForUV": {
      "iconId": "cmdOpen",
      "isGroup": false,
      "title": "{{i18n.Awp0OpenInNewTabTitle}}",
      "description": "{{i18n.Awp0OpenInNewTabDesc}}"
    },
    "objectSetViewModeGroup": {
      "isShuttle": true
    },
    "objectSetListViewMode": {
      "iconId": "cmdListView",
      "title": "{{i18n.showListViewText}}",
      "description": "{{i18n.Awp0ShowListViewDesc}}"
    },
    "objectSetTableViewMode": {
      "iconId": "cmdTableView",
      "title": "{{i18n.showTableViewText}}",
      "description": "{{i18n.Awp0ShowTableViewDesc}}"
    },
    "objectSetCompareViewMode": {
      "iconId": "cmdCompareView",
      "title": "{{i18n.compareTitle}}",
      "description": "{{i18n.objectSetCompareViewModeDesc}}"
    },
    "objectSetImageViewMode": {
      "iconId": "cmdImage",
      "title": "{{i18n.showImageViewText}}",
      "description": "{{i18n.Awp0ShowImageViewDesc}}"
    },
    "Awp0TablePropertyCreate": {
      "iconId": "cmdAdd",
      "title": "{{i18n.ADD_BUTTON_TITLE}}"
    },
    "Awp0TablePropertyDuplicate": {
      "iconId": "cmdDuplicate",
      "title": "{{i18n.Awp0TablePropertyDuplicateTitle}}"
    },
    "Awp0TablePropertyRemove": {
      "iconId": "cmdRemove",
      "title": "{{i18n.REMOVE_BUTTON_TITLE}}"
    },
    "Awp0NameValueCreate": {
      "iconId": "cmdAdd",
      "title": "{{i18n.ADD_BUTTON_TITLE}}",
      "hasDialog": true
    },
    "Awp0NameValueRemove": {
      "iconId": "cmdRemove",
      "title": "{{i18n.REMOVE_BUTTON_TITLE}}"
    },
    "Awp0StartEditXRTEditor": {
      "iconId": "cmdEdit",
      "isGroup": false,
      "title": "{{i18n.Awp0StartEditTitle}}"
    },
    "Awp0CancelEditXRTEditor": {
      "iconId": "cmdCancelEdit",
      "isGroup": false,
      "title": "{{i18n.cancelEditsTitle}}"
    },
    "Awp0SaveEditXRTEditor": {
      "iconId": "cmdSaveEdit",
      "isGroup": false,
      "title": "{{i18n.saveEditsTitle}}"
    },
    "GcStartEdit": {
      "iconId": "cmdEditDiagram",
      "isGroup": false,
      "title": "{{i18n.startEditCommandTitle}}"
    },
    "GcExitEdit": {
      "iconId": "cmdSaveDiagram",
      "isGroup": false,
      "title": "{{i18n.exitEditCommandTitle}}"
    },
    "graphLegend": {
      "iconId": "cmdShowRelationsControls",
      "isGroup": false,
      "title": "{{i18n.legendCommandTitle}}"
    },
    "GcLayoutCommandGroup": {
      "iconId": "cmdLayoutGroup",
      "isGroup": true,
      "title": "{{i18n.applyLayout}}"
    },
    "GcTopToBottomLayout": {
      "iconId": "cmdDownArrow",
      "isGroup": false,
      "title": "{{i18n.topToBottomLayout}}",
      "selected": {
        "iconId": "cmdDownArrow",
        "title": "{{i18n.topToBottomLayout}}"
      }
    },
    "GcRightToLeftLayout": {
      "iconId": "cmdLeftArrow",
      "isGroup": false,
      "title": "{{i18n.rightToLeftLayout}}",
      "selected": {
        "iconId": "cmdLeftArrow",
        "title": "{{i18n.rightToLeftLayout}}"
      }
    },
    "GcLeftToRightLayout": {
      "iconId": "cmdRightArrow",
      "isGroup": false,
      "title": "{{i18n.leftToRightLayout}}",
      "selected": {
        "iconId": "cmdRightArrow",
        "title": "{{i18n.leftToRightLayout}}"
      }
    },
    "GcBottomToTopLayout": {
      "iconId": "cmdUpArrow",
      "isGroup": false,
      "title": "{{i18n.bottomToTopLayout}}",
      "selected": {
        "iconId": "cmdUpArrow",
        "title": "{{i18n.bottomToTopLayout}}"
      }
    },
    "GcOrganicLayout": {
      "iconId": "cmdLayoutGroup",
      "isGroup": false,
      "title": "{{i18n.organicLayout}}",
      "selected": {
        "iconId": "cmdLayoutGroup",
        "title": "{{i18n.organicLayout}}"
      }
    },
    "GcBalloonLayout": {
      "iconId": "cmdLayoutGroup",
      "isGroup": false,
      "title": "{{i18n.balloonLayout}}",
      "selected": {
        "iconId": "cmdLayoutGroup",
        "title": "{{i18n.balloonLayout}}"
      }
    },
    "GcSnakeLayout": {
      "iconId": "cmdLayoutGroup",
      "isGroup": false,
      "title": "{{i18n.snakeLayout}}",
      "selected": {
        "iconId": "cmdLayoutGroup",
        "title": "{{i18n.snakeLayout}}"
      }
    },
    "GcIncrementalLayout": {
      "iconId": "cmdLayoutGroup",
      "isGroup": false,
      "title": "{{i18n.incrementalLayout}}",
      "selected": {
        "iconId": "cmdLayoutGroup",
        "title": "{{i18n.incrementalLayout}}"
      }
    },
    "Awv0Pan": {
      "iconId": "cmdPan",
      "isGroup": false,
      "title": "{{i18n.NavigationPanTitle}}",
      "description": "{{i18n.Awv0PanDesc}}"
    },
    "Awv0Rotate": {
      "iconId": "cmdRotate",
      "isGroup": false,
      "title": "{{i18n.NavigationRotateTitle}}",
      "description": "{{i18n.Awv0RotateDesc}}"
    },
    "Awv0Zoom": {
      "iconId": "cmdZoom",
      "isGroup": false,
      "title": "{{i18n.NavigationZoomTitle}}",
      "description": "{{i18n.Awv0ZoomDesc}}"
    },
    "Awv0AreaSelect": {
      "iconId": "cmdSelectAny",
      "isGroup": false,
      "title": "{{i18n.AreaSelectTitle}}",
      "extendedTooltip": {
        "view": "Awv0AreaSelectCommandExtendedTooltip"
      }
    },
    "ViewNavigationGroup": {
      "iconId": "cmdRotate",
      "isShuttle": true,
      "title": "{{i18n.3DNavigation}}",
      "description": "{{i18n.ViewNavigationGroupDesc}}"
    },
    "Awv0UvPan": {
      "iconId": "cmdPan",
      "isGroup": false,
      "title": "{{i18n.NavigationPanTitle}}"
    },
    "Awv0UvRotate": {
      "iconId": "cmdRotate",
      "isGroup": false,
      "title": "{{i18n.NavigationRotateTitle}}"
    },
    "Awv0UvZoom": {
      "iconId": "cmdZoom",
      "isGroup": false,
      "title": "{{i18n.NavigationZoomTitle}}"
    },
    "UvViewNavigationGroup": {
      "iconId": "cmdRotate",
      "isShuttle": true,
      "title": "{{i18n.3DNavigation}}"
    },
    "Awv0UseTransparency": {
      "iconId": "cmdUseTransparencyOn",
      "isGroup": false,
      "title": "{{i18n.UseTransparencyOnTitle}}",
      "selected": {
        "iconId": "cmdUseTransparencyOn",
        "title": "{{i18n.UseTransparencyOffTitle}}"
      },
      "description": "{{i18n.Awv0UseTransparencyDesc}}"
    },
    "MeasurementFilterGroup": {
      "iconId": "cmdSelectFeatures",
      "isShuttle": true,
      "title": "{{i18n.pickFilter}}",
      "description": "{{i18n.MeasurementFilterGroupDesc}}"
    },
    "Awv0ViewerSettings": {
      "iconId": "cmdDisplayOptions",
      "isGroup": false,
      "title": "{{i18n.ViewerSettingsPanelTitle}}",
      "description": "{{i18n.Awv0ViewerSettingsDesc}}",
      "hasDialog": true
    },
    "Awv0ViewOrientationGroup": {
      "iconId": "cmdOrientISO",
      "isGroup": true,
      "title": "{{i18n.standardViews}}",
      "description": "{{i18n.Awv0ViewOrientationGroupDesc}}"
    },
    "Awv0OrientIsometric": {
      "iconId": "cmdOrientISO",
      "isGroup": false,
      "title": "{{i18n.isometric}}",
      "description": "{{i18n.Awv0OrientIsometricDesc}}"
    },
    "Awv0OrientTrimetric": {
      "iconId": "cmdOrientNegative",
      "isGroup": false,
      "title": "{{i18n.trimetric}}",
      "description": "{{i18n.Awv0OrientTrimetricDesc}}"
    },
    "Awv0OrientTop": {
      "iconId": "cmdOrientTop",
      "isGroup": false,
      "title": "{{i18n.top}}",
      "description": "{{i18n.Awv0OrientTopDesc}}"
    },
    "Awv0OrientFront": {
      "iconId": "cmdOrientFront",
      "isGroup": false,
      "title": "{{i18n.front}}",
      "description": "{{i18n.Awv0OrientFrontDesc}}"
    },
    "Awv0OrientRight": {
      "iconId": "cmdOrientRight",
      "isGroup": false,
      "title": "{{i18n.right}}",
      "description": "{{i18n.Awv0OrientRightDesc}}"
    },
    "Awv0OrientBack": {
      "iconId": "cmdOrientBack",
      "isGroup": false,
      "title": "{{i18n.back}}",
      "description": "{{i18n.Awv0OrientBackDesc}}"
    },
    "Awv0OrientBottom": {
      "iconId": "cmdOrientBottom",
      "isGroup": false,
      "title": "{{i18n.bottom}}",
      "description": "{{i18n.Awv0OrientBottomDesc}}"
    },
    "Awv0OrientLeft": {
      "iconId": "cmdOrientLeft",
      "isGroup": false,
      "title": "{{i18n.left}}",
      "description": "{{i18n.Awv0OrientLeftDesc}}"
    },
    "UvAwv0ViewOrientationGroup": {
      "iconId": "cmdOrientISO",
      "isGroup": true,
      "title": "{{i18n.standardViews}}"
    },
    "UvAwv0OrientIsometric": {
      "iconId": "cmdOrientISO",
      "isGroup": false,
      "title": "{{i18n.isometric}}"
    },
    "UvAwv0OrientTrimetric": {
      "iconId": "cmdOrientTrimetric",
      "isGroup": false,
      "title": "{{i18n.trimetric}}"
    },
    "UvAwv0OrientTop": {
      "iconId": "cmdOrientTop",
      "isGroup": false,
      "title": "{{i18n.top}}"
    },
    "UvAwv0OrientFront": {
      "iconId": "cmdOrientFront",
      "isGroup": false,
      "title": "{{i18n.front}}"
    },
    "UvAwv0OrientRight": {
      "iconId": "cmdOrientRight",
      "isGroup": false,
      "title": "{{i18n.right}}"
    },
    "UvAwv0OrientBack": {
      "iconId": "cmdOrientBack",
      "isGroup": false,
      "title": "{{i18n.back}}"
    },
    "UvAwv0OrientBottom": {
      "iconId": "cmdOrientBottom",
      "isGroup": false,
      "title": "{{i18n.bottom}}"
    },
    "UvAwv0OrientLeft": {
      "iconId": "cmdOrientLeft",
      "isGroup": false,
      "title": "{{i18n.left}}"
    },
    "Awv0ViewerConvenienceCommandGroup": {
      "iconId": "cmdShow",
      "isGroup": true,
      "title": "{{i18n.visibilityControls}}",
      "description": "{{i18n.Awv0ViewerConvenienceCommandGroupDesc}}"
    },
    "Awv0AllOn": {
      "iconId": "cmdShow",
      "isGroup": false,
      "title": "{{i18n.allOn}}",
      "description": "{{i18n.Awv0AllOnDesc}}"
    },
    "Awv0AllOff": {
      "iconId": "cmdHide",
      "isGroup": false,
      "title": "{{i18n.allOff}}",
      "description": "{{i18n.Awv0AllOffDesc}}"
    },
    "Awv0SelectedOff": {
      "iconId": "cmdHideAll",
      "isGroup": false,
      "title": "{{i18n.selectedOff}}",
      "description": "{{i18n.Awv0SelectedOffDesc}}"
    },
    "Awv0SelectedOn": {
      "iconId": "cmdShowAll",
      "isGroup": false,
      "title": "{{i18n.selectedOn}}",
      "description": "{{i18n.Awv0SelectedOnDesc}}"
    },
    "Awv0SelectedOnly": {
      "iconId": "cmdShowAll",
      "isGroup": false,
      "title": "{{i18n.selectedOnly}}",
      "description": "{{i18n.Awv0SelectedOnlyDesc}}"
    },
    "Awv0SelectContext": {
      "iconId": "cmdShow",
      "isGroup": false,
      "title": "{{i18n.selectContext}}",
      "description": "{{i18n.Awv0SelectContextDesc}}"
    },
    "Awv0RemoveAnalysisResult": {
      "iconId": "cmdHideResults",
      "isGroup": false,
      "title": "{{i18n.removeAnalysisResult}}",
      "extendedTooltip": {
        "view": "Awv0RemoveAnalysisResultExtendedTooltip"
      }
    },
    "Awv0Fit": {
      "iconId": "cmdFitToWindow",
      "isGroup": false,
      "title": "{{i18n.fit}}",
      "description": "{{i18n.Awv0FitDesc}}"
    },
    "Awv0Close3DSubCommandsToolbar": {
      "iconId": "cmdClose",
      "isGroup": false,
      "title": "{{i18n.Close}}",
      "description": "{{i18n.Awv0Close3DSubCommandsToolbarDesc}}"
    },
    "rotateCW": {
      "iconId": "cmdRotate",
      "title": "{{i18n.rotateClockwise}}",
      "description": "{{i18n.rotateCWDesc}}"
    },
    "rotateCCW": {
      "iconId": "cmdRotateCounterClockwise",
      "title": "{{i18n.rotateCounterclockwise}}",
      "description": "{{i18n.rotateCCWDesc}}"
    },
    "uvTextWordWrap": {
      "iconId": "cmdWrapText",
      "title": "{{i18n.uvTextWordWrapTitle}}",
      "description": "{{i18n.uvTextWordWrapDesc}}"
    },
    "Awp0OpenVVI": {
      "iconId": "cmdOpen",
      "isGroup": false,
      "title": "{{i18n.openVVICommandTitle}}",
      "description": "{{i18n.Awp0OpenVVIDesc}}"
    },
    "Awp0ShowHomeFolder": {
      "iconId": "cmdFolder",
      "isGroup": false,
      "title": "{{i18n.homeFolderTitle}}",
      "description": "{{i18n.Awp0ShowHomeFolderDesc}}"
    },
    "Awp0UnPinObject": {
      "iconId": "cmdUnpin",
      "title": "{{i18n.unPinObjectCommandTitle}}",
      "description": "{{i18n.Awp0UnPinObject}}"
    },
    "Awp0PinObject": {
      "iconId": "cmdPin",
      "title": "{{i18n.pinObjectCommandTitle}}",
      "description": "{{i18n.Awp0PinObjectDesc}}"
    },
    "GoToUIComp": {
      "iconId": "cmdPanelBuilder",
      "title": "{{i18n.uiCompCommandTitle}}",
      "description": "{{i18n.uiCompCommandDesc}}"
    }
  },
  "commandHandlers": {
    "DigitalAssetsPanelCommandHandler": {
      "id": "DigitalAssetsPanel",
      "action": "DigitalAssetsPanelAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.DigitalAssetsPanelCommandCondition"
      }
    },
    "ImagePanelCommandHandler": {
      "id": "ImagePanel",
      "action": "DigitalAssetsPanelAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.ImagePanelCommandCondition"
      }
    },
    "cmdReplaceDigitalAssetCommandHandler": {
      "id": "cmdReplaceDigitalAsset",
      "action": "performDigitalAssetReplacement",
      "activeWhen": true,
      "visibleWhen": true
    },
    "cmdDeleteDigitalAssetCommandHandler": {
      "id": "cmdDeleteDigitalAsset",
      "action": "performDigitalAssetDelete",
      "activeWhen": true,
      "visibleWhen": true
    },
    "showObjectCellCommandHandler1": {
      "id": "showObjectCell1",
      "action": "performOpenObject",
      "activeWhen": true,
      "visibleWhen": true
    },
    "showObjectCellCommandHandler2": {
      "id": "showObjectCell2",
      "action": "performOpenObject",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Arm0ExportImportHandler": {
      "id": "Arm0ExportImport",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.exportImportExcelCommandCondition"
      }
    },
    "Arm0ExportHandler": {
      "id": "Arm0Export",
      "action": "Arm0ActivateExportToRoundTripExcelPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.exportExcelCommandCondition"
      }
    },
    "Arm0ImportHandler": {
      "id": "Arm0ImportExcel",
      "action": "Arm0ActivateImportPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.exportExcelCommandCondition"
      }
    },
    "Arm0SummaryTableExportHandler": {
      "id": "Arm0SummaryTableExport",
      "action": "Arm0ActivateExportToRoundTripExcelPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.exportSummaryTableExcelCommandCondition"
      }
    },
    "Arm0SummaryTableImportHandler": {
      "id": "Arm0SummaryTableImportExcel",
      "action": "Arm0ActivateImportPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.exportSummaryTableExcelCommandCondition"
      }
    },
    "Arm0DeletePropOnExportPanelCommandHandler": {
      "id": "Arm0DeletePropOnExportPanel",
      "action": "deletePropOnExportPanel",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Arm0SelectedColmnsSubAddCmdHandler": {
      "id": "Arm0SelectedColmnsSubAddCmd",
      "action": "Arm0SelectedColmnsSubAddCmdPanelAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Arm0MoveUpExcelColumnHandler": {
      "id": "Arm0MoveUpExcelColumn",
      "action": "moveUp",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "condiitions.enableMoveUpExcelColumnCmd"
      }
    },
    "Arm0MoveDownExcelColumnHandler": {
      "id": "Arm0MoveDownExcelColumn",
      "action": "moveDown",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.enableMoveDownExcelColumnCmd"
      }
    },
    "cmdAddToFavoritesCommandHandler": {
      "id": "Awp0AddToFavorites",
      "action": "addFavorites",
      "activeWhen": {
        "condition": "conditions.AddToFavoritesVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.AddToFavoritesVisibility"
      }
    },
    "cmdRemoveFromFavoritesCommandHandler": {
      "id": "Awp0RemoveFromFavorites",
      "action": "removeFavorites",
      "activeWhen": {
        "condition": "conditions.RemoveFromFavoritesVisibility"
      },
      "visibleWhen": {
        "condition": "conditions.RemoveFromFavoritesVisibility"
      }
    },
    "HostingSetRevisionRuleCommandHandler": {
      "id": "HostingSetRevisionRule",
      "action": "HostingSetRevisionRuleActionSoa",
      "activeWhen": {
        "condition": "conditions.IsHostingEnabled"
      },
      "visibleWhen": true
    },
    "Awp0OpenHostedHandler": {
      "id": "Awp0OpenHosted",
      "action": "Awp0OpenHostedAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.OpenHostedEnabled"
      }
    },
    "Awp0OpenNewViewHostedHandler": {
      "id": "Awp0OpenNewViewHosted",
      "action": "Awp0OpenNewViewHostedAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.OpenNewViewHostedEnabled"
      }
    },
    "Awp0AddComponentHostedHandler": {
      "id": "Awp0AddComponentHosted",
      "action": "Awp0AddComponentHostedAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.AddComponentHostedEnabled"
      }
    },
    "Awp0EditInfoPanelHostedHandler": {
      "id": "Awp0EditInfoPanel",
      "action": "startEditInfoPanel",
      "activeWhen": {
        "condition": "conditions.isEditButtonVisibleHosted"
      },
      "visibleWhen": {
        "condition": "conditions.isEditButtonVisibleHosted"
      }
    },
    "Awp0SaveInfoPanelHostedHandler": {
      "id": "Awp0SaveInfoPanel",
      "action": "saveEditInfoPanel",
      "activeWhen": {
        "condition": "conditions.isSaveButtonVisibleHosted"
      },
      "visibleWhen": {
        "condition": "conditions.isSaveButtonVisibleHosted"
      }
    },
    "Awp0CancelInfoPanelHostedHandler": {
      "id": "Awp0CancelInfoPanel",
      "action": "cancelEditInfoPanel",
      "activeWhen": {
        "condition": "conditions.isCancelButtonVisibleHosted"
      },
      "visibleWhen": {
        "condition": "conditions.isCancelButtonVisibleHosted"
      }
    },
    "ReplaceDatasetCommandHandler": {
      "id": "Awp0ReplaceDataset",
      "action": "isDSMEnabled",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.alertReplaceCommandVisible"
      }
    },
    "awp0FileUploadCommandHandler": {
      "id": "FileUpload",
      "action": "fileUploadCommandActivatePanel",
      "activeWhen": true,
      "visibleWhen": true
    },
    "awp0FileDownloadCommandHandler": {
      "id": "FileDownloadForSelectedFile",
      "action": "downloadImanFile",
      "activeWhen": true
    },
    "Awp0ShowFileVersions": {
      "id": "Awp0ShowFileVersions",
      "action": "openFileVersionsPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isDatasetSelected"
      }
    },
    "Awp0CreateAlternateIdHandler": {
      "id": "Awp0CreateAlternateId",
      "action": "openCreateAlternateIdPanel",
      "activeWhen": {
        "condition": "conditions.cmdShowAlternateIdCommand"
      },
      "visibleWhen": {
        "condition": "conditions.cmdShowAlternateIdCommand"
      }
    },
    "Awp0CreateAliasIdHandler": {
      "id": "Awp0CreateAliasId",
      "action": "openCreateAliasIdPanel",
      "activeWhen": {
        "condition": "conditions.cmdShowAliasIdCommand"
      },
      "visibleWhen": {
        "condition": "conditions.cmdShowAliasIdCommand"
      }
    },
    "Awp0CreateDispRuleHandler": {
      "id": "Awp0CreateDispRule",
      "action": "openCreateDispRulePanel",
      "activeWhen": {
        "condition": "conditions.cmdShowDisplayRuleCommand"
      },
      "visibleWhen": {
        "condition": "conditions.cmdShowDisplayRuleCommand"
      }
    },
    "Awp0IdDispRuleAdminInfoCommandHandler": {
      "id": "Awp0IdDispRuleAdminInfo",
      "action": "Awp0IdDispRuleAdminInfoCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.idDispRuleAdminInfoCmdVisible"
      }
    },
    "signOutHandler": {
      "id": "cmdSignOut",
      "action": "signOut",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.signOutVisible"
      }
    },
    "profileHandler": {
      "id": "cmdViewProfile",
      "action": "viewProfile",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0CloseCommandPanelHandler": {
      "id": "Awp0CloseCommandPanel",
      "action": "closeCommandPanelOrDialog",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0CloseFileUploadCommandPanelHandler": {
      "id": "Awp0CloseCommandPanel",
      "activeWhen": {
        "condition": "conditions.fileUploadPanelInsideInfoPanelOpen"
      },
      "visibleWhen": false
    },
    "Awp0PinCommandPanelHandler": {
      "id": "Awp0PinCommandPanel",
      "action": "pinUnpinCommandPanelAction",
      "activeWhen": {
        "condition": "conditions.isPinEnabled"
      },
      "visibleWhen": {
        "condition": "conditions.isPinEnabled"
      }
    },
    "Awp0UnpinCommandPanelHandler": {
      "id": "Awp0UnpinCommandPanel",
      "action": "pinUnpinCommandPanelAction",
      "activeWhen": {
        "condition": "conditions.isUnpinEnabled"
      },
      "visibleWhen": {
        "condition": "conditions.isUnpinEnabled"
      }
    },
    "cmdQuickAccessHandler": {
      "id": "cmdQuickAccess",
      "action": "quickAccessAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0GoHomeCommandHandler": {
      "id": "Awp0GoHome",
      "action": "goHome",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.goHomeVisibility"
      }
    },
    "Awp0SignOutCommandHandler": {
      "id": "Awp0SignOut",
      "action": "signOut",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.signOutVisibility"
      }
    },
    "Awp0CutCommandHandler": {
      "id": "Awp0Cut",
      "action": "cutConfiguredRevs",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.cutVisibility"
      }
    },
    "Awp0CutContextMenuCommandHandler": {
      "id": "Awp0CutContextMenu",
      "action": "cutConfiguredRevs",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.cutVisibility"
      }
    },
    "Awp0CutContextMenuForImanFileCommandHandler": {
      "id": "Awp0CutContextMenu",
      "action": "cutConfiguredRevs",
      "activeWhen": {
        "condition": "conditions.isImanFile"
      },
      "visibleWhen": false
    },
    "checkoutHandler": {
      "id": "Awp0Checkout",
      "action": "isDirty",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.checkoutVisibility"
      }
    },
    "checkinHandler": {
      "id": "Awp0Checkin",
      "action": "checkEditInProgressBeforeCheckin",
      "activeWhen": {
        "condition": "conditions.checkSelections"
      },
      "visibleWhen": {
        "condition": "conditions.checkinVisibility"
      }
    },
    "redLineModeHandler": {
      "id": "Awp0RedLineMode",
      "action": "handleRedLineMode",
      "activeWhen": {
        "condition": "conditions.isRedLineFeatureEnabled"
      },
      "visibleWhen": {
        "condition": "conditions.isRedLineCmdVisible"
      },
      "selectWhen": {
        "condition": "conditions.isDisableRedLineCmdVisible"
      }
    },
    "cancelCheckoutHandler": {
      "id": "Awp0CancelCheckout",
      "action": "getCancelCheckoutInputs",
      "activeWhen": {
        "condition": "conditions.checkSelections"
      },
      "visibleWhen": {
        "condition": "conditions.cancelCheckoutVisibility"
      }
    },
    "saveAsHandler": {
      "id": "Awp0ShowSaveAs",
      "action": "saveAsContext",
      "activeWhen": {
        "condition": "conditions.showSaveAs"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.showSaveAs"
      }
    },
    "reviseHandler": {
      "id": "Awp0ShowRevise",
      "action": "reviseContext",
      "activeWhen": {
        "condition": "conditions.showRevise"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.showRevise"
      }
    },
    "Awp0ShowObjectCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "showObject",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.cmdOpenBaseVisibleCondition"
      }
    },
    "Awp0ShowObjectFromCommandArgsCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "showObjectFromCommandArgs",
      "activeWhen": {
        "condition": "conditions.cmdOpenFromCommandArgsActiveCondition"
      },
      "visibleWhen": {
        "condition": "conditions.cmdOpenBaseVisibleCondition"
      }
    },
    "Awp0OpenInRACCommndHandler": {
      "id": "Awp0OpenInRAC",
      "action": "Awp0OpenInRACCommndAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0OpenInRACCommandCondition"
      }
    },
    "Awp0OpenTabCommandHandler": {
      "id": "Awp0OpenInNewTab",
      "action": "openInNewTab",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.cmdOpenInNewTabCommandActive"
      }
    },
    "Awp0OpenWindowCommandHandler": {
      "id": "Awp0OpenInNewWindow",
      "action": "openInNewWindow",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.cmdOpenInNewWindowCommandActive"
      }
    },
    "Awp0ShareURLCommandHandler": {
      "id": "Awp0ShareURL",
      "action": "shareURL",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.cmdShareURLCommandVisible"
      }
    },
    "Awp0ShowObjectCellHandler": {
      "id": "Awp0ShowObjectCell",
      "action": "showHoveredObject",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.cmdAwp0ShowObjectCellBaseVisibleCondition"
      }
    },
    "Awp0ShowObjectCellForObjectNavigationHandler": {
      "id": "Awp0ShowObjectCellForObjectNavigation",
      "action": "showHoveredObject",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.cmdAwp0ShowObjectCellForObjectNavigationBaseVisibleCondition"
      }
    },
    "Awp0ShowObjectCellDatasetHandler": {
      "id": "Awp0ShowObjectCellDataset",
      "action": "getModelObjectFromCommandContextVmo",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.cmdAwp0ShowObjectCellDatasetBaseVisibleCondition"
      }
    },
    "Awp0ViewFileCommandHandler": {
      "id": "Awp0ViewFile",
      "action": "checkIsDSMUsableForDownload",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.cmdAwp0ViewFileBaseVisibleCondition"
      }
    },
    "Awp0NavigateObjectHandler": {
      "id": "Awp0NavigateObject",
      "action": "navigateHoveredFolder",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.cmdNavigateObjectBaseVisibleCondition"
      }
    },
    "Awp0StartEditCommandHandler": {
      "id": "Awp0StartEdit",
      "action": "startEditSummary",
      "activeWhen": {
        "condition": "conditions.isStartEditAllowed"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isStartEditAllowed"
      }
    },
    "StartEditGroupCommandHandler": {
      "id": "StartEditGroupCommand",
      "action": "",
      "activeWhen": {
        "condition": "conditions.isStartEditGroupCommandAllowed"
      },
      "visibleWhen": {
        "condition": "conditions.isStartEditGroupCommandAllowed"
      }
    },
    "Awp0StartEditSummaryCommandHandler": {
      "id": "Awp0StartEditSummary",
      "action": "startEditSummary",
      "activeWhen": {
        "condition": "conditions.isStartEditSummaryAllowed"
      },
      "visibleWhen": {
        "condition": "conditions.isStartEditSummaryAllowed"
      }
    },
    "Awp0StartEditTableCommandHandler": {
      "id": "Awp0StartEditTable",
      "action": "startEditTable",
      "activeWhen": {
        "condition": "conditions.isStartEditTableAllowed"
      },
      "visibleWhen": {
        "condition": "conditions.isStartEditTableAllowed"
      }
    },
    "OpenGroupCommandHandler": {
      "id": "Awp0OpenGroup",
      "activeWhen": true,
      "visibleWhen": true
    },
    "OpenGroupCommandHandlerFooter": {
      "id": "OpenGroupCommandFooter",
      "activeWhen": true
    },
    "saveEditsHandler": {
      "id": "Awp0SaveEdits",
      "action": "saveEdits",
      "activeWhen": {
        "condition": "conditions.saveEditsCommandActive"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.saveEditsCommandActive"
      }
    },
    "saveEditsPWAHandler": {
      "id": "Awp0SaveEditsPWA",
      "action": "saveEdits",
      "activeWhen": {
        "condition": "conditions.saveEditsPWACommandActive"
      },
      "visibleWhen": {
        "condition": "conditions.saveEditsPWACommandActive"
      },
      "enableWhen": {
        "condition": "conditions.saveEditsPWACommandActive"
      }
    },
    "cancelEditsHandler": {
      "id": "Awp0CancelEdits",
      "action": "isDirtyOnCancelEdits",
      "activeWhen": {
        "condition": "conditions.cancelEditsCommandActive"
      },
      "visibleWhen": {
        "condition": "conditions.cancelEditsCommandActive"
      }
    },
    "cancelEditsPWAHandler": {
      "id": "Awp0CancelEditsPWA",
      "action": "isDirtyOnCancelEdits",
      "activeWhen": {
        "condition": "conditions.cancelEditsPWACommandActive"
      },
      "visibleWhen": {
        "condition": "conditions.cancelEditsPWACommandActive"
      },
      "enableWhen": {
        "condition": "conditions.cancelEditsPWACommandActive"
      }
    },
    "Awp0CommandLabelToggleCommandHandler": {
      "id": "Awp0CommandLabelToggle",
      "action": "toggleCommandLabels",
      "activeWhen": true,
      "visibleWhen": true,
      "selectWhen": {
        "condition": "conditions.isLabelShown"
      }
    },
    "Awp0ObjectInfoCommandHandler": {
      "id": "Awp0ObjectInfo",
      "action": "Awp0ObjectInfoCommandAction",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.cmdObjectInfoActive"
      },
      "visibleWhen": true
    },
    "Awp0AddReferenceCommandHandler": {
      "id": "Awp0AddReference",
      "activeWhen": true,
      "visibleWhen": false
    },
    "Awp0AddProfilePictureHandler": {
      "id": "Awp0AddProfilePicture",
      "action": "addProfilePicture",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.addProfilePictureVisibility"
      }
    },
    "Awp0ChangePasswordCommandHandler": {
      "id": "Awp0ChangePassword",
      "action": "Awp0ChangePasswordCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0ChangePasswordCommandCondition"
      }
    },
    "Awp0SelectAllHandler": {
      "id": "Awp0SelectAll",
      "action": "Awp0SelectAllCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0SelectAllCondition"
      }
    },
    "Awp0DeselectAllHandler": {
      "id": "Awp0DeselectAll",
      "action": "Awp0DeselectAllCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0DeselectAllCondition"
      }
    },
    "Awp0SelectAllObjectSetHandler": {
      "id": "Awp0SelectAllObjectSet",
      "action": "Awp0SelectAllObjectSetCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0SelectAllObjectSetCondition"
      }
    },
    "Awp0DeselectAllObjectSetHandler": {
      "id": "Awp0DeselectAllObjectSet",
      "action": "Awp0DeselectAllObjectSetCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0DeselectAllObjectSetCondition"
      }
    },
    "Awp0EnableMultiSelectObjectSetHandler": {
      "id": "Awp0EnableMultiSelectObjectSet",
      "action": "Awp0EnableMultiSelectObjectSetCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0MultiSelectObjectSetEnableCondition"
      }
    },
    "Awp0DisableMultiSelectObjectSetHandler": {
      "id": "Awp0DisableMultiSelectObjectSet",
      "action": "Awp0DisableMultiSelectObjectSetCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0MultiSelectObjectSetDisableCondition"
      },
      "selectWhen": true
    },
    "Awp0EnableMultiSelectHandler": {
      "id": "Awp0EnableMultiSelect",
      "action": "Awp0EnableMultiSelectCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0MultiSelectEnableCondition"
      }
    },
    "Awp0DisableMultiSelectHandler": {
      "id": "Awp0DisableMultiSelect",
      "action": "Awp0DisableMultiSelectCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0MultiSelectDisableCondition"
      },
      "selectWhen": true
    },
    "Awp0ShowCreateObjectHandler": {
      "id": "Awp0ShowCreateObject",
      "action": "registerAddContext",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.folderSelected"
      }
    },
    "Awp0ShowAddObjectHandler": {
      "id": "Awp0ShowAddObject",
      "action": "registerAddToContext",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.xrtIncludeAddCommand"
      },
      "selectWhen": {
        "condition": "conditions.isAddToOpenForCurrentObjectSet"
      }
    },
    "Awp0ShowAddObjectHandlerForObjectset": {
      "id": "Awp0ShowAddObject",
      "action": "registerAddToContext",
      "activeWhen": {
        "condition": "conditions.xrtIncludeAddCommandDCP"
      },
      "visibleWhen": false
    },
    "Awp0DeleteCommandHandler": {
      "id": "Awp0Delete",
      "action": "Awp0DeleteCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0DeleteCommandConditionVisible"
      }
    },
    "FileDeleteCommandHandler": {
      "id": "FileDelete",
      "action": "FileDeleteCommandAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0ExportDeleteCommandHandler": {
      "id": "Awp0ExportDelete",
      "action": "Awp0ExportDeleteCommandAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0CopyCommandHandler": {
      "id": "Awp0Copy",
      "action": "copyObject",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.cmdCopyCommandVisible"
      }
    },
    "Awp0CopyContextMenuCommandHandler": {
      "id": "Awp0CopyContextMenu",
      "action": "copyObjectContextMenu",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.cmdCopyCommandVisible"
      }
    },
    "Awp0CopyContextMenuForImanFileCommandHandler": {
      "id": "Awp0CopyContextMenu",
      "action": "copyObject",
      "activeWhen": {
        "condition": "conditions.isImanFile"
      },
      "visibleWhen": false
    },
    "Awp0CopyDownloadLinkCommandHandler": {
      "id": "Awp0CopyDownloadLink",
      "action": "prepareAndCopyDatasetDownloadURL",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.cmdCopyFileDwnldLinkCmdVisible"
      },
      "enableWhen": {
        "condition": "conditions.cmdCopyFileDwnldLinkCmdVisible"
      }
    },
    "Awp0CopyDownloadLinkForImanFileCommandHandler": {
      "id": "Awp0CopyDownloadLink",
      "action": "prepareAndCopyDatasetDownloadURL",
      "activeWhen": {
        "condition": "conditions.isImanFile"
      },
      "visibleWhen": false
    },
    "arrangeShowAllCommandHandler": {
      "id": "arrangeShowAll",
      "action": "arrangeShowAll",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.arrangeShowAllEnable"
      },
      "visibleWhen": {
        "condition": "conditions.arrangeShowAllVisible"
      },
      "selectWhen": {
        "condition": "conditions.arrangeShowAllSelected"
      }
    },
    "arrangeResetCommandHandler": {
      "id": "arrangeReset",
      "action": "arrangeReset",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.arrangeResetVisible"
      }
    },
    "arrangeMoveUpCommandHandler": {
      "id": "arrangeMoveUp",
      "action": "arrangeMoveUp",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.arrangeMoveUpEnable"
      }
    },
    "arrangeMoveDownCommandHandler": {
      "id": "arrangeMoveDown",
      "action": "arrangeMoveDown",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.arrangeMoveDownEnable"
      }
    },
    "arrangeAddColumnsCommandHandler": {
      "id": "arrangeAddColumns",
      "action": "arrangeAddColumns",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.arrangeAddColumnsEnable"
      }
    },
    "arrangeRemoveColumnsCommandHandler": {
      "id": "arrangeRemoveColumns",
      "action": "arrangeRemoveColumns",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.arrangeRemoveColumnsEnable"
      }
    },
    "arrangeViewConfigsCommandHandler": {
      "id": "arrangeViewConfigs",
      "action": "arrangeViewConfigs",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": true
    },
    "deleteNamedColumnConfigCommandHandler": {
      "id": "deleteNamedColumnConfig",
      "action": "deleteNamedColumnConfigCommandAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.deleteNamedColumnConfigVisible"
      }
    },
    "Awp0ChangeOwnerHandler": {
      "id": "Awp0ChangeOwner",
      "action": "openChangeOwnerPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0ChangeOwnerVisibleCondition"
      }
    },
    "Awp0PasteHandler": {
      "id": "Awp0Paste",
      "action": "pasteContentsFromClipboard",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.awp0PasteVisibleCondition"
      }
    },
    "Awp0PasteContextMenuCmdHandler": {
      "id": "Awp0PasteContextMenu",
      "action": "pasteContentsFromClipboard",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.awp0PasteContextMenuVisibleCondition"
      }
    },
    "Awp0PasteObjectSetHandler": {
      "id": "Awp0Paste",
      "action": "getModelTypeRelationForPaste",
      "activeWhen": {
        "condition": "conditions.awp0PasteToObjectSetActiveCondition"
      },
      "enableWhen": {
        "condition": "conditions.awp0PasteToObjectSetVisibleCondition"
      },
      "visibleWhen": true
    },
    "Awp0PasteContextMenuObjectSetHandler": {
      "id": "Awp0PasteContextMenu",
      "action": "getModelTypeRelationForPaste",
      "activeWhen": {
        "condition": "conditions.awp0PasteToObjectSetActiveCondition"
      },
      "visibleWhen": {
        "condition": "conditions.awp0PasteToObjectSetVisibleCondition"
      }
    },
    "Awp0PasteObjectSetDCPHandler": {
      "id": "Awp0Paste",
      "action": "getModelTypeRelationForPaste",
      "activeWhen": {
        "condition": "conditions.awp0PasteToObjectSetDCPActiveCondition"
      },
      "visibleWhen": false
    },
    "Awp0PasteContextMenuObjectSetDCPHandler": {
      "id": "Awp0PasteContextMenu",
      "action": "getModelTypeRelationForPaste",
      "activeWhen": {
        "condition": "conditions.awp0PasteToObjectSetDCPActiveCondition"
      },
      "visibleWhen": false
    },
    "Awp0ExportToExcelHandler": {
      "id": "Awp0ExportToExcel",
      "action": "activateExportToExcelPanel",
      "activeWhen": {
        "condition": "conditions.awp0ExportToExcelVisibleCondition"
      },
      "visibleWhen": {
        "condition": "conditions.awp0ExportToExcelVisibleCondition"
      },
      "selectWhen": {
        "condition": "conditions.isExportToExcelForCurrentObjectSet"
      }
    },
    "Awp0ExportSelectedColumnsAddHandler": {
      "id": "Awp0ExportSelectedColumnsAdd",
      "action": "exportSelectedColumnsAddPanelAction",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0MoveUpExcelColumnHandler": {
      "id": "Awp0MoveUpExcelColumn",
      "action": "exportMoveUp",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.exportVisibleMoveUpColumn"
      }
    },
    "Awp0MoveDownExcelColumnHandler": {
      "id": "Awp0MoveDownExcelColumn",
      "action": "exportMoveDown",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.exportVisibleMoveDownColumn"
      }
    },
    "Awp0ShowCompactLayoutHandler": {
      "id": "Awp0ShowCompactLayout",
      "action": "setCompactLayout",
      "activeWhen": true,
      "visibleWhen": true,
      "selectWhen": {
        "condition": "conditions.isCompactLayout"
      }
    },
    "Awp0ShowComfyLayoutHandler": {
      "id": "Awp0ShowComfyLayout",
      "action": "setComfyLayout",
      "activeWhen": true,
      "visibleWhen": true,
      "selectWhen": {
        "condition": "conditions.isComfyLayout"
      }
    },
    "Awp0EditGroupCommandHandler": {
      "id": "Awp0EditGroup",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": true
    },
    "Awp0ManageGroupCommandHandler": {
      "id": "Awp0ManageGroup",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": true
    },
    "Awp0MoreGroupCommandHandler": {
      "id": "Awp0MoreGroup",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": true
    },
    "Awp0NewGroupCommandHandler": {
      "id": "Awp0NewGroup",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": true
    },
    "Awp0ShareGroupCommandHandler": {
      "id": "Awp0ShareGroup",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": true
    },
    "Awp0ViewGroupCommandHandler": {
      "id": "Awp0ViewGroup",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": true
    },
    "Awp0GoFavoritesHandler": {
      "id": "Awp0GoFavorites",
      "action": "showFavorites",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0HelpHandler": {
      "id": "Awp0Help",
      "action": "showHelp",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0HelpAboutHandler": {
      "id": "Awp0HelpAbout",
      "action": "showHelpAbout",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0ShowObjectCellTitleHandler": {
      "id": "Awp0ShowObjectCellTitle",
      "action": "showHoveredObject",
      "activeWhen": {
        "condition": "conditions.cmdAwp0ShowObjectCellBaseVisibleCondition"
      },
      "visibleWhen": {
        "condition": "conditions.cmdAwp0ShowObjectCellBaseVisibleCondition"
      }
    },
    "Awp0ShowObjectCellTitleDatasetHandler": {
      "id": "Awp0ShowObjectCellTitle",
      "action": "getModelObjectFromCommandContextVmo",
      "activeWhen": {
        "condition": "conditions.cmdAwp0ShowObjectCellDatasetBaseVisibleCondition"
      },
      "visibleWhen": {
        "condition": "conditions.cmdAwp0ShowObjectCellDatasetBaseVisibleCondition"
      }
    },
    "Awp0OpenInNewTabCellTitleCommandHandler": {
      "id": "Awp0OpenInNewTabCellTitle",
      "action": "openInNewTabCellTitle",
      "activeWhen": true,
      "visibleWhen": true
    },
    "Awp0OpenInNewWindowCellTitleCommandHandler": {
      "id": "Awp0OpenInNewWindowCellTitle",
      "action": "openInNewWindowCellTitle",
      "activeWhen": true,
      "visibleWhen": true
    },
    "openArrangePanelCommandHandler": {
      "id": "openArrangePanel",
      "action": "processArrangeSettings",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.isOpenArrangePanelEnabled"
      },
      "visibleWhen": {
        "condition": "conditions.isOpenArrangePanelVisible"
      }
    },
    "Awp0AddorRemoveLocalesHandler": {
      "id": "Awp0AddorRemoveLocales",
      "action": "addorRemoveLocalesAction",
      "activeWhen": true,
      "enableWhen": true,
      "visibleWhen": true
    },
    "Awp0RemoveLocaleHandler": {
      "id": "Awp0RemoveLocale",
      "action": "removeLocaleAction",
      "activeWhen": true,
      "enableWhen": true,
      "visibleWhen": true
    },
    "Awp0EditLocalizationSingleHandler": {
      "id": "Awp0EditLocalizationSingle",
      "action": "isDirtyOnEditLocalization",
      "activeWhen": true,
      "enableWhen": {
        "condition": "conditions.isPropertyLocalizable"
      },
      "visibleWhen": {
        "condition": "conditions.isPropertyLocalizable"
      }
    },
    "Awp0PLStatsCommandHandler": {
      "id": "Awp0PLStats",
      "action": "enablePLStats",
      "activeWhen": true,
      "visibleWhen": true,
      "selectWhen": {
        "condition": "conditions.plStatsEnabled"
      }
    },
    "Awp0EditInfoPanelCommandHandler": {
      "id": "Awp0EditInfoPanel",
      "action": "startEditInfoPanel",
      "activeWhen": {
        "condition": "conditions.isEditButtonVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isEditButtonVisible"
      }
    },
    "Awp0SaveInfoPanelCommandHandler": {
      "id": "Awp0SaveInfoPanel",
      "action": "saveEditInfoPanel",
      "activeWhen": {
        "condition": "conditions.isSaveButtonVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isSaveButtonVisible"
      }
    },
    "Awp0CancelInfoPanelCommandHandler": {
      "id": "Awp0CancelInfoPanel",
      "action": "cancelEditInfoPanel",
      "activeWhen": {
        "condition": "conditions.isCancelButtonVisible"
      },
      "visibleWhen": {
        "condition": "conditions.isCancelButtonVisible"
      }
    },
    "removeProjCellCommandHandler": {
      "id": "Awp0RemoveProjectsCell",
      "action": "removeProjectCellCmdAction",
      "activeWhen": {
        "condition": "conditions.removeProjectsCmdCond"
      },
      "visibleWhen": {
        "condition": "conditions.removeProjectsCmdCond"
      }
    },
    "uiwidgetAddProjectCmdHandler": {
      "id": "uiwidgetAddProjectCmd",
      "action": "uiwidgetAddProjectCmdActivatePanel",
      "activeWhen": true,
      "visibleWhen": true
    },
    "uvCheckoutHandler": {
      "id": "uvCheckout",
      "action": "preCheckoutViewer",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.uvCheckoutCmdCondition"
      }
    },
    "uvCancelCheckoutHandler": {
      "id": "uvCancelCheckout",
      "action": "preCancelCheckoutViewer",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.uvCancelCheckoutCmdCondition"
      }
    },
    "uvCheckinHandler": {
      "id": "uvCheckin",
      "action": "preCheckinViewer",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.uvCheckinCmdCondition"
      }
    },
    "Awp0ShowObjectForUVCommandHandler": {
      "id": "Awp0ShowObjectForUV",
      "action": "showDataSetForUV",
      "activeWhen": {
        "condition": "conditions.universalViewerPopupCommandsActive"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.universalViewerPopupCommandsActive"
      }
    },
    "Awp0ViewFileForUVCommandHandler": {
      "id": "Awp0ViewFileForUV",
      "action": "getModelObjectFromVMOForUV",
      "activeWhen": {
        "condition": "conditions.universalViewerPopupCommandsActive"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.universalViewerPopupCommandsActive"
      }
    },
    "Awp0OpenInNewWindowForUVCommandHandler": {
      "id": "Awp0OpenInNewWindowForUV",
      "action": "openInNewWindowForUV",
      "activeWhen": {
        "condition": "conditions.universalViewerPopupCommandsActive"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.universalViewerPopupCommandsActive"
      }
    },
    "Awp0OpenInNewTabForUVCommandHandler": {
      "id": "Awp0OpenInNewTabForUV",
      "action": "openInNewTabForUV",
      "activeWhen": {
        "condition": "conditions.universalViewerPopupCommandsActive"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.universalViewerPopupCommandsActive"
      }
    },
    "objectSetListViewMode": {
      "id": "objectSetListViewMode",
      "action": "changeObjectSetListView",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.objectSetSupportsListView"
      },
      "selectWhen": {
        "condition": "conditions.isObjectSetListView"
      }
    },
    "objectSetTableViewMode": {
      "id": "objectSetTableViewMode",
      "action": "changeObjectSetTableView",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.objectSetSupportsTableView"
      },
      "selectWhen": {
        "condition": "conditions.isObjectSetTableView"
      }
    },
    "objectSetCompareViewMode": {
      "id": "objectSetCompareViewMode",
      "action": "changeObjectSetCompareView",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.objectSetSupportsCompareView"
      },
      "selectWhen": {
        "condition": "conditions.isObjectSetCompareView"
      }
    },
    "objectSetImageViewMode": {
      "id": "objectSetImageViewMode",
      "action": "changeObjectSetImageView",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.objectSetSupportsImageView"
      },
      "selectWhen": {
        "condition": "conditions.isObjectSetImageView"
      }
    },
    "ShowObjectTablePropertyHandler": {
      "id": "Awp0ShowObjectCell",
      "action": "showHoveredObject",
      "activeWhen": {
        "condition": "conditions.showObjectTablePropertyActive"
      },
      "visibleWhen": false
    },
    "Awp0TablePropertyCreateCommandHandler": {
      "id": "Awp0TablePropertyCreate",
      "action": "createTablePropertyBatch",
      "activeWhen": {
        "condition": "conditions.cmdTablePropertyCreateActive"
      },
      "visibleWhen": true
    },
    "Awp0TablePropertyDuplicateCommandHandler": {
      "id": "Awp0TablePropertyDuplicate",
      "action": "duplicateTablePropertyBatch",
      "activeWhen": {
        "condition": "conditions.cmdTablePropertyDuplicateActive"
      },
      "visibleWhen": true
    },
    "Awp0TablePropertyRemoveCommandHandler": {
      "id": "Awp0TablePropertyRemove",
      "action": "removeTablePropertyBatch",
      "activeWhen": {
        "condition": "conditions.cmdTablePropertyRemoveActive"
      },
      "visibleWhen": true
    },
    "Awp0NameValueCreateCommandHandler": {
      "id": "Awp0NameValueCreate",
      "action": "createNameValuePropertyBatch",
      "activeWhen": {
        "condition": "conditions.cmdNameValuePropertyCreateActive"
      },
      "visibleWhen": true
    },
    "Awp0NameValueRemoveCommandHandler": {
      "id": "Awp0NameValueRemove",
      "action": "removeNameValuePropertyBatch",
      "activeWhen": {
        "condition": "conditions.cmdNameValuePropertyRemoveActive"
      },
      "visibleWhen": true
    },
    "Fnd0TableRowCutCommandHandler": {
      "id": "Awp0Cut",
      "activeWhen": {
        "condition": "conditions.tablePropertyRowSelected"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "Fnd0TableRowCutCtxMenuCommandHandler": {
      "id": "Awp0CutContextMenu",
      "activeWhen": {
        "condition": "conditions.tablePropertyRowSelected"
      },
      "visibleWhen": false
    },
    "Fnd0TableRowCopyCommandHandler": {
      "id": "Awp0Copy",
      "activeWhen": {
        "condition": "conditions.tablePropertyRowSelected"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "Fnd0TableRowCopyCtxMenuCommandHandler": {
      "id": "Awp0CopyContextMenu",
      "activeWhen": {
        "condition": "conditions.tablePropertyRowSelected"
      },
      "visibleWhen": false
    },
    "Fnd0TableRowPasteHandler": {
      "id": "Awp0Paste",
      "activeWhen": {
        "condition": "conditions.tablePropertyRowSelected"
      },
      "visibleWhen": true,
      "enableWhen": false
    },
    "Fnd0TableRowPasteCtxMenuHandler": {
      "id": "Awp0PasteContextMenu",
      "activeWhen": {
        "condition": "conditions.tablePropertyRowSelected"
      },
      "visibleWhen": false
    },
    "Awp0StartEditHandlerXRTEditor": {
      "id": "Awp0StartEditXRTEditor",
      "action": "startEditXRTEditor",
      "activeWhen": {
        "condition": "conditions.startEditAllowed"
      },
      "visibleWhen": {
        "condition": "conditions.startEditAllowed"
      }
    },
    "Awp0CancelEditHandlerXRTEditor": {
      "id": "Awp0CancelEditXRTEditor",
      "action": "cancelEditXRTEditor",
      "activeWhen": {
        "condition": "conditions.cancelEditAllowed"
      },
      "visibleWhen": {
        "condition": "conditions.cancelEditAllowed"
      }
    },
    "Awp0SaveEditHandlerXRTEditor": {
      "id": "Awp0SaveEditXRTEditor",
      "action": "saveEditXRTEditor",
      "activeWhen": {
        "condition": "conditions.saveEditAllowed"
      },
      "visibleWhen": {
        "condition": "conditions.saveEditAllowed"
      }
    },
    "GcShowStartEditHandler": {
      "id": "GcStartEdit",
      "action": "startEdit",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isGcStartEditCommandVisible"
      }
    },
    "GcShowExitEditHandler": {
      "id": "GcExitEdit",
      "action": "exitEdit",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isGcExitEditCommandVisible"
      }
    },
    "GcShowLegendHandler": {
      "id": "graphLegend",
      "action": "GcShowLegendPanel",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isGcVisibleLegend"
      }
    },
    "GcTopToBottomLayoutHandler": {
      "id": "GcTopToBottomLayout",
      "action": "setActiveLayoutAsTopToBottom",
      "activeWhen": {
        "condition": "conditions.cmdGcTopToBottomLayoutActive"
      },
      "visibleWhen": {
        "condition": "conditions.cmdGcTopToBottomLayoutActive"
      },
      "selectWhen": {
        "condition": "conditions.cmdGcTopToBottomLayoutSelected"
      }
    },
    "GcRightToLeftLayoutHandler": {
      "id": "GcRightToLeftLayout",
      "action": "setActiveLayoutAsRightToLeft",
      "activeWhen": {
        "condition": "conditions.cmdGcRightToLeftLayoutActive"
      },
      "visibleWhen": {
        "condition": "conditions.cmdGcRightToLeftLayoutActive"
      },
      "selectWhen": {
        "condition": "conditions.cmdGcRightToLeftLayoutSelected"
      }
    },
    "GcLeftToRightLayoutHandler": {
      "id": "GcLeftToRightLayout",
      "action": "setActiveLayoutAsLeftToRight",
      "activeWhen": {
        "condition": "conditions.cmdGcRightToLeftLayoutActive"
      },
      "visibleWhen": {
        "condition": "conditions.cmdGcLeftToRightLayoutActive"
      },
      "selectWhen": {
        "condition": "conditions.cmdGcLeftToRightLayoutSelected"
      }
    },
    "GcBottomToTopLayoutHandler": {
      "id": "GcBottomToTopLayout",
      "action": "setActiveLayoutAsBottomToTop",
      "activeWhen": {
        "condition": "conditions.cmdGcBottomToTopLayoutActive"
      },
      "visibleWhen": {
        "condition": "conditions.cmdGcBottomToTopLayoutActive"
      },
      "selectWhen": {
        "condition": "conditions.cmdGcBottomToTopLayoutSelected"
      }
    },
    "GcOrganicLayoutHandler": {
      "id": "GcOrganicLayout",
      "action": "setActiveLayoutAsOrganic",
      "activeWhen": {
        "condition": "conditions.cmdGcOrganicLayoutActive"
      },
      "visibleWhen": {
        "condition": "conditions.cmdGcOrganicLayoutActive"
      },
      "selectWhen": {
        "condition": "conditions.cmdGcOrganicLayoutSelected"
      }
    },
    "GcBalloonLayoutHandler": {
      "id": "GcBalloonLayout",
      "action": "setActiveLayoutAsBalloon",
      "activeWhen": {
        "condition": "conditions.cmdGcBalloonLayoutActive"
      },
      "visibleWhen": {
        "condition": "conditions.cmdGcBalloonLayoutActive"
      },
      "selectWhen": {
        "condition": "conditions.cmdGcBalloonLayoutSelected"
      }
    },
    "GcSnakeLayoutHandler": {
      "id": "GcSnakeLayout",
      "action": "setActiveLayoutAsSnake",
      "activeWhen": {
        "condition": "conditions.cmdGcSnakeLayoutActive"
      },
      "visibleWhen": {
        "condition": "conditions.cmdGcSnakeLayoutActive"
      },
      "selectWhen": {
        "condition": "conditions.cmdGcSnakeLayoutSelected"
      }
    },
    "GcIncrementalLayoutHandler": {
      "id": "GcIncrementalLayout",
      "action": "setActiveLayoutAsIncremental",
      "activeWhen": {
        "condition": "conditions.cmdGcIncrementalLayoutActive"
      },
      "visibleWhen": {
        "condition": "conditions.cmdGcIncrementalLayoutActive"
      },
      "selectWhen": {
        "condition": "conditions.cmdGcIncrementalLayoutSelected"
      }
    },
    "UseTransparencyOnCommandHandler": {
      "id": "Awv0UseTransparency",
      "action": "toggleUseTransparency",
      "activeWhen": {
        "condition": "conditions.isViewerRevealedAndIn3DMode"
      },
      "visibleWhen": true,
      "selectWhen": {
        "condition": "conditions.useTransparencySelectionDisplay"
      },
      "enableWhen": {
        "condition": "conditions.isViewerRevealedAndIn3DMode"
      }
    },
    "MeasurementFilterGroupCommandHandler": {
      "id": "MeasurementFilterGroup",
      "activeWhen": true,
      "visibleWhen": true
    },
    "ViewNavigationGroupCommandHandler": {
      "id": "ViewNavigationGroup",
      "activeWhen": true,
      "visibleWhen": true
    },
    "SetNavigationRotateCommandHandler": {
      "id": "Awv0Rotate",
      "action": "setNavigationModeRotate",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isViewerRevealedAndIn3DMode"
      },
      "selectWhen": {
        "condition": "conditions.isRotate"
      }
    },
    "SetNavigationPanCommandHandler": {
      "id": "Awv0Pan",
      "action": "setNavigationModePan",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isViewerRevealedAndIn3DMode"
      },
      "selectWhen": {
        "condition": "conditions.isPan"
      }
    },
    "SetNavigationZoomCommandHandler": {
      "id": "Awv0Zoom",
      "action": "setNavigationModeZoom",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isViewerRevealedAndIn3DMode"
      },
      "selectWhen": {
        "condition": "conditions.isZoom"
      }
    },
    "SetAreaSelectCommandHandler": {
      "id": "Awv0AreaSelect",
      "action": "setNavigationModeAreaSelect",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isViewerRevealedAndIn3DMode"
      },
      "selectWhen": {
        "condition": "conditions.isAreaSelect"
      },
      "enableWhen": {
        "condition": "conditions.enableAreaSelect"
      }
    },
    "UvViewNavigationGroupCommandHandler": {
      "id": "UvViewNavigationGroup",
      "activeWhen": true,
      "visibleWhen": true
    },
    "UvSetNavigationRotateCommandHandler": {
      "id": "Awv0UvRotate",
      "action": "setUvNavigationModeRotate",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
      }
    },
    "UvSetNavigationPanCommandHandler": {
      "id": "Awv0UvPan",
      "action": "setUvNavigationModePan",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
      }
    },
    "UvSetNavigationZoomCommandHandler": {
      "id": "Awv0UvZoom",
      "action": "setUvNavigationModeZoom",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
      }
    },
    "Awv0ViewerSettingsCommandHandler": {
      "id": "Awv0ViewerSettings",
      "action": "showAwv0ViewerSettingsPanel",
      "activeWhen": {
        "condition": "conditions.isViewerRevealedAndIn3DMode"
      },
      "visibleWhen": true,
      "enableWhen": {
        "condition": "conditions.isViewerOptionEnabedIn3DMode"
      }
    },
    "viewOrientationCommandHandler": {
      "id": "Awv0ViewOrientationGroup",
      "activeWhen": true,
      "visibleWhen": true
    },
    "orientIsometricCommandHandler": {
      "id": "Awv0OrientIsometric",
      "action": "executeOrientIsometricCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.viewOrientationCommandVisibility"
      }
    },
    "orientTrimetricCommandHandler ": {
      "id": "Awv0OrientTrimetric",
      "action": "executeOrientTrimetricCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.viewOrientationCommandVisibility"
      }
    },
    "orientTopCommandHandler": {
      "id": "Awv0OrientTop",
      "action": "executeOrientTopCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.viewOrientationCommandVisibility"
      }
    },
    "orientFrontCommandHandler": {
      "id": "Awv0OrientFront",
      "action": "executeOrientFrontCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.viewOrientationCommandVisibility"
      }
    },
    "orientRightCommandHandler": {
      "id": "Awv0OrientRight",
      "action": "executeOrientRightCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.viewOrientationCommandVisibility"
      }
    },
    "orientBackCommandHandler": {
      "id": "Awv0OrientBack",
      "action": "executeOrientBackCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.viewOrientationCommandVisibility"
      }
    },
    "orientBottomCommandHandler": {
      "id": "Awv0OrientBottom",
      "action": "executeOrientBottomCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.viewOrientationCommandVisibility"
      }
    },
    "orientLeftCommandHandler": {
      "id": "Awv0OrientLeft",
      "action": "executeOrientLeftCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.viewOrientationCommandVisibility"
      }
    },
    "UvviewOrientationCommandHandler": {
      "id": "UvAwv0ViewOrientationGroup",
      "activeWhen": true,
      "visibleWhen": true
    },
    "UvorientIsometricCommandHandler": {
      "id": "UvAwv0OrientIsometric",
      "action": "UvexecuteOrientIsometricCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
      }
    },
    "UvorientTrimetricCommandHandler ": {
      "id": "UvAwv0OrientTrimetric",
      "action": "UvexecuteOrientTrimetricCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
      }
    },
    "UvorientTopCommandHandler": {
      "id": "UvAwv0OrientTop",
      "action": "UvexecuteOrientTopCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
      }
    },
    "UvorientFrontCommandHandler": {
      "id": "UvAwv0OrientFront",
      "action": "UvexecuteOrientFrontCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
      }
    },
    "UvorientRightCommandHandler": {
      "id": "UvAwv0OrientRight",
      "action": "UvexecuteOrientRightCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
      }
    },
    "UvorientBackCommandHandler": {
      "id": "UvAwv0OrientBack",
      "action": "UvexecuteOrientBackCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
      }
    },
    "UvorientBottomCommandHandler": {
      "id": "UvAwv0OrientBottom",
      "action": "UvexecuteOrientBottomCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
      }
    },
    "UvorientLeftCommandHandler": {
      "id": "UvAwv0OrientLeft",
      "action": "UvexecuteOrientLeftCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.isUniversalViewerRevealedAndIn3DMode"
      }
    },
    "viewerConvenienceCommandHandler": {
      "id": "Awv0ViewerConvenienceCommandGroup",
      "activeWhen": true,
      "visibleWhen": true
    },
    "allOnCommandHandler": {
      "id": "Awv0AllOn",
      "action": "executeAllOnCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.allOnCommandVisibility"
      }
    },
    "allOffCommandHandler": {
      "id": "Awv0AllOff",
      "action": "executeAllOffCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.allOffCommandVisibility"
      }
    },
    "selectedOffCommandHandler": {
      "id": "Awv0SelectedOff",
      "action": "executeSelectedOffCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.selectedOffCommandVisibility"
      }
    },
    "selectedOnCommandHandler": {
      "id": "Awv0SelectedOn",
      "action": "executeSelectedOnCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.selectedOnCommandVisibility"
      }
    },
    "selectedOnlyCommandHandler": {
      "id": "Awv0SelectedOnly",
      "action": "executeSelectedOnlyCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.selectedOnlyCommandVisibility"
      }
    },
    "selectContextCommandHandler": {
      "id": "Awv0SelectContext",
      "action": "executeSelectContextCommand",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.selectContextCommandVisibility"
      }
    },
    "removeAnalysisResultCommandHandler": {
      "id": "Awv0RemoveAnalysisResult",
      "action": "confirmRemoveAnalysisResult",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.removeAnalysisResultCommandVisibility"
      }
    },
    "fitCommandHandler": {
      "id": "Awv0Fit",
      "action": "executeFitCommand",
      "activeWhen": {
        "condition": "conditions.isViewerIn3DMode"
      },
      "visibleWhen": {
        "condition": "conditions.isViewerIn3DMode"
      },
      "enableWhen": {
        "condition": "conditions.fitCommandVisibility"
      }
    },
    "awv0ShowMarkupsCommandHandler": {
      "id": "Awp0ShowMarkups",
      "activeWhen": {
        "condition": "conditions.hasPVData"
      },
      "visibleWhen": false,
      "enableWhen": false
    },
    "awv0MarkupHighlightCommandHandler": {
      "id": "Awp0MarkupHighlight",
      "activeWhen": {
        "condition": "conditions.hasPVData"
      },
      "visibleWhen": false,
      "enableWhen": false
    },
    "awv0MarkupFreehandCommandHandler": {
      "id": "Awp0MarkupFreehand",
      "activeWhen": {
        "condition": "conditions.hasPVData"
      },
      "visibleWhen": false,
      "enableWhen": false
    },
    "awv0MarkupShapeCommandHandler": {
      "id": "Awp0MarkupShape",
      "activeWhen": {
        "condition": "conditions.hasPVData"
      },
      "visibleWhen": false,
      "enableWhen": false
    },
    "awv0MarkupCommandHandler": {
      "id": "Awp0ShowMarkupPanel",
      "activeWhen": {
        "condition": "conditions.hasPVData"
      },
      "visibleWhen": false,
      "enableWhen": false
    },
    "awv0MarkupRectangleCommandHandler": {
      "id": "Awp0MarkupRectangle",
      "activeWhen": {
        "condition": "conditions.hasPVData"
      },
      "visibleWhen": false,
      "enableWhen": false
    },
    "awv0MarkupEllipseCommandHandler": {
      "id": "Awp0MarkupEllipse",
      "activeWhen": {
        "condition": "conditions.hasPVData"
      },
      "visibleWhen": false,
      "enableWhen": false
    },
    "awv0MarkupArrowCommandHandler": {
      "id": "Awp0MarkupArrow",
      "activeWhen": {
        "condition": "conditions.hasPVData"
      },
      "visibleWhen": false,
      "enableWhen": false
    },
    "awv0MarkupGdntCommandHandler": {
      "id": "Awp0MarkupGdnt",
      "activeWhen": {
        "condition": "conditions.hasPVData"
      },
      "visibleWhen": false,
      "enableWhen": false
    },
    "awv0MarkupStampCommandHandler": {
      "id": "Awp0MarkupStamp",
      "activeWhen": {
        "condition": "conditions.hasPVData"
      },
      "visibleWhen": false,
      "enableWhen": false
    },
    "awv0MarkupPrintCommandHandler": {
      "id": "Awp0MarkupPrint",
      "activeWhen": {
        "condition": "conditions.hasPVData"
      },
      "visibleWhen": false,
      "enableWhen": false
    },
    "Awv0ShowObjectCommandHandler": {
      "id": "Awp0ShowObject",
      "action": "showSnapShotViewData",
      "activeWhen": {
        "condition": "conditions.hasPVData"
      },
      "visibleWhen": true,
      "enableWhen": true
    },
    "Awv0OpenTabCommandHandler": {
      "id": "Awp0OpenInNewTab",
      "action": "openSnapShotViewDataInNewTab",
      "activeWhen": {
        "condition": "conditions.hasPVData"
      },
      "visibleWhen": {
        "condition": "conditions.isHostingDisabledWithSnapshotViewData"
      },
      "enableWhen": true
    },
    "Awv0OpenWindowCommandHandler": {
      "id": "Awp0OpenInNewWindow",
      "action": "openSnapShotViewDataInNewWindow",
      "activeWhen": {
        "condition": "conditions.hasPVData"
      },
      "visibleWhen": {
        "condition": "conditions.isHostingDisabledWithSnapshotViewData"
      },
      "enableWhen": true
    },
    "Awv0Close3DSubCommandsToolbarCommandHandler": {
      "id": "Awv0Close3DSubCommandsToolbar",
      "action": "close3DSubCommandsToolbar",
      "activeWhen": true,
      "visibleWhen": true,
      "enableWhen": true
    },
    "rotatePdfCWHandler": {
      "id": "rotateCW",
      "action": "rotatePdfCWAction",
      "activeWhen": {
        "condition": "conditions.rotatePdfActive"
      },
      "visibleWhen": {
        "condition": "conditions.rotateCmdVisible"
      }
    },
    "rotatePdfCCWHandler": {
      "id": "rotateCCW",
      "action": "rotatePdfCCWAction",
      "activeWhen": {
        "condition": "conditions.rotatePdfActive"
      },
      "visibleWhen": {
        "condition": "conditions.rotateCmdVisible"
      }
    },
    "rotateCWHandler": {
      "id": "rotateCW",
      "action": "rotateCWAction",
      "activeWhen": {
        "condition": "conditions.rotateImageActive"
      },
      "visibleWhen": {
        "condition": "conditions.rotateCmdVisible"
      }
    },
    "rotateCCWHandler": {
      "id": "rotateCCW",
      "action": "rotateCCWAction",
      "activeWhen": {
        "condition": "conditions.rotateImageActive"
      },
      "visibleWhen": {
        "condition": "conditions.rotateCmdVisible"
      }
    },
    "uvTextWordWrapHandler": {
      "id": "uvTextWordWrap",
      "action": "uvTextWordWrapAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.uvTextWordWrapCmdVisible"
      },
      "selectWhen": {
        "condition": "conditions.uvTextWordWrapCmdSelected"
      }
    },
    "Awp0OpenVVICommandHandler": {
      "id": "Awp0OpenVVI",
      "action": "executeOpenInVisCommand",
      "activeWhen": {
        "condition": "conditions.Awp0OpenVVICmdCond"
      },
      "visibleWhen": {
        "condition": "conditions.Awp0OpenVVICmdCond"
      }
    },
    "Awp0ShowHomeFolderCommandHandler": {
      "id": "Awp0ShowHomeFolder",
      "action": "showHomeFolderAction",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.showHomeFolderVisibility"
      }
    },
    "Awp0UnPinObjectHandler": {
      "id": "Awp0UnPinObject",
      "action": "getUnPinInputs",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0UnPinObjectVisible"
      }
    },
    "Awp0PinObjectHandler": {
      "id": "Awp0PinObject",
      "action": "getPinInputs",
      "activeWhen": true,
      "visibleWhen": {
        "condition": "conditions.Awp0PinObjectVisible"
      }
    },
    "GoToUIComp": {
      "id": "GoToUIComp",
      "action": "showUIComp",
      "activeWhen": {
        "condition": true
      },
      "visibleWhen": {
        "condition": true
      }
    }
  },
  "commandPlacements": {
    "DigitalAssetsPanel": {
      "id": "DigitalAssetsPanel",
      "uiAnchor": "aw_rightWall",
      "priority": 130,
      "parentGroupId": "Awp0ViewGroup"
    },
    "DigitalAssetsPanelFooterToolbar": {
      "id": "DigitalAssetsPanel",
      "uiAnchor": "aw_footer",
      "priority": 0.5
    },
    "ImagePanel": {
      "id": "ImagePanel",
      "uiAnchor": "aw_rightWall",
      "priority": 130,
      "parentGroupId": "Awp0ViewGroup"
    },
    "ImagePanelFooterToolbar": {
      "id": "ImagePanel",
      "uiAnchor": "aw_footer",
      "priority": 0.5
    },
    "cmdReplaceDigitalAssetPlacement": {
      "id": "cmdReplaceDigitalAsset",
      "uiAnchor": "adobe_cell_commands_updatesList",
      "priority": 200,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "cmdDeleteDigitalAssetPlacement": {
      "id": "cmdDeleteDigitalAsset",
      "uiAnchor": "adobe_cell_commands_inUseList",
      "priority": 200,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "showObjectCell1": {
      "id": "showObjectCell1",
      "uiAnchor": "adobe_cell_commands_updatesList",
      "priority": 100,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "showObjectCell2": {
      "id": "showObjectCell2",
      "uiAnchor": "adobe_cell_commands_inUseList",
      "priority": 100,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Arm0ExportImportPlacement": {
      "id": "Arm0ExportImport",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 100
    },
    "Arm0ExportPlacement": {
      "id": "Arm0Export",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 1,
      "parentGroupId": "Arm0ExportImport"
    },
    "Arm0ImportPlacement": {
      "id": "Arm0ImportExcel",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 2,
      "parentGroupId": "Arm0ExportImport"
    },
    "Arm0SummaryTableExportImportPlacement": {
      "id": "Arm0SummaryTableExportImport",
      "uiAnchor": "aw_reqSummaryCommandbar",
      "priority": 100
    },
    "Arm0SummaryTableExportPlacement": {
      "id": "Arm0SummaryTableExport",
      "uiAnchor": "aw_reqSummaryCommandbar",
      "priority": 1,
      "parentGroupId": "Arm0SummaryTableExportImport"
    },
    "Arm0SummaryTableImportPlacement": {
      "id": "Arm0SummaryTableImportExcel",
      "uiAnchor": "aw_reqSummaryCommandbar",
      "priority": 2,
      "parentGroupId": "Arm0SummaryTableExportImport"
    },
    "Arm0DeletePropOnExportPanelCmdPlacement": {
      "id": "Arm0DeletePropOnExportPanel",
      "uiAnchor": "delete_prop_export_command",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Arm0SelectedColmnsSubAddCmdPlacement": {
      "id": "Arm0SelectedColmnsSubAddCmd",
      "uiAnchor": "arm0_selectedcolmnsSubCommands",
      "priority": 101
    },
    "Arm0MoveUpExcelColumnPlacement": {
      "id": "Arm0MoveUpExcelColumn",
      "uiAnchor": "arm0_selectedcolmnsSubCommands",
      "priority": 90
    },
    "Arm0MoveDownExcelColumnPlacement": {
      "id": "Arm0MoveDownExcelColumn",
      "uiAnchor": "arm0_selectedcolmnsSubCommands",
      "priority": 100
    },
    "Awp0AddToFavoritesOnStep": {
      "id": "Awp0AddToFavorites",
      "uiAnchor": "aw_rightWall",
      "priority": 310,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Awp0RemoveFromFavoritesOneStep": {
      "id": "Awp0RemoveFromFavorites",
      "uiAnchor": "aw_rightWall",
      "priority": 310,
      "parentGroupId": "Awp0ManageGroup"
    },
    "HostingSetRevisionRuleDisplay": {
      "id": "HostingSetRevisionRule",
      "uiAnchor": "none",
      "priority": 1
    },
    "Awp0OpenHosted-classic": {
      "id": "Awp0OpenHosted",
      "uiAnchor": "aw_oneStep",
      "parentGroupId": "Awp0OpenGroup",
      "priority": 50
    },
    "Awp0OpenHosted": {
      "id": "Awp0OpenHosted",
      "uiAnchor": "aw_rightWall",
      "parentGroupId": "Awp0OpenGroup",
      "priority": 20
    },
    "Awp0OpenNewViewHosted-classic": {
      "id": "Awp0OpenNewViewHosted",
      "uiAnchor": "aw_oneStep",
      "parentGroupId": "Awp0OpenGroup",
      "priority": 51
    },
    "Awp0OpenNewViewHosted": {
      "id": "Awp0OpenNewViewHosted",
      "uiAnchor": "aw_rightWall",
      "parentGroupId": "Awp0OpenGroup",
      "priority": 140
    },
    "Awp0AddComponentHosted-classic": {
      "id": "Awp0AddComponentHosted",
      "uiAnchor": "aw_oneStep",
      "parentGroupId": "Awp0OpenGroup",
      "priority": 52
    },
    "Awp0AddComponentHosted": {
      "id": "Awp0AddComponentHosted",
      "uiAnchor": "aw_rightWall",
      "parentGroupId": "Awp0NewGroup",
      "priority": 200
    },
    "inboxFilterNavigation": {
      "id": "Awp0ReplaceDataset",
      "uiAnchor": "aw_rightWall",
      "priority": 440,
      "parentGroupId": "Awp0EditGroup"
    },
    "AwFullScreenEnterSummaryHeaderPlacement": {
      "id": "AwFullScreenEnter",
      "uiAnchor": "aw_summaryHeaderRight",
      "priority": 1,
      "style": "base",
      "showTitle": "never"
    },
    "Awp0ShowFileVersionsPlacement": {
      "id": "Awp0ShowFileVersions",
      "parentGroupId": "Awp0ViewGroup",
      "priority": 680
    },
    "Awp0CreateAlternateIdPlacement": {
      "id": "Awp0CreateAlternateId",
      "uiAnchor": "aw_rightWall",
      "priority": 680,
      "parentGroupId": "Awp0NewGroup"
    },
    "Awp0CreateAliasIdPlacement": {
      "id": "Awp0CreateAliasId",
      "uiAnchor": "aw_rightWall",
      "priority": 700,
      "parentGroupId": "Awp0NewGroup"
    },
    "Awp0CreateDispRulePlacement": {
      "id": "Awp0CreateDispRule",
      "uiAnchor": "aw_rightWall",
      "priority": 690,
      "parentGroupId": "Awp0NewGroup"
    },
    "Awp0IdDispRuleAdminInfoCommandPlacement": {
      "id": "Awp0IdDispRuleAdminInfo",
      "uiAnchor": "aw_iddisprule_cell_commands",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "selected": true,
        "position": "MIDDLE_RIGHT"
      }
    },
    "Awp0CopyToolsAndInfo": {
      "id": "Awp0Copy",
      "uiAnchor": "aw_viewerCommands",
      "priority": 200
    },
    "cmdQuickAccessPlacementDisplay": {
      "id": "cmdQuickAccess",
      "uiAnchor": "aw_globalNavigationbar",
      "priority": 150
    },
    "Awp0StartEditToolsAndInfo": {
      "id": "Awp0StartEdit",
      "uiAnchor": "aw_staticToolsAndInfo",
      "priority": 50
    },
    "saveEditsToolsAndInfo": {
      "id": "Awp0SaveEdits",
      "uiAnchor": "aw_staticToolsAndInfo",
      "relativeTo": "Awp0CancelEdits",
      "priority": -1
    },
    "cancelEditsToolsAndInfo": {
      "id": "Awp0CancelEdits",
      "uiAnchor": "aw_staticToolsAndInfo",
      "relativeTo": "Awp0Checkout",
      "priority": -1
    },
    "cancelEditsSummaryHeaderPrimary": {
      "id": "Awp0CancelEdits",
      "uiAnchor": "aw_summaryHeader",
      "parentGroupId": "Awp0CancelEditsSummaryHeader"
    },
    "cancelEditsSummaryHeader": {
      "id": "Awp0CancelEditsSummaryHeader",
      "uiAnchor": "aw_summaryHeader",
      "priority": 50,
      "style": "base",
      "showTitle": "always"
    },
    "Awp0ShowObjectToolsAndInfo": {
      "id": "Awp0ShowObject",
      "uiAnchor": "aw_staticToolsAndInfo",
      "priority": 1,
      "parentGroupId": "Awp0OpenGroup"
    },
    "Awp0PasteToolsAndInfo": {
      "id": "Awp0Paste",
      "uiAnchor": "aw_staticToolsAndInfo",
      "priority": 3
    },
    "cmdSignOutUserLink": {
      "id": "cmdSignOut",
      "uiAnchor": "aw_userLink",
      "priority": 20
    },
    "cmdViewProfileUserLink": {
      "id": "cmdViewProfile",
      "uiAnchor": "aw_userLink",
      "priority": 10
    },
    "Awp0CloseCommandPanelPlacement": {
      "id": "Awp0CloseCommandPanel",
      "uiAnchor": "aw_commandPanel",
      "priority": 50
    },
    "Awp0PinCommandPanelPlacement": {
      "id": "Awp0PinCommandPanel",
      "uiAnchor": "aw_commandPanel",
      "priority": 40
    },
    "Awp0UnpinCommandPanelPlacement": {
      "id": "Awp0UnpinCommandPanel",
      "uiAnchor": "aw_commandPanel",
      "priority": 40
    },
    "checkoutOneStep": {
      "id": "Awp0Checkout",
      "uiAnchor": "aw_rightWall",
      "priority": 200,
      "parentGroupId": "Awp0EditGroup"
    },
    "checkoutFooter": {
      "id": "Awp0Checkout",
      "uiAnchor": "aw_footer",
      "priority": 50
    },
    "checkinOneStep": {
      "id": "Awp0Checkin",
      "uiAnchor": "aw_rightWall",
      "priority": 220,
      "parentGroupId": "Awp0EditGroup"
    },
    "checkinFooter": {
      "id": "Awp0Checkin",
      "uiAnchor": "aw_footer",
      "relativeTo": "Awp0SaveEdits",
      "priority": -1
    },
    "redLineModeOneStep": {
      "id": "Awp0RedLineMode",
      "uiAnchor": "aw_rightWall",
      "priority": 220,
      "parentGroupId": "Awp0ViewGroup"
    },
    "cancelCheckoutOneStep": {
      "id": "Awp0CancelCheckout",
      "uiAnchor": "aw_rightWall",
      "priority": 240,
      "parentGroupId": "Awp0EditGroup"
    },
    "cancelCheckoutFooter": {
      "id": "Awp0CancelCheckout",
      "uiAnchor": "aw_footer",
      "relativeTo": "Awp0Checkin",
      "priority": 1
    },
    "showSaveAs": {
      "id": "Awp0ShowSaveAs",
      "uiAnchor": "aw_rightWall",
      "priority": 1,
      "parentGroupId": "Awp0NewGroup",
      "relativeTo": "Awp0ShowCreateObject"
    },
    "showRevise": {
      "id": "Awp0ShowRevise",
      "uiAnchor": "aw_rightWall",
      "priority": 1,
      "parentGroupId": "Awp0NewGroup",
      "relativeTo": "Awp0ShowCreateObject"
    },
    "Awp0GoHomeGlobalToolbar": {
      "id": "Awp0GoHome",
      "uiAnchor": "aw_globalToolbar",
      "relativeTo": "Awp0ChangeTheme",
      "priority": -1
    },
    "Awp0GoHomeFooterToolbar": {
      "id": "Awp0GoHome",
      "uiAnchor": "aw_footer",
      "priority": -1
    },
    "Awp0SignOutFooterToolbar": {
      "id": "Awp0SignOut",
      "uiAnchor": "aw_footer",
      "relativeTo": "Awp0Search",
      "priority": -1
    },
    "Awp0CutOneStep": {
      "id": "Awp0Cut",
      "uiAnchor": "aw_rightWall",
      "priority": 30
    },
    "Awp0CutOneStep_workarea": {
      "id": "Awp0Cut",
      "uiAnchor": "aw_workarea_toolbar",
      "priority": 800,
      "showTitle": "never"
    },
    "Awp0CutContextMenuCmdPlacement": {
      "id": "Awp0CutContextMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 1
    },
    "Awp0ShowObjectOneStep-classic": {
      "id": "Awp0ShowObject",
      "uiAnchor": "aw_oneStep",
      "priority": 1,
      "parentGroupId": "Awp0OpenGroup"
    },
    "Awp0ShowObjectOneStep": {
      "id": "Awp0ShowObject",
      "uiAnchor": "aw_rightWall",
      "priority": 1,
      "parentGroupId": "Awp0OpenGroup"
    },
    "Awp0OpenInNewTabOneStep-classic": {
      "id": "Awp0OpenInNewTab",
      "uiAnchor": "aw_oneStep",
      "priority": 3,
      "parentGroupId": "Awp0OpenGroup"
    },
    "Awp0OpenInNewTabOneStep": {
      "id": "Awp0OpenInNewTab",
      "uiAnchor": "aw_rightWall",
      "priority": 2,
      "parentGroupId": "Awp0OpenGroup"
    },
    "Awp0OpenInNewWindowOneStep-classic": {
      "id": "Awp0OpenInNewWindow",
      "uiAnchor": "aw_oneStep",
      "priority": 2,
      "parentGroupId": "Awp0OpenGroup"
    },
    "Awp0OpenInNewWindowOneStep": {
      "id": "Awp0OpenInNewWindow",
      "uiAnchor": "aw_rightWall",
      "priority": 3,
      "parentGroupId": "Awp0OpenGroup"
    },
    "Awp0OpenInRACOneStep-classic": {
      "id": "Awp0OpenInRAC",
      "uiAnchor": "aw_oneStep",
      "priority": 4,
      "parentGroupId": "Awp0OpenGroup"
    },
    "Awp0OpenInRACOneStep": {
      "id": "Awp0OpenInRAC",
      "uiAnchor": "aw_rightWall",
      "priority": 210,
      "parentGroupId": "Awp0OpenGroup"
    },
    "Awp0ViewFileOneStep": {
      "id": "Awp0ViewFile",
      "uiAnchor": "aw_rightWall",
      "priority": 20,
      "parentGroupId": "Awp0ShareGroup"
    },
    "Awp0ShareURLOneStep": {
      "id": "Awp0ShareURL",
      "priority": 10,
      "parentGroupId": "Awp0ShareGroup"
    },
    "Awp0ShowObjectCellForObjectNavigationOnHover": {
      "id": "Awp0ShowObjectCellForObjectNavigation",
      "uiAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectObjectNavigationCellListActionCommands",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Awp0ShowObjectCellDatasetForObjectNavigationOnHover": {
      "id": "Awp0ShowObjectCellDataset",
      "uiAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectObjectNavigationCellListActionCommands",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Awp0ShowObjectCellOnHoverList": {
      "id": "Awp0ShowObjectCell",
      "uiAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectCellListActionCommands",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Awp0ShowObjectCellDatasetOnHoverList": {
      "id": "Awp0ShowObjectCellDataset",
      "uiAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectCellListActionCommands",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Awp0ShowObjectCellOnHoverDataGrid": {
      "id": "Awp0ShowObjectCell",
      "uiAnchor": "com.siemens.splm.clientfx.ui.modelObjectDataGridActionCommands",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Awp0ShowObjectCellDatasetOnHoverDataGrid": {
      "id": "Awp0ShowObjectCellDataset",
      "uiAnchor": "com.siemens.splm.clientfx.ui.modelObjectDataGridActionCommands",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Awp0NavigateObjectCellOnHover": {
      "id": "Awp0NavigateObject",
      "uiAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectObjectNavigationCellListActionCommands",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "BOTTOM_RIGHT",
        "selected": true
      }
    },
    "Awp0NavigateObjectBreadCrumbCell": {
      "id": "Awp0NavigateObject",
      "uiAnchor": "com.siemens.splm.clientfx.tcui.commands.modelObjectNavigationBreadCrumbCellListActionCommands",
      "priority": 1,
      "cellDisplay": {
        "position": "BOTTOM_RIGHT"
      }
    },
    "Awp0ShowObjectFooter": {
      "id": "Awp0ShowObject",
      "uiAnchor": "aw_footer",
      "priority": 1,
      "parentGroupId": "OpenGroupCommandFooter"
    },
    "Awp0OpenInNewTabFooter": {
      "id": "Awp0OpenInNewTab",
      "uiAnchor": "aw_footer",
      "priority": 3,
      "parentGroupId": "OpenGroupCommandFooter"
    },
    "Awp0OpenInNewWindowFooter": {
      "id": "Awp0OpenInNewWindow",
      "uiAnchor": "aw_footer",
      "priority": 2,
      "parentGroupId": "OpenGroupCommandFooter"
    },
    "Awp0OpenInRACFooter": {
      "id": "Awp0OpenInRAC",
      "uiAnchor": "aw_footer",
      "priority": 4,
      "parentGroupId": "OpenGroupCommandFooter"
    },
    "Awp0ViewFileFooter": {
      "id": "Awp0ViewFile",
      "uiAnchor": "aw_footer",
      "priority": 5,
      "parentGroupId": "OpenGroupCommandFooter"
    },
    "Awp0ShareURLFooter": {
      "id": "Awp0ShareURL",
      "uiAnchor": "aw_footer",
      "priority": 7,
      "parentGroupId": "OpenGroupCommandFooter"
    },
    "Awp0StartEditOneStep": {
      "id": "Awp0StartEdit",
      "uiAnchor": "aw_rightWall",
      "priority": 10,
      "parentGroupId": "Awp0EditGroup"
    },
    "startEditHeaderPrimary": {
      "id": "Awp0StartEdit",
      "uiAnchor": "aw_summaryHeader",
      "priority": 100,
      "parentGroupId": "Awp0StartEditSummaryHeader"
    },
    "Awp0StartEditFooter": {
      "id": "Awp0StartEdit",
      "uiAnchor": "aw_footer",
      "priority": 50
    },
    "Awp0StartEditSummaryOneStep-classic": {
      "id": "Awp0StartEditSummary",
      "uiAnchor": "aw_oneStep",
      "priority": 1,
      "parentGroupId": "StartEditGroupCommand"
    },
    "Awp0StartEditSummaryOneStep": {
      "id": "Awp0StartEditSummary",
      "uiAnchor": "aw_rightWall",
      "priority": 20,
      "parentGroupId": "Awp0EditGroup"
    },
    "startEditSummaryHeaderPrimary": {
      "id": "Awp0StartEditSummary",
      "uiAnchor": "aw_summaryHeader",
      "priority": 100,
      "parentGroupId": "Awp0StartEditSummaryHeader"
    },
    "Awp0StartEditSummaryHeaderPlacement": {
      "id": "Awp0StartEditSummaryHeader",
      "uiAnchor": "aw_summaryHeader",
      "priority": 20,
      "style": "base",
      "showTitle": "always"
    },
    "Awp0StartEditTableOneStep-classic": {
      "id": "Awp0StartEditTable",
      "uiAnchor": "aw_oneStep",
      "priority": 2,
      "parentGroupId": "StartEditGroupCommand"
    },
    "Awp0StartEditTablePrimaryWorkArea": {
      "id": "Awp0StartEditTable",
      "uiAnchor": "aw_workArea_right",
      "priority": 30
    },
    "OpenGroupCommandOneStep": {
      "id": "Awp0OpenGroup",
      "uiAnchor": "aw_rightWall",
      "priority": 20
    },
    "OpenGroupCommandOneStep_workarea": {
      "id": "Awp0OpenGroup",
      "uiAnchor": "aw_workarea_toolbar",
      "priority": 500,
      "showTitle": "never"
    },
    "OpenGroupCommandOneStepFooter": {
      "id": "OpenGroupCommandFooter",
      "uiAnchor": "aw_footer",
      "priority": -1,
      "relativeTo": "Awp0Checkout"
    },
    "Awp0ShowImageViewDisplay-classic": {
      "id": "Awp0ShowImageView",
      "uiAnchor": "aw_display",
      "priority": 9,
      "parentGroupId": "Awp0ModelObjListDisplayToggles"
    },
    "Awp0ShowListViewDisplay-classic": {
      "id": "Awp0ShowListView",
      "uiAnchor": "aw_display",
      "priority": 2,
      "parentGroupId": "Awp0ModelObjListDisplayToggles"
    },
    "Awp0ShowSummaryViewDisplay-classic": {
      "id": "Awp0ShowSummaryView",
      "uiAnchor": "aw_display",
      "priority": 1,
      "parentGroupId": "Awp0ModelObjListDisplayToggles"
    },
    "Awp0ShowTableSummaryViewDisplay-classic": {
      "id": "Awp0ShowTableSummaryView",
      "uiAnchor": "aw_display",
      "priority": 4,
      "parentGroupId": "Awp0ModelObjListDisplayToggles"
    },
    "Awp0ShowTableViewDisplay-classic": {
      "id": "Awp0ShowTableView",
      "uiAnchor": "aw_display",
      "priority": 3,
      "parentGroupId": "Awp0ModelObjListDisplayToggles"
    },
    "Awp0ShowTreeSummaryViewDisplay-classic": {
      "id": "Awp0ShowTreeSummaryView",
      "uiAnchor": "aw_display",
      "priority": 6,
      "parentGroupId": "Awp0ModelObjListDisplayToggles"
    },
    "Awp0ShowTreeViewDisplay-classic": {
      "id": "Awp0ShowTreeView",
      "uiAnchor": "aw_display",
      "priority": 5,
      "parentGroupId": "Awp0ModelObjListDisplayToggles"
    },
    "saveEditsOneStep": {
      "id": "Awp0SaveEdits",
      "uiAnchor": "aw_rightWall",
      "priority": 100,
      "parentGroupId": "Awp0EditGroup"
    },
    "saveEditsSummaryHeaderPrimary": {
      "id": "Awp0SaveEdits",
      "uiAnchor": "aw_summaryHeader",
      "priority": 100,
      "parentGroupId": "Awp0SaveEditSummaryHeader"
    },
    "saveEditsSummaryHeader": {
      "id": "Awp0SaveEditSummaryHeader",
      "uiAnchor": "aw_summaryHeader",
      "priority": 100,
      "style": "primary",
      "showTitle": "always"
    },
    "saveEditsPrimaryWorkArea": {
      "id": "Awp0SaveEditsPWA",
      "uiAnchor": "aw_workArea_right",
      "priority": 100
    },
    "cancelEditsOneStep": {
      "id": "Awp0CancelEdits",
      "uiAnchor": "aw_rightWall",
      "priority": 180,
      "parentGroupId": "Awp0EditGroup"
    },
    "cancelEditsPrimaryWorkArea": {
      "id": "Awp0CancelEditsPWA",
      "uiAnchor": "aw_workArea_right",
      "priority": 110
    },
    "cancelEditsFooter": {
      "id": "Awp0CancelEdits",
      "uiAnchor": "aw_footer",
      "relativeTo": "Awp0Checkout",
      "priority": -1
    },
    "saveEditsFooter": {
      "id": "Awp0SaveEdits",
      "uiAnchor": "aw_footer",
      "relativeTo": "Awp0CancelEdits",
      "priority": -1
    },
    "Awp0CommandLabelTogglePlacement": {
      "id": "Awp0CommandLabelToggle",
      "uiAnchor": "aw_globalToolbar",
      "priority": 5,
      "parentGroupId": "Awp0ChangeTheme"
    },
    "Awp0AddReference": {
      "id": "Awp0AddReference",
      "uiAnchor": "aw_rightWall",
      "priority": 270,
      "parentGroupId": "Awp0NewGroup"
    },
    "Awp0AddProfilePicture": {
      "id": "Awp0AddProfilePicture",
      "uiAnchor": "awp0_addProfilePictureCommands",
      "isIcon": true,
      "priority": 1
    },
    "Awp0ObjectInfoDisplay": {
      "id": "Awp0ObjectInfo",
      "uiAnchor": "aw_rightWall",
      "priority": 10
    },
    "Awp0ObjectInfoDisplay_workarea": {
      "id": "Awp0ObjectInfo",
      "uiAnchor": "aw_workarea_toolbar",
      "priority": 300,
      "showTitle": "never"
    },
    "Awp0ChangePasswordDisplay": {
      "id": "Awp0ChangePassword",
      "uiAnchor": "aw_rightWall",
      "priority": 635,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Awp0SelectAllDisplay": {
      "id": "Awp0SelectAll",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 146
    },
    "Awp0DeselectAllDisplay": {
      "id": "Awp0DeselectAll",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 146
    },
    "Awp0SelectAllObjectSetDisplay": {
      "id": "Awp0SelectAllObjectSet",
      "uiAnchor": "aw_objectSet",
      "priority": 7
    },
    "Awp0DeselectAllObjectSetDisplay": {
      "id": "Awp0DeselectAllObjectSet",
      "uiAnchor": "aw_objectSet",
      "priority": 7
    },
    "Awp0EnableMultiSelectDisplay-classic": {
      "id": "Awp0EnableMultiSelect",
      "uiAnchor": "aw_display",
      "priority": 6
    },
    "Awp0DisableMultiSelectDisplay-classic": {
      "id": "Awp0DisableMultiSelect",
      "uiAnchor": "aw_display",
      "priority": 6
    },
    "Awp0EnableMultiSelectDisplay": {
      "id": "Awp0EnableMultiSelect",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 145
    },
    "Awp0DisableMultiSelectDisplay": {
      "id": "Awp0DisableMultiSelect",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 145
    },
    "Awp0EnableMultiSelectObjectSetDisplay": {
      "id": "Awp0EnableMultiSelectObjectSet",
      "uiAnchor": "aw_objectSet",
      "priority": 6
    },
    "Awp0DisableMultiSelectObjectSetDisplay": {
      "id": "Awp0DisableMultiSelectObjectSet",
      "uiAnchor": "aw_objectSet",
      "priority": 6
    },
    "Awp0ShowCreateObjectPWA": {
      "id": "Awp0ShowCreateObject",
      "uiAnchor": "aw_primaryWorkArea",
      "priority": 130
    },
    "Awp0ShowCreateObjectToolsInfo": {
      "id": "Awp0ShowCreateObject",
      "uiAnchor": "aw_rightWall",
      "priority": -10000,
      "parentGroupId": "Awp0NewGroup"
    },
    "Awp0ShowCreateObjectFooter": {
      "id": "Awp0ShowCreateObject",
      "uiAnchor": "aw_footer",
      "relativeTo": "Awp0GoHome",
      "priority": 1
    },
    "Awp0DeleteOneStep": {
      "id": "Awp0Delete",
      "uiAnchor": "aw_rightWall",
      "priority": 500,
      "parentGroupId": "Awp0EditGroup"
    },
    "Awp0ExportDelete": {
      "id": "Awp0ExportDelete",
      "uiAnchor": "awp0_exportToExcelDelete",
      "priority": 300,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Awp0CopyOneStep": {
      "id": "Awp0Copy",
      "uiAnchor": "aw_rightWall",
      "priority": 40
    },
    "Awp0CopyOneStep_workarea": {
      "id": "Awp0Copy",
      "uiAnchor": "aw_workarea_toolbar",
      "priority": 700,
      "showTitle": "never"
    },
    "Awp0CopyContextMenuCmdPlacement": {
      "id": "Awp0CopyContextMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 2
    },
    "Awp0CopyDownloadLinkContextMenu": {
      "id": "Awp0CopyDownloadLink",
      "uiAnchor": "aw_contextMenu2",
      "priority": 4
    },
    "arrangeShowAllCommandPlacement": {
      "id": "arrangeShowAll",
      "uiAnchor": "arrangeCommandbar",
      "priority": 300
    },
    "arrangeResetCommandPlacement": {
      "id": "arrangeReset",
      "uiAnchor": "arrangeCommandbar",
      "priority": 200
    },
    "arrangeMoveUpCommandPlacement": {
      "id": "arrangeMoveUp",
      "uiAnchor": "arrangeCommandbar",
      "priority": 400
    },
    "arrangeMoveDownCommandPlacement": {
      "id": "arrangeMoveDown",
      "uiAnchor": "arrangeCommandbar",
      "priority": 500
    },
    "arrangeAddColumnsCommandPlacement": {
      "id": "arrangeAddColumns",
      "uiAnchor": "arrangeTwoPanelCommandbar",
      "priority": 100
    },
    "arrangeRemoveColumnsCommandPlacement": {
      "id": "arrangeRemoveColumns",
      "uiAnchor": "arrangeTwoPanelCommandbar",
      "priority": 200
    },
    "arrangeViewConfigsCommandPlacement": {
      "id": "arrangeViewConfigs",
      "uiAnchor": "arrangeCommandbar",
      "priority": 600
    },
    "deleteNamedColumnConfigPlacement": {
      "id": "deleteNamedColumnConfig",
      "uiAnchor": "viewColumnConfigsCommands",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Awp0ChangeOwnerToolsAndInfo": {
      "id": "Awp0ChangeOwner",
      "uiAnchor": "aw_rightWall",
      "priority": 630,
      "parentGroupId": "Awp0ManageGroup"
    },
    "Awp0PasteDisplay": {
      "id": "Awp0Paste",
      "uiAnchor": "aw_rightWall",
      "parentGroupId": "Awp0PasteGroup",
      "priority": 10
    },
    "Awp0PasteContextMenuCmdPlacement": {
      "id": "Awp0PasteContextMenu",
      "uiAnchor": "aw_contextMenu2",
      "priority": 3
    },
    "Awp0PasteObjectSetDisplay-classic": {
      "id": "Awp0Paste",
      "uiAnchor": "aw_objectSet_right",
      "priority": 2
    },
    "Awp0ExportToExcelObjectSetPlacement": {
      "id": "Awp0ExportToExcel",
      "uiAnchor": "aw_objectSet_right",
      "priority": 3
    },
    "Awp0MoveUpExcelColumnPlacement": {
      "id": "Awp0MoveUpExcelColumn",
      "uiAnchor": "exportSelectedColumnsCommands",
      "priority": 90
    },
    "Awp0MoveDownExcelColumnPlacement": {
      "id": "Awp0MoveDownExcelColumn",
      "uiAnchor": "exportSelectedColumnsCommands",
      "priority": 100
    },
    "Awp0ExportSelectedColumnsAddPlacement": {
      "id": "Awp0ExportSelectedColumnsAdd",
      "uiAnchor": "exportSelectedColumnsCommands",
      "priority": 101
    },
    "Awp0ShowCompactLayoutPlacement": {
      "id": "Awp0ShowCompactLayout",
      "uiAnchor": "aw_globalToolbar",
      "priority": 3,
      "parentGroupId": "Awp0ChangeTheme"
    },
    "Awp0ShowComfyLayoutPlacement": {
      "id": "Awp0ShowComfyLayout",
      "uiAnchor": "aw_globalToolbar",
      "priority": 4,
      "parentGroupId": "Awp0ChangeTheme"
    },
    "Awp0EditGroupPlacement": {
      "id": "Awp0EditGroup",
      "uiAnchor": "aw_rightWall",
      "priority": 2000
    },
    "Awp0EditGroupPlacement_workarea": {
      "id": "Awp0EditGroup",
      "priority": 200,
      "parentGroupId": "Awp0MoreGroup"
    },
    "Awp0ManageGroupPlacement": {
      "id": "Awp0ManageGroup",
      "uiAnchor": "aw_rightWall",
      "priority": 3000
    },
    "Awp0ManageGroupPlacement_workarea": {
      "id": "Awp0ManageGroup",
      "priority": 300,
      "parentGroupId": "Awp0MoreGroup"
    },
    "Awp0NewGroupPlacement": {
      "id": "Awp0NewGroup",
      "uiAnchor": "aw_rightWall",
      "priority": 1000
    },
    "Awp0NewGroupPlacement_workarea": {
      "id": "Awp0NewGroup",
      "priority": 100,
      "parentGroupId": "Awp0MoreGroup"
    },
    "Awp0ShareGroupPlacement": {
      "id": "Awp0ShareGroup",
      "uiAnchor": "aw_rightWall",
      "priority": 4000
    },
    "Awp0ShareGroupPlacement_workarea": {
      "id": "Awp0ShareGroup",
      "priority": 400,
      "parentGroupId": "Awp0MoreGroup"
    },
    "Awp0ViewGroupPlacement": {
      "id": "Awp0ViewGroup",
      "uiAnchor": "aw_rightWall",
      "priority": 5000
    },
    "Awp0ViewGroupPlacement_workarea": {
      "id": "Awp0ViewGroup",
      "priority": 500,
      "parentGroupId": "Awp0MoreGroup"
    },
    "Awp0PasteGroupPlacement": {
      "id": "Awp0PasteGroup",
      "uiAnchor": "aw_rightWall",
      "priority": 400
    },
    "Awp0PasteGroupPlacement_workarea": {
      "id": "Awp0PasteGroup",
      "uiAnchor": "aw_workarea_toolbar",
      "priority": 600,
      "showTitle": "never"
    },
    "Awp0MoreGroupPlacement_workarea": {
      "id": "Awp0MoreGroup",
      "uiAnchor": "aw_workarea_toolbar",
      "priority": 100,
      "showTitle": "never",
      "showChevron": false,
      "isOverflow": true
    },
    "Awp0GoHomeGlobalNavigationbar": {
      "id": "Awp0GoHome",
      "uiAnchor": "aw_globalNavigationbar",
      "priority": 20
    },
    "Awp0ShowHomeFolderGlobalNavigationbar": {
      "id": "Awp0ShowHomeFolder",
      "uiAnchor": "aw_globalNavigationbar",
      "priority": 50
    },
    "Awp0GoFavoritesGlobalNavigationbar": {
      "id": "Awp0GoFavorites",
      "uiAnchor": "aw_globalNavigationbar",
      "priority": 140
    },
    "Awp0HelpUserSessionbar": {
      "id": "Awp0Help",
      "uiAnchor": "aw_userSessionbar",
      "priority": 40,
      "parentGroupId": "Awp0HelpGroup",
      "showGroupSelected": false
    },
    "Awp0HelpGroupUserSessionbar": {
      "id": "Awp0HelpGroup",
      "uiAnchor": "aw_userSessionbar",
      "priority": 4
    },
    "Awp0HelpAboutUserSessionbar": {
      "id": "Awp0HelpAbout",
      "uiAnchor": "aw_userSessionbar",
      "priority": 50,
      "parentGroupId": "Awp0HelpGroup",
      "showGroupSelected": false
    },
    "openArrangePanelPlacement": {
      "id": "openArrangePanel",
      "priority": 200,
      "uiAnchor": "aw_gridMenu"
    },
    "Awp0EditLocalizationSinglePlacement": {
      "id": "Awp0EditLocalizationSingle",
      "priority": 20,
      "uiAnchor": "aw_multiLanguageProperty",
      "showTitle": "never"
    },
    "Awp0AddorRemoveLocalesPlacement": {
      "id": "Awp0AddorRemoveLocales",
      "priority": 20,
      "uiAnchor": "aw_addRemoveLocales"
    },
    "Awp0RemoveLocalePlacement": {
      "id": "Awp0RemoveLocale",
      "priority": 20,
      "uiAnchor": "aw_removeLocale"
    },
    "Awp0PLStatsPlacement": {
      "id": "Awp0PLStats",
      "priority": 7,
      "parentGroupId": "Awp0ChangeTheme"
    },
    "Awp0EditInfoPanelCommandPlacement": {
      "id": "Awp0EditInfoPanel",
      "uiAnchor": "aw_info_panel_cell_header",
      "priority": 40,
      "style": "base",
      "showTitle": "always"
    },
    "Awp0SaveInfoPanelCommandPlacement": {
      "id": "Awp0SaveInfoPanel",
      "uiAnchor": "aw_info_panel_cell_header",
      "priority": 40,
      "style": "primary",
      "showTitle": "always"
    },
    "Awp0CancelInfoPanelCommandPlacement": {
      "id": "Awp0CancelInfoPanel",
      "uiAnchor": "aw_info_panel_cell_header",
      "priority": 30,
      "style": "base",
      "showTitle": "always"
    },
    "awp0RemoveProjCellCommandPlacement": {
      "id": "Awp0RemoveProjectsCell",
      "uiAnchor": "aw_removeProjectCellCommandAction",
      "areas": [
        "com.siemens.splm.clientfx.ui.modelObjectListActionCommands"
      ],
      "priority": 300,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "uiwidgetAddProjectCmdPlacement": {
      "id": "uiwidgetAddProjectCmd",
      "uiAnchor": "uiwidget_projectSectionCommands",
      "priority": 150
    },
    "uvCheckoutPlacement-classic": {
      "id": "uvCheckout",
      "uiAnchor": "aw_viewerCommands",
      "priority": 200
    },
    "uvCheckoutPlacement": {
      "id": "uvCheckout",
      "uiAnchor": "aw_universalViewer",
      "priority": 200
    },
    "uvCancelCheckoutPlacement-classic": {
      "id": "uvCancelCheckout",
      "uiAnchor": "aw_viewerCommands",
      "priority": 200
    },
    "uvCancelCheckoutPlacement": {
      "id": "uvCancelCheckout",
      "uiAnchor": "aw_universalViewer",
      "priority": 200
    },
    "uvCheckinPlacement-classic": {
      "id": "uvCheckin",
      "uiAnchor": "aw_viewerCommands",
      "priority": 300
    },
    "uvCheckinPlacement": {
      "id": "uvCheckin",
      "uiAnchor": "aw_universalViewer",
      "priority": 300
    },
    "Awp0ShowObjectUV": {
      "id": "Awp0ShowObjectForUV",
      "uiAnchor": "aw_universalViewerLink",
      "priority": 1
    },
    "Awp0ViewFileUV": {
      "id": "Awp0ViewFileForUV",
      "uiAnchor": "aw_universalViewerLink",
      "priority": 2
    },
    "Awp0OpenInNewWindowUV": {
      "id": "Awp0OpenInNewWindowForUV",
      "uiAnchor": "aw_universalViewerLink",
      "priority": 3
    },
    "Awp0OpenInNewTabUV": {
      "id": "Awp0OpenInNewTabForUV",
      "uiAnchor": "aw_universalViewerLink",
      "priority": 4
    },
    "objectSetViewModeGroup": {
      "id": "objectSetViewModeGroup",
      "uiAnchor": "aw_objectSet",
      "priority": 0
    },
    "objectSetListViewMode": {
      "id": "objectSetListViewMode",
      "priority": 100,
      "parentGroupId": "objectSetViewModeGroup"
    },
    "objectSetTableViewMode": {
      "id": "objectSetTableViewMode",
      "priority": 200,
      "parentGroupId": "objectSetViewModeGroup"
    },
    "objectSetCompareViewMode": {
      "id": "objectSetCompareViewMode",
      "priority": 300,
      "parentGroupId": "objectSetViewModeGroup"
    },
    "objectSetImageViewMode": {
      "id": "objectSetImageViewMode",
      "priority": 400,
      "parentGroupId": "objectSetViewModeGroup"
    },
    "Awp0TablePropertyCreateSection": {
      "id": "Awp0TablePropertyCreate",
      "uiAnchor": "aw_tablePropertyRight",
      "priority": 1
    },
    "Awp0TablePropertyRemoveSection": {
      "id": "Awp0TablePropertyRemove",
      "uiAnchor": "aw_tablePropertyRight",
      "priority": 2
    },
    "Awp0TablePropertyDuplicateSection": {
      "id": "Awp0TablePropertyDuplicate",
      "uiAnchor": "aw_tablePropertyRight",
      "priority": 3
    },
    "Awp0NameValueCreateSection": {
      "id": "Awp0NameValueCreate",
      "uiAnchor": "aw_nameValuePropertyRight",
      "priority": 2
    },
    "Awp0NameValueRemoveSection": {
      "id": "Awp0NameValueRemove",
      "uiAnchor": "aw_nameValuePropertyRight",
      "priority": 1
    },
    "Awp0NameValueCreateXRT_TnFSection": {
      "id": "Awp0NameValueCreate",
      "uiAnchor": "aw_rightWall",
      "priority": 170,
      "parentGroupId": "Awp0NewGroup"
    },
    "Awp0StartEditXRTEditorPlacement": {
      "id": "Awp0StartEditXRTEditor",
      "uiAnchor": "aw_xrteditor",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Awp0CancelEditXRTEditorPlacement": {
      "id": "Awp0CancelEditXRTEditor",
      "uiAnchor": "aw_xrteditor",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "Awp0SaveEditXRTEditorPlacement": {
      "id": "Awp0SaveEditXRTEditor",
      "uiAnchor": "aw_xrteditor",
      "priority": 1,
      "cellDisplay": {
        "hover": true,
        "position": "TOP_RIGHT",
        "selected": true
      }
    },
    "GcShowStartEdit": {
      "id": "GcStartEdit",
      "uiAnchor": "aw_oneStep",
      "priority": 149
    },
    "GcShowExitEdit": {
      "id": "GcExitEdit",
      "uiAnchor": "aw_oneStep",
      "priority": 149
    },
    "GcShowLegend": {
      "id": "graphLegend",
      "uiAnchor": "aw_toolsAndInfo",
      "priority": 0
    },
    "GcLayoutCommandGroupOneStep": {
      "id": "GcLayoutCommandGroup",
      "uiAnchor": "aw_oneStep",
      "priority": 150
    },
    "GcTopToBottomLayoutOneStep": {
      "id": "GcTopToBottomLayout",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "GcLayoutCommandGroup"
    },
    "GcBottomToTopLayoutOneStep": {
      "id": "GcBottomToTopLayout",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "GcLayoutCommandGroup"
    },
    "GcRightToLeftLayoutOneStep": {
      "id": "GcRightToLeftLayout",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "GcLayoutCommandGroup"
    },
    "GcLeftToRightLayoutOneStep": {
      "id": "GcLeftToRightLayout",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "GcLayoutCommandGroup"
    },
    "GcIncrementalLayoutOneStep": {
      "id": "GcIncrementalLayout",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "GcLayoutCommandGroup"
    },
    "GcOrganicLayoutOneStep": {
      "id": "GcOrganicLayout",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "GcLayoutCommandGroup"
    },
    "GcBalloonLayoutOneStep": {
      "id": "GcBalloonLayout",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "GcLayoutCommandGroup"
    },
    "GcSnakeLayoutOneStep": {
      "id": "GcSnakeLayout",
      "uiAnchor": "aw_oneStep",
      "priority": -1,
      "parentGroupId": "GcLayoutCommandGroup"
    },
    "useTransparencyOnOneStep": {
      "id": "Awv0UseTransparency",
      "uiAnchor": "aw_3dViewer",
      "relativeTo": "Awv0ViewOrientationGroup",
      "priority": 2
    },
    "MeasurementFilterGroupOneStep": {
      "id": "MeasurementFilterGroup",
      "uiAnchor": "aw_3dViewer",
      "priority": 15
    },
    "ViewNavigationGroupOneStep": {
      "id": "ViewNavigationGroup",
      "uiAnchor": "aw_3dViewer",
      "relativeTo": "Awv0ViewOrientationGroup",
      "priority": 4
    },
    "Awv0RotateOneStep-classic": {
      "id": "Awv0Rotate",
      "uiAnchor": "aw_oneStep",
      "priority": 200,
      "parentGroupId": "ViewNavigationGroup"
    },
    "Awv0RotateOneStep": {
      "id": "Awv0Rotate",
      "uiAnchor": "aw_3dViewer",
      "priority": 152,
      "parentGroupId": "ViewNavigationGroup"
    },
    "Awv0PanOneStep-classic": {
      "id": "Awv0Pan",
      "uiAnchor": "aw_oneStep",
      "priority": 200,
      "parentGroupId": "ViewNavigationGroup"
    },
    "Awv0PanOneStep": {
      "id": "Awv0Pan",
      "uiAnchor": "aw_3dViewer",
      "priority": 151,
      "parentGroupId": "ViewNavigationGroup"
    },
    "Awv0ZoomOneStep-classic": {
      "id": "Awv0Zoom",
      "uiAnchor": "aw_oneStep",
      "priority": 200,
      "parentGroupId": "ViewNavigationGroup"
    },
    "Awv0ZoomOneStep": {
      "id": "Awv0Zoom",
      "uiAnchor": "aw_3dViewer",
      "priority": 153,
      "parentGroupId": "ViewNavigationGroup"
    },
    "Awv0AreaSelectOneStep": {
      "id": "Awv0AreaSelect",
      "uiAnchor": "aw_3dViewer",
      "relativeTo": "Awv0ViewOrientationGroup",
      "priority": 6
    },
    "UvViewNavigationGroupOneStep": {
      "id": "UvViewNavigationGroup",
      "uiAnchor": "aw_universalViewer",
      "priority": 200
    },
    "Awv0UvRotateOneStep-classic": {
      "id": "Awv0UvRotate",
      "uiAnchor": "aw_oneStep",
      "priority": 200,
      "parentGroupId": "UvViewNavigationGroup"
    },
    "Awv0UvRotateOneStep": {
      "id": "Awv0UvRotate",
      "uiAnchor": "aw_universalViewer",
      "priority": 200,
      "parentGroupId": "UvViewNavigationGroup"
    },
    "Awv0UvPanOneStep-classic": {
      "id": "Awv0UvPan",
      "uiAnchor": "aw_oneStep",
      "priority": 200,
      "parentGroupId": "UvViewNavigationGroup"
    },
    "Awv0UvPanOneStep": {
      "id": "Awv0UvPan",
      "uiAnchor": "aw_universalViewer",
      "priority": 200,
      "parentGroupId": "UvViewNavigationGroup"
    },
    "Awv0UvZoomOneStep-classic": {
      "id": "Awv0UvZoom",
      "uiAnchor": "aw_oneStep",
      "priority": 200,
      "parentGroupId": "UvViewNavigationGroup"
    },
    "Awv0UvZoomOneStep": {
      "id": "Awv0UvZoom",
      "uiAnchor": "aw_universalViewer",
      "priority": 200,
      "parentGroupId": "UvViewNavigationGroup"
    },
    "Awv0ViewerSettingsToolsAndInfo": {
      "id": "Awv0ViewerSettings",
      "uiAnchor": "aw_3dViewer",
      "relativeTo": "Awv0ViewOrientationGroup",
      "priority": 5
    },
    "Awv0ViewOrientationGroupOneStep": {
      "id": "Awv0ViewOrientationGroup",
      "uiAnchor": "aw_3dViewer",
      "priority": 20
    },
    "Awv0OrientIsometricOneStep-classic": {
      "id": "Awv0OrientIsometric",
      "uiAnchor": "aw_oneStep",
      "priority": 119,
      "parentGroupId": "Awv0ViewOrientationGroup"
    },
    "Awv0OrientIsometricOneStep": {
      "id": "Awv0OrientIsometric",
      "uiAnchor": "aw_3dViewer",
      "priority": 119,
      "parentGroupId": "Awv0ViewOrientationGroup"
    },
    "Awv0OrientTrimetricOneStep-classic": {
      "id": "Awv0OrientTrimetric",
      "uiAnchor": "aw_oneStep",
      "priority": 120,
      "parentGroupId": "Awv0ViewOrientationGroup"
    },
    "Awv0OrientTrimetricOneStep": {
      "id": "Awv0OrientTrimetric",
      "uiAnchor": "aw_3dViewer",
      "priority": 120,
      "parentGroupId": "Awv0ViewOrientationGroup"
    },
    "Awv0OrientTopOneStep-classic": {
      "id": "Awv0OrientTop",
      "uiAnchor": "aw_oneStep",
      "priority": 113,
      "parentGroupId": "Awv0ViewOrientationGroup"
    },
    "Awv0OrientTopOneStep": {
      "id": "Awv0OrientTop",
      "uiAnchor": "aw_3dViewer",
      "priority": 113,
      "parentGroupId": "Awv0ViewOrientationGroup"
    },
    "Awv0OrientFrontOneStep-classic": {
      "id": "Awv0OrientFront",
      "uiAnchor": "aw_oneStep",
      "priority": 117,
      "parentGroupId": "Awv0ViewOrientationGroup"
    },
    "Awv0OrientFrontOneStep": {
      "id": "Awv0OrientFront",
      "uiAnchor": "aw_3dViewer",
      "priority": 117,
      "parentGroupId": "Awv0ViewOrientationGroup"
    },
    "Awv0OrientRightOneStep-classic": {
      "id": "Awv0OrientRight",
      "uiAnchor": "aw_oneStep",
      "priority": 116,
      "parentGroupId": "Awv0ViewOrientationGroup"
    },
    "Awv0OrientRightOneStep": {
      "id": "Awv0OrientRight",
      "uiAnchor": "aw_3dViewer",
      "priority": 116,
      "parentGroupId": "Awv0ViewOrientationGroup"
    },
    "Awv0OrientBackOneStep-classic": {
      "id": "Awv0OrientBack",
      "uiAnchor": "aw_oneStep",
      "priority": 118,
      "parentGroupId": "Awv0ViewOrientationGroup"
    },
    "Awv0OrientBackOneStep": {
      "id": "Awv0OrientBack",
      "uiAnchor": "aw_3dViewer",
      "priority": 118,
      "parentGroupId": "Awv0ViewOrientationGroup"
    },
    "Awv0OrientBottomOneStep-classic": {
      "id": "Awv0OrientBottom",
      "uiAnchor": "aw_oneStep",
      "priority": 114,
      "parentGroupId": "Awv0ViewOrientationGroup"
    },
    "Awv0OrientBottomOneStep": {
      "id": "Awv0OrientBottom",
      "uiAnchor": "aw_3dViewer",
      "priority": 114,
      "parentGroupId": "Awv0ViewOrientationGroup"
    },
    "Awv0OrientLeftOneStep-classic": {
      "id": "Awv0OrientLeft",
      "uiAnchor": "aw_oneStep",
      "priority": 115,
      "parentGroupId": "Awv0ViewOrientationGroup"
    },
    "Awv0OrientLeftOneStep": {
      "id": "Awv0OrientLeft",
      "uiAnchor": "aw_3dViewer",
      "priority": 115,
      "parentGroupId": "Awv0ViewOrientationGroup"
    },
    "UvAwv0ViewOrientationGroupOneStep": {
      "id": "UvAwv0ViewOrientationGroup",
      "uiAnchor": "aw_universalViewer",
      "priority": 200
    },
    "UvAwv0OrientIsometricOneStep-classic": {
      "id": "UvAwv0OrientIsometric",
      "uiAnchor": "aw_oneStep",
      "priority": 100,
      "parentGroupId": "UvAwv0ViewOrientationGroup"
    },
    "UvAwv0OrientIsometricOneStep": {
      "id": "UvAwv0OrientIsometric",
      "uiAnchor": "aw_universalViewer",
      "priority": 100,
      "parentGroupId": "UvAwv0ViewOrientationGroup"
    },
    "UvAwv0OrientTrimetricOneStep-classic": {
      "id": "UvAwv0OrientTrimetric",
      "uiAnchor": "aw_oneStep",
      "priority": 100,
      "parentGroupId": "UvAwv0ViewOrientationGroup"
    },
    "UvAwv0OrientTrimetricOneStep": {
      "id": "UvAwv0OrientTrimetric",
      "uiAnchor": "aw_universalViewer",
      "priority": 100,
      "parentGroupId": "UvAwv0ViewOrientationGroup"
    },
    "UvAwv0OrientTopOneStep-classic": {
      "id": "UvAwv0OrientTop",
      "uiAnchor": "aw_oneStep",
      "priority": 100,
      "parentGroupId": "UvAwv0ViewOrientationGroup"
    },
    "UvAwv0OrientTopOneStep": {
      "id": "UvAwv0OrientTop",
      "uiAnchor": "aw_universalViewer",
      "priority": 100,
      "parentGroupId": "UvAwv0ViewOrientationGroup"
    },
    "UvAwv0OrientFrontOneStep-classic": {
      "id": "UvAwv0OrientFront",
      "uiAnchor": "aw_oneStep",
      "priority": 100,
      "parentGroupId": "UvAwv0ViewOrientationGroup"
    },
    "UvAwv0OrientFrontOneStep": {
      "id": "UvAwv0OrientFront",
      "uiAnchor": "aw_universalViewer",
      "priority": 100,
      "parentGroupId": "UvAwv0ViewOrientationGroup"
    },
    "UvAwv0OrientRightOneStep-classic": {
      "id": "UvAwv0OrientRight",
      "uiAnchor": "aw_oneStep",
      "priority": 100,
      "parentGroupId": "UvAwv0ViewOrientationGroup"
    },
    "UvAwv0OrientRightOneStep": {
      "id": "UvAwv0OrientRight",
      "uiAnchor": "aw_universalViewer",
      "priority": 100,
      "parentGroupId": "UvAwv0ViewOrientationGroup"
    },
    "UvAwv0OrientBackOneStep-classic": {
      "id": "UvAwv0OrientBack",
      "uiAnchor": "aw_oneStep",
      "priority": 100,
      "parentGroupId": "UvAwv0ViewOrientationGroup"
    },
    "UvAwv0OrientBackOneStep": {
      "id": "UvAwv0OrientBack",
      "uiAnchor": "aw_universalViewer",
      "priority": 100,
      "parentGroupId": "UvAwv0ViewOrientationGroup"
    },
    "UvAwv0OrientBottomOneStep-classic": {
      "id": "UvAwv0OrientBottom",
      "uiAnchor": "aw_oneStep",
      "priority": 100,
      "parentGroupId": "UvAwv0ViewOrientationGroup"
    },
    "UvAwv0OrientBottomOneStep": {
      "id": "UvAwv0OrientBottom",
      "uiAnchor": "aw_universalViewer",
      "priority": 100,
      "parentGroupId": "UvAwv0ViewOrientationGroup"
    },
    "UvAwv0OrientLeftOneStep-classic": {
      "id": "UvAwv0OrientLeft",
      "uiAnchor": "aw_oneStep",
      "priority": 100,
      "parentGroupId": "UvAwv0ViewOrientationGroup"
    },
    "UvAwv0OrientLeftOneStep": {
      "id": "UvAwv0OrientLeft",
      "uiAnchor": "aw_universalViewer",
      "priority": 100,
      "parentGroupId": "UvAwv0ViewOrientationGroup"
    },
    "Awv0ViewerConvenienceCommandGroupOneStep": {
      "id": "Awv0ViewerConvenienceCommandGroup",
      "uiAnchor": "aw_3dViewer",
      "relativeTo": "Awv0ViewOrientationGroup",
      "priority": 1
    },
    "Awv0AllOnOneStep-classic": {
      "id": "Awv0AllOn",
      "uiAnchor": "aw_oneStep",
      "priority": 100,
      "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
    },
    "Awv0AllOnOneStep": {
      "id": "Awv0AllOn",
      "uiAnchor": "aw_3dViewer",
      "priority": 121,
      "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
    },
    "Awv0AllOffOneStep-classic": {
      "id": "Awv0AllOff",
      "uiAnchor": "aw_oneStep",
      "priority": 100,
      "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
    },
    "Awv0AllOffOneStep": {
      "id": "Awv0AllOff",
      "uiAnchor": "aw_3dViewer",
      "priority": 122,
      "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
    },
    "Awv0SelectedOffOneStep-classic": {
      "id": "Awv0SelectedOff",
      "uiAnchor": "aw_oneStep",
      "priority": 100,
      "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
    },
    "Awv0SelectedOffOneStep": {
      "id": "Awv0SelectedOff",
      "uiAnchor": "aw_3dViewer",
      "priority": 127,
      "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
    },
    "Awv0SelectedOnOneStep-classic": {
      "id": "Awv0SelectedOn",
      "uiAnchor": "aw_oneStep",
      "priority": 100,
      "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
    },
    "Awv0SelectedOnOneStep": {
      "id": "Awv0SelectedOn",
      "uiAnchor": "aw_3dViewer",
      "priority": 126,
      "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
    },
    "Awv0SelectedOnlyOneStep-classic": {
      "id": "Awv0SelectedOnly",
      "uiAnchor": "aw_oneStep",
      "priority": 100,
      "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
    },
    "Awv0SelectedOnlyOneStep": {
      "id": "Awv0SelectedOnly",
      "uiAnchor": "aw_3dViewer",
      "priority": 129,
      "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
    },
    "Awv0SelectContextOneStep-classic": {
      "id": "Awv0SelectContext",
      "uiAnchor": "aw_oneStep",
      "priority": 100,
      "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
    },
    "Awv0SelectContextOneStep": {
      "id": "Awv0SelectContext",
      "uiAnchor": "aw_3dViewer",
      "priority": 128,
      "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
    },
    "Awv0RemoveAnalysisResultOneStep": {
      "id": "Awv0RemoveAnalysisResult",
      "uiAnchor": "aw_3dViewer",
      "priority": 129,
      "parentGroupId": "Awv0ViewerConvenienceCommandGroup"
    },
    "Awv0FitOneStep": {
      "id": "Awv0Fit",
      "uiAnchor": "aw_3dViewer",
      "relativeTo": "Awv0ViewOrientationGroup",
      "priority": 3
    },
    "Awv0Close3DSubCommandsToolbarOneStep": {
      "id": "Awv0Close3DSubCommandsToolbar",
      "uiAnchor": "aw_3dViewerSubCommandsSecondAnchor",
      "priority": 9
    },
    "rotateCCWPlacement": {
      "id": "rotateCCW",
      "uiAnchor": "aw_universalViewer",
      "priority": 410
    },
    "rotateCWPlacement": {
      "id": "rotateCW",
      "uiAnchor": "aw_universalViewer",
      "priority": 411
    },
    "uvTextWordWrapPlacement": {
      "id": "uvTextWordWrap",
      "uiAnchor": "aw_universalViewer",
      "priority": 500
    },
    "Awp0OpenVVIOneStep-classic": {
      "id": "Awp0OpenVVI",
      "uiAnchor": "aw_oneStep",
      "priority": 3,
      "parentGroupId": "Awp0OpenGroup"
    },
    "Awp0OpenVVIOneStep": {
      "id": "Awp0OpenVVI",
      "uiAnchor": "aw_rightWall",
      "priority": 280,
      "parentGroupId": "Awp0OpenGroup"
    },
    "showHomeFolder": {
      "id": "Awp0ShowHomeFolder",
      "uiAnchor": "test",
      "priority": 1
    },
    "Awp0UnPinObjectOneStep": {
      "id": "Awp0UnPinObject",
      "uiAnchor": "aw_rightWall",
      "parentGroupId": "Awp0ManageGroup",
      "priority": 210
    },
    "Awp0PinObjectOneStep": {
      "id": "Awp0PinObject",
      "uiAnchor": "aw_rightWall",
      "parentGroupId": "Awp0ManageGroup",
      "priority": 140
    },
    "GoToUIComp": {
      "id": "GoToUIComp",
      "uiAnchor": "aw_globalNavigationbar",
      "priority": 10
    }
  },
  "actions": {
    "DigitalAssetsPanelAction": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "DigitalAssetsPanel",
          "parent": ".aw-layout-workarea",
          "width": "MEDIUM",
          "height": "FULL",
          "placement": "right",
          "subPanelContext": "{{commandContext}}",
          "isCloseVisible": false
        }
      }
    },
    "performDigitalAssetReplacement": {
      "actionType": "JSFunction",
      "method": "fireCommand",
      "deps": "js/digitalAssetPanelService",
      "inputData": {
        "commandId": "cmdReplaceDigitalAsset",
        "selection": "{{commandContext.vmo}}"
      }
    },
    "performDigitalAssetDelete": {
      "actionType": "JSFunction",
      "method": "fireCommand",
      "deps": "js/digitalAssetPanelService",
      "inputData": {
        "commandId": "cmdDeleteDigitalAsset",
        "selection": "{{commandContext.vmo}}"
      }
    },
    "performOpenObject": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{commandContext.vmo}}",
          "path": "uid"
        }
      }
    },
    "Arm0ActivateExportToRoundTripExcelPanel": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "Arm0ExportToRoundTripExcelDocument",
          "parent": ".aw-layout-workareaMain",
          "placement": "right",
          "width": "SMALL",
          "height": "FULL",
          "isCloseVisible": false,
          "subPanelContext": "{{commandContext}}"
        }
      }
    },
    "Arm0ActivateImportPanel": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "Arm0ImportExcel",
          "parent": ".aw-layout-workareaMain",
          "placement": "right",
          "width": "SMALL",
          "height": "FULL",
          "isCloseVisible": false
        }
      }
    },
    "deletePropOnExportPanel": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "exportColumnList.removeColumn",
            "eventData": {
              "selectedColumn": "{{commandContext.vmo}}"
            }
          }
        ]
      }
    },
    "Arm0SelectedColmnsSubAddCmdPanelAction": {
      "actionType": "JSFunction",
      "method": "updateSharedDataState",
      "inputData": {
        "state": "{{commandContext.createContext.sharedData}}",
        "newValue": {
          "activeView": "Arm0ExportAddPropertiesSub"
        }
      },
      "deps": "js/ExcelExportToOfficeApp"
    },
    "moveDown": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Arm0MoveDown"
          }
        ]
      }
    },
    "moveUp": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Arm0MoveUp"
          }
        ]
      }
    },
    "updateFavorites": {
      "actionType": "JSFunctionAsync",
      "method": "getFavorites",
      "inputData": {
        "refreshFromServer": true
      },
      "events": {
        "success": [
          {
            "condition": "ctx.visibleServerCommands.Awp0AddToFavorites === true",
            "name": "favorites.add"
          },
          {
            "condition": "ctx.visibleServerCommands.Awp0RemoveFromFavorites === true",
            "name": "favorites.remove"
          }
        ]
      },
      "deps": "js/favoritesService"
    },
    "addFavorites": {
      "actionType": "JSFunctionAsync",
      "method": "addFavorites",
      "inputData": {
        "selectedObjects": {
          "$adapt": "{{ctx.mselected}}"
        }
      },
      "events": {
        "success": [
          {
            "name": "favorites.changed"
          },
          {
            "name": "cdm.updated",
            "eventData": {
              "updatedObjects": "{{ctx.mselected}}"
            }
          }
        ]
      },
      "deps": "js/favoritesService"
    },
    "removeFavorites": {
      "actionType": "JSFunctionAsync",
      "method": "removeFavorites",
      "inputData": {
        "selectedObjects": {
          "$adapt": "{{ctx.mselected}}"
        }
      },
      "events": {
        "success": [
          {
            "name": "favorites.changed"
          },
          {
            "name": "cdm.updated",
            "eventData": {
              "updatedObjects": "{{ctx.mselected}}"
            }
          }
        ]
      },
      "deps": "js/favoritesService"
    },
    "HostingSetRevisionRuleAction": {
      "actionType": "JSFunction",
      "method": "setRevisionRule",
      "deps": "js/hosting/inf/services/hostSession_2014_07",
      "inputData": {
        "uid": "{{hosting.revRuleUid}}"
      }
    },
    "HostingSetRevisionRuleActionSoa": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2013-05-LOV",
      "method": "validateLOVValueSelections",
      "inputData": {
        "lovInput": {
          "boName": "UserSession",
          "operationName": "Edit",
          "owningObject": {
            "type": "UserSession",
            "uid": "{{hosting.userSessionUid}}"
          },
          "propertyValues": {
            "awp0RevRule": [
              "{{hosting.revRuleUid}}"
            ]
          }
        },
        "propName": "awp0RevRule",
        "uidOfSelectedRows": []
      },
      "events": {
        "success": [
          {
            "name": "aw.revisionRuleChangeEvent",
            "eventData": {
              "revisionRuleName": "{{hosting.revRuleName}}",
              "revisionRuleUID": "{{hosting.revRuleUid}}",
              "isSourceHosting": true
            }
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "revRuleChangeSucess"
          }
        ],
        "failure": [
          {
            "message": "revRuleChangeFailed"
          }
        ]
      }
    },
    "Awp0OpenHostedAction": {
      "actionType": "JSFunction",
      "method": "openInHost",
      "inputData": {
        "sourceObjects": "{{ctx.mselected}}"
      },
      "deps": "js/hosting/hostOpenService"
    },
    "Awp0OpenNewViewHostedAction": {
      "actionType": "JSFunction",
      "method": "openNewShowObjectViewInHost",
      "inputData": {
        "sourceObjects": "{{ctx.mselected}}"
      },
      "deps": "js/hosting/hostOpenService"
    },
    "Awp0AddComponentHostedAction": {
      "actionType": "JSFunction",
      "method": "addComponentInHost",
      "inputData": {
        "sourceObjects": "{{ctx.mselected}}"
      },
      "deps": "js/hosting/hostOpenService"
    },
    "isDSMEnabled": {
      "actionType": "JSFunction",
      "method": "isDSMUsable",
      "deps": "js/dsmUtils",
      "outputData": {
        "ctx.selectedDataset.isDSMUsable": ""
      },
      "events": {
        "success": [
          {
            "name": "replaceFile.isDSMEnabled",
            "condition": "ctx.selectedDataset.isDSMUsable"
          },
          {
            "name": "replaceFile.syncronousReplace",
            "condition": "!ctx.selectedDataset.isDSMUsable"
          }
        ]
      }
    },
    "loadPlmdReplaceOperationData": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-AWS2-2018-05-FileMgmt",
      "method": "loadPlmdTicketForReplace",
      "deps": "js/Awp0ReplaceDatasetService",
      "inputData": {
        "infos": "{{function:createInputForDSM}}"
      },
      "outputData": {
        "fmsTicket": "output[1][0].ticket",
        "ctx.selectedDataset.isMultipleReference": "output[1][0].referenceCount",
        "ctx.selectedDataset.datasetDisplayName": "output[1][0].datasetName",
        "ctx.selectedDataset.fileNameExt": "output[1][0].fileNameExt",
        "ctx.selectedDataset.fileNames": "output[1][0].fileNames",
        "mapPartialErrors": "{{function:isPlatformSupported}}"
      },
      "events": {
        "success": [
          {
            "name": "replaceFile.EvaluateCondition"
          }
        ],
        "failure": [
          {
            "name": "replaceFile.syncronousReplace",
            "condition": "mapPartialErrors"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "errorCode.code===14167",
            "message": "invalidInputObject"
          },
          {
            "condition": "errorCode.code===14165",
            "message": "uploadInProgress"
          },
          {
            "condition": "errorCode.code===141170",
            "message": "platformnotsupported"
          }
        ]
      }
    },
    "evaluateCondition": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "replaceFile.syncronousReplace",
            "condition": "ctx.selectedDataset.isDSMUsable === false"
          },
          {
            "name": "replaceFile.openSinglePLmdFile",
            "condition": "ctx.selectedDataset.isDSMUsable === true && ctx.selectedDataset.isMultipleReference === 1 && data.fmsTicket !== ''"
          },
          {
            "name": "imanfile.displayReplacePanel",
            "condition": "ctx.selectedDataset.isDSMUsable === true && ctx.selectedDataset.isMultipleReference > 1"
          }
        ]
      }
    },
    "nullEventCheck": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "dataset.ref_listIsNull",
            "condition": "ctx.selected.props.ref_list === null || ctx.selected.props.ref_list === undefined"
          },
          {
            "name": "dataset.ref_listIsNotNull",
            "condition": "ctx.selected.props.ref_list != null && ctx.selected.props.ref_list != undefined"
          }
        ]
      }
    },
    "getPropertyRefListSOA": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "inputData": {
        "attributes": [
          "ref_list",
          "ref_names"
        ],
        "objects": [
          "{{ctx.selected}}"
        ]
      },
      "policy": {
        "types": [
          {
            "name": "Dataset",
            "properties": [
              {
                "name": "ref_list",
                "modifiers": [
                  {
                    "Value": "true",
                    "name": "withProperties"
                  }
                ]
              },
              {
                "name": "ref_names"
              }
            ]
          },
          {
            "name": "ImanFile",
            "properties": [
              {
                "name": "original_file_name",
                "modifiers": [
                  {
                    "Value": "true",
                    "name": "withProperties"
                  }
                ]
              }
            ]
          }
        ]
      },
      "events": {
        "success": [
          {
            "name": "replaceFile.loadPlmdObjects",
            "condition": "ctx.selectedDataset.isDSMUsable"
          },
          {
            "name": "dataset.getDatasetObject",
            "condition": "!ctx.selectedDataset.isDSMUsable"
          }
        ]
      }
    },
    "getDatasetObjectJS": {
      "actionType": "JSFunction",
      "method": "getObject",
      "deps": "soa/kernel/clientDataModel",
      "inputData": {
        "dataset": "{{ctx.selected.uid}}"
      },
      "outputData": {
        "originalFileName": "props.ref_list.dbValues[0].original_file_name",
        "ctx.selectedDataset.datasetDisplayName": "props.object_string.dbValues[0]",
        "objects": "props.ref_list.dbValues"
      },
      "events": {
        "success": [
          {
            "name": "imanfile.originalfilenamenull",
            "condition": "data.originalFileName === undefined || data.originalFileName === null"
          },
          {
            "name": "imanfile.originalfilenamenotnull",
            "condition": "data.originalFileName !== undefined && data.originalFileName !== null"
          }
        ]
      }
    },
    "getOriginalFilenameSOA": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "deps": "soa/kernel/clientDataModel",
      "inputData": {
        "attributes": [
          "original_file_name"
        ],
        "objects": "{{function:getObjects}}"
      },
      "events": {
        "success": [
          {
            "name": "imanfile.originalfilenamenotnull"
          }
        ]
      }
    },
    "getOriginalFileNameObjectsJS": {
      "actionType": "JSFunction",
      "method": "getObjects",
      "deps": "soa/kernel/clientDataModel",
      "inputData": {
        "dataset": "{{data.objects}}"
      },
      "outputData": {
        "objects": "",
        "originalFileName": "0.props.original_file_name"
      },
      "events": {
        "success": [
          {
            "name": "imanfile.populateFileNames"
          }
        ]
      }
    },
    "populateFileNames": {
      "actionType": "JSFunction",
      "method": "populateFileNames",
      "deps": "js/Awp0ReplaceDatasetService",
      "inputData": {
        "objects": "{{data.objects}}",
        "originalFileName": "{{data.originalFileName}}"
      },
      "outputData": {
        "originalFileName": ""
      },
      "events": {
        "success": [
          {
            "name": "imanfile.replaceDataset",
            "condition": "ctx.selectedDataset.fileNames.length > 0"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "ctx.selectedDataset.fileNames.length === 0",
            "message": "dataSetCannotBeReplacedMessage"
          }
        ]
      }
    },
    "replaceDataset": {
      "actionType": "JSFunction",
      "method": "getFileExtension",
      "deps": "js/awFileNameUtils",
      "inputData": {
        "fileName": "{{data.originalFileName.dbValues[0]}}"
      },
      "outputData": {
        "ctx.selectedDataset.fileNameExt": ""
      },
      "events": {
        "success": [
          {
            "name": "imanfile.displayReplacePanel"
          }
        ]
      }
    },
    "replacePanelDisplay": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "Awp0ReplaceDataset",
          "placement": "right",
          "parent": ".aw-layout-workarea",
          "width": "SMALL",
          "height": "FULL",
          "isCloseVisible": false
        }
      }
    },
    "openPlmdFile": {
      "actionType": "openFile",
      "inputData": {
        "fileTicket": "{{data.fmsTicket}}"
      },
      "events": {
        "success": [
          {
            "name": "complete"
          }
        ]
      }
    },
    "removeFileFromDataset": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2021-06-DataManagement",
      "method": "removeNamedReferenceFromDataset2",
      "deps": "js/cutUtils",
      "inputData": {
        "removeNamedReferenceIn": "{{function:getRemoveFileInputs}}"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": [
                "{{ctx.selected}}"
              ]
            }
          }
        ]
      }
    },
    "getDatasetTypesWithDefaultRelation": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-AWS2-2015-10-DataManagement",
      "method": "getDatasetTypesWithDefaultRelation",
      "inputData": {
        "fileExtensions": "{{function:getDatasetTypesWithDefaultRelationInput}}",
        "parent": {
          "type": "unknownType",
          "uid": "AAAAAAAAAAAAAA"
        }
      },
      "policy": {
        "types": [
          {
            "name": "DatasetType",
            "properties": [
              {
                "name": "datasettype_name"
              }
            ]
          }
        ]
      },
      "outputData": {
        "datasetTypesWithDefaultRelInfo": "output[0].datasetTypesWithDefaultRelInfo"
      },
      "events": {
        "success": [
          {
            "name": "dataset.typeInfoObtained"
          }
        ]
      },
      "deps": "js/addObjectUtils"
    },
    "fileUploadCommandActivatePanel": {
      "actionType": "JSFunction",
      "method": "setFileUploadState",
      "deps": "js/addObjectUtils"
    },
    "downloadImanFile": {
      "actionType": "JSFunctionAsync",
      "method": "downloadImanFile",
      "inputData": {
        "propertyName": "{{commandContext.selectionModel}}"
      },
      "outputData": {
        "downloadedFile": ""
      },
      "events": {
        "success": [
          {
            "name": "dataset.hasDSMUsage"
          }
        ]
      },
      "deps": "js/fileDownloadService"
    },
    "hasDSMUsage": {
      "actionType": "JSFunction",
      "method": "isDSMUsable",
      "deps": "js/dsmUtils",
      "outputData": {
        "isDSMUsableFlag": ""
      },
      "events": {
        "success": [
          {
            "condition": "data.isDSMUsableFlag",
            "name": "dataset.getImanModelObjectFromVMO"
          },
          {
            "condition": "!data.isDSMUsableFlag",
            "name": "dataset.openFileFromTicket"
          }
        ]
      }
    },
    "removeLocaleAction": {
      "actionType": "JSFunction",
      "method": "fireRemoveLocaleEvent",
      "inputData": {
        "propertyName": "{{commandContext}}"
      },
      "deps": "js/multiLanguagePropertyService"
    },
    "openFileVersionsPanel": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "Awp0ShowFileVersions",
          "placement": "right",
          "parent": ".aw-layout-workarea",
          "width": "MEDIUM",
          "height": "FULL",
          "isCloseVisible": false,
          "subPanelContext": "{{commandContext}}"
        }
      }
    },
    "openCreateAlternateIdPanel": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "Awp0CreateAlternateId",
          "placement": "right",
          "parent": ".aw-layout-workarea",
          "width": "SMALL",
          "height": "FULL",
          "isCloseVisible": false,
          "subPanelContext": "{{commandContext}}"
        }
      }
    },
    "openCreateAliasIdPanel": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "Awp0CreateAliasId",
          "placement": "right",
          "parent": ".aw-layout-workarea",
          "width": "SMALL",
          "height": "FULL",
          "isCloseVisible": false,
          "subPanelContext": "{{commandContext}}"
        }
      }
    },
    "openCreateDispRulePanel": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "Awp0CreateDispRule",
          "placement": "right",
          "parent": ".aw-layout-workarea",
          "width": "SMALL",
          "height": "FULL",
          "isCloseVisible": false,
          "subPanelContext": "{{commandContext}}"
        }
      }
    },
    "handleRedLineMode": {
      "actionType": "JSFunction",
      "method": "toggleRedLineMode",
      "inputData": {},
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "refreshLocationFlag": true,
              "relatedModified": [
                "{{ctx.selected}}"
              ]
            }
          }
        ]
      },
      "deps": "js/xrtParser.service"
    },
    "signOut": {
      "actionType": "JSFunction",
      "method": "terminateSession",
      "deps": "js/sessionManager.service",
      "events": {
        "success": [
          {
            "name": "awPopupWidget.close"
          }
        ]
      }
    },
    "viewProfile": {
      "actionType": "JSFunction",
      "method": "go",
      "inputData": {
        "transitionTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
        "toParams": {
          "uid": "{{ctx.user.uid}}"
        }
      },
      "deps": "js/locationNavigation.service",
      "events": {
        "success": [
          {
            "name": "awPopupWidget.close"
          }
        ]
      }
    },
    "closeCommandPanelOrDialog": {
      "actionType": "batchJob",
      "steps": [
        {
          "condition": "commandContext.isPopupAnchorVisible===true",
          "action": "closePanelDialog"
        },
        {
          "condition": "! (commandContext.isPopupAnchorVisible===true)",
          "action": "closeCommandPanelAction"
        }
      ]
    },
    "closePanelDialog": {
      "actionType": "JSFunction",
      "method": "closeDialog",
      "inputData": {
        "editContext": "INFO_PANEL_CONTEXT",
        "popupId": "{{commandContext.popupOptions.popupId}}"
      },
      "deps": "js/dialogService"
    },
    "closeCommandPanelAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "complete",
            "eventData": {
              "source": "toolAndInfoPanel"
            }
          },
          {
            "name": "complete",
            "eventData": {
              "source": "navigationPanel"
            }
          }
        ]
      }
    },
    "pinUnpinCommandPanelAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "awsidenav.pinUnpinPanel",
            "eventData": {
              "source": "toolAndInfoPanel"
            }
          }
        ]
      }
    },
    "quickAccessAction": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "CmdQuickAccess",
          "placement": "left",
          "parent": ".aw-layout-subLocation",
          "width": "SMALL",
          "height": "FULL",
          "isCloseVisible": false,
          "push": true
        }
      }
    },
    "goHome": {
      "actionType": "JSFunction",
      "method": "go",
      "deps": "js/locationNavigation.service",
      "inputData": {
        "defaultRoutePath": "{{ctx.defaultRoutePath}}"
      }
    },
    "performCutOnDelete": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "cut.performCutOperation"
          }
        ]
      }
    },
    "refreshSelectedObject": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": [
                "{{ctx.pselected}}"
              ]
            }
          }
        ]
      }
    },
    "cutConfiguredRevs": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "cut.getUnderlyingObjects",
            "condition": "((ctx.pwaSelectionInfo.currentSelectedCount >= 1 && !ctx.xrtSummaryContextObject ) || (ctx.pwaSelectionInfo.currentSelectedCount === 1 && ctx.xrtSummaryContextObject.uid === ctx.selected.uid ) || ( ctx.xrtSummaryContextObject && ctx.preferences.AWC_display_configured_revs_for_pwa[0] === 'true' && ctx.xrtSummaryContextObject.uid !== ctx.selected.uid && ctx.selected.modelType.typeHierarchyArray.indexOf( 'ItemRevision' ) !== -1 ))"
          },
          {
            "name": "cut.performCutOperation",
            "condition": "!((ctx.pwaSelectionInfo.currentSelectedCount >= 1 && !ctx.xrtSummaryContextObject ) || (ctx.pwaSelectionInfo.currentSelectedCount === 1 && ctx.xrtSummaryContextObject.uid === ctx.selected.uid ) || ( ctx.xrtSummaryContextObject && ctx.preferences.AWC_display_configured_revs_for_pwa[0] === 'true' && ctx.xrtSummaryContextObject.uid !== ctx.selected.uid && ctx.selected.modelType.typeHierarchyArray.indexOf( 'ItemRevision' ) !== -1 ))"
          }
        ]
      }
    },
    "getUnderlyingObjects": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-AWS2-2020-05-DataManagement",
      "method": "getRelatedObjsForConfiguredRevision",
      "deps": "js/cutUtils",
      "inputData": {
        "input": "{{function:cutInputs}}"
      },
      "outputData": {
        "cutInput": "response"
      },
      "events": {
        "success": [
          {
            "name": "cut.performCutOnUnderlyingObjects"
          }
        ]
      }
    },
    "performCutOnUnderlyingObjects": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2014-10-DataManagement",
      "method": "removeChildren",
      "deps": "js/cutUtils",
      "inputData": {
        "inputData": "{{data.cutInput}}"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": "{{function:adaptedRelatedModifiedCutInput}}",
              "createdObjects": "",
              "childObjects": "{{ctx.mselected}}"
            }
          },
          {
            "name": "cutToAwClipboard"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1)",
            "message": "cutSingleSuccessful"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length > 1)",
            "message": "cutMultipleSuccessful"
          }
        ],
        "failure": [
          {
            "message": "cutCommandFailure"
          }
        ]
      }
    },
    "performCutOperation": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2014-10-DataManagement",
      "method": "removeChildren",
      "deps": "js/cutUtils",
      "inputData": {
        "inputData": "{{function:cutInputs}}"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": "{{function:adaptedRelatedModifiedCutInput}}",
              "createdObjects": "",
              "childObjects": "{{ctx.mselected}}"
            }
          },
          {
            "name": "cutToAwClipboard"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1)",
            "message": "cutSingleSuccessful"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length > 1)",
            "message": "cutMultipleSuccessful"
          }
        ],
        "failure": [
          {
            "message": "performCutFailure"
          }
        ]
      }
    },
    "cutToAwClipboard": {
      "actionType": "JSFunction",
      "method": "setContents",
      "deps": "js/tcClipboardService",
      "inputData": {
        "uid": "{{ctx.mselected}}"
      }
    },
    "saveAsContext": {
      "actionType": "JSFunction",
      "method": "updateSaveAsContextAndActivateCommandPanel",
      "deps": "js/Awp0ShowSaveAsService",
      "inputData": {
        "input": {
          "selectedObj": "{{ctx.selected}}",
          "commandId": "Awp0ShowSaveAs",
          "location": "aw_toolsAndInfo"
        }
      }
    },
    "reviseContext": {
      "actionType": "JSFunction",
      "method": "updateSaveAsContextAndActivateCommandPanel",
      "deps": "js/Awp0ShowSaveAsService",
      "inputData": {
        "input": {
          "selectedObj": "{{ctx.selected}}",
          "commandId": "Awp0ShowRevision",
          "location": "aw_toolsAndInfo"
        }
      }
    },
    "showObject": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{ctx.selected.uid}}"
      }
    },
    "showObjectFromCommandArgs": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{commandContext.vmo.uid}}",
        "edit": "{{commandContext.commandArgs.edit}}"
      }
    },
    "showHoveredObject": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{commandContext.vmo}}",
          "path": "uid"
        }
      }
    },
    "getSelObjsForMultipleFileDwnld": {
      "actionType": "JSFunctionAsync",
      "method": "getAdaptedObjects",
      "inputData": {
        "sourceObjects": "{{ctx.mselected}}"
      },
      "outputData": {
        "inputModelObjects": ""
      },
      "events": {
        "success": [
          {
            "name": "datasets.getFileNamesAndTickets"
          }
        ]
      },
      "deps": "js/adapterService"
    },
    "initiateMultipleFileDownload": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-AWS2-2020-05-FileMgmt",
      "method": "getFileNamesWithTicketInfo",
      "inputData": {
        "businessObjectsIn": "{{data.inputModelObjects}}"
      },
      "outputData": {
        "fileNamesAndTickets": "output",
        "unprocessedInputsWhileDownload": "ServiceData.partialErrors"
      },
      "events": {
        "success": [
          {
            "name": "datasets.openFilesFromTickets"
          }
        ],
        "failure": [
          {
            "name": "datasets.openFilesFromTickets"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "data.unprocessedInputsWhileDownload === undefined && data.inputModelObjects.length === 1 ",
            "message": "singleObjectWasDownloaded"
          },
          {
            "condition": "data.unprocessedInputsWhileDownload === undefined && data.inputModelObjects.length > 1 ",
            "message": "multipleObjectsWereDownloaded"
          }
        ],
        "failure": [
          {
            "message": "multipleObjectsWereDownloadedFailure"
          }
        ]
      }
    },
    "openMultipleFilesFromTickets": {
      "actionType": "JSFunction",
      "method": "openFiles",
      "deps": "js/fmsUtils",
      "inputData": {
        "fileTickets": "{{data.fileNamesAndTickets}}"
      }
    },
    "getRefListModelObject": {
      "actionType": "JSFunction",
      "method": "getObjects",
      "deps": "soa/kernel/clientDataModel",
      "inputData": {
        "dataset": "{{data.datasetModelObject.props.ref_list.dbValues}}"
      },
      "outputData": {
        "modelObject": ""
      },
      "events": {
        "success": [
          {
            "name": "dataset.downloadFile"
          }
        ]
      }
    },
    "checkIsDSMUsable": {
      "actionType": "JSFunction",
      "method": "isDSMUsable",
      "deps": "js/dsmUtils",
      "outputData": {
        "isDSMUsableFlag": ""
      },
      "events": {
        "success": [
          {
            "condition": "data.isDSMUsableFlag",
            "name": "dataset.getPropertyForDSM"
          },
          {
            "condition": "!data.isDSMUsableFlag",
            "name": "dataset.datasetObjectLoaded"
          }
        ]
      }
    },
    "downloadSelectedDatasetForDSM": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-Core-2014-10-FileManagement",
      "method": "getPlmdFileTicketForDownload",
      "inputData": {
        "infos": [
          {
            "dataset": "{{data.datasetModelObject}}",
            "imanFile": "{{data.modelObject}}",
            "absoluteFilePath": ""
          }
        ]
      },
      "outputData": {
        "downloadedFile": ""
      },
      "events": {
        "success": [
          {
            "name": "dataset.openFileFromTicketForDSM"
          }
        ]
      }
    },
    "downloadSelectedDataset": {
      "actionType": "JSFunctionAsync",
      "method": "getFileReadTickets",
      "deps": "soa/fileManagementService",
      "inputData": {
        "files": {
          "$adapt": "{{data.modelObject}}"
        }
      },
      "outputData": {
        "downloadedFile": ""
      },
      "events": {
        "success": [
          {
            "name": "dataset.openFileFromTicket"
          }
        ]
      }
    },
    "getModelObjectFromCommandContextVmo": {
      "actionType": "JSFunction",
      "method": "getObject",
      "deps": "soa/kernel/clientDataModel",
      "inputData": {
        "uid": {
          "$adapt": "{{commandContext.vmo}}",
          "path": "uid"
        }
      },
      "outputData": {
        "datasetModelObject": ""
      },
      "events": {
        "success": [
          {
            "name": "dataset.checkIsDSMUsable"
          }
        ]
      }
    },
    "getDatasetRefProperties": {
      "actionType": "JSFunctionAsync",
      "method": "getProperties",
      "deps": "soa/dataManagementService",
      "inputData": {
        "uids": [
          "{{data.datasetModelObject.uid}}"
        ],
        "propNames": [
          "ref_list",
          "release_status_list"
        ]
      },
      "events": {
        "success": [
          {
            "condition": "data.datasetModelObject.props.ref_list.dbValues.length > 0",
            "name": "dataset.getRefListModelObject"
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "data.datasetModelObject.props.ref_list.dbValues.length === 0",
            "message": "dataSetCannotBeDownloadedMessage"
          }
        ]
      }
    },
    "getPropertyForDSM": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "getProperties",
      "inputData": {
        "attributes": [
          "ref_list",
          "ref_names"
        ],
        "objects": [
          "{{data.datasetModelObject}}"
        ]
      },
      "events": {
        "success": [
          {
            "name": "dataset.getRefListCDM"
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "Dataset",
            "properties": [
              {
                "name": "ref_list",
                "modifiers": [
                  {
                    "Value": "true",
                    "name": "withProperties"
                  }
                ]
              },
              {
                "name": "ref_names"
              }
            ]
          },
          {
            "name": "ImanFile",
            "properties": [
              {
                "name": "original_file_name",
                "modifiers": [
                  {
                    "Value": "true",
                    "name": "withProperties"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "getRefListObject": {
      "actionType": "JSFunction",
      "method": "getObject",
      "deps": "soa/kernel/clientDataModel",
      "inputData": {
        "dataset": "{{data.datasetModelObject.props.ref_list.dbValues[0]}}"
      },
      "outputData": {
        "modelObject": ""
      },
      "events": {
        "success": [
          {
            "name": "dataset.downloadSelectedDatasetForDSM"
          }
        ]
      }
    },
    "getDatasetTicketAndOpen": {
      "actionType": "JSFunctionAsync",
      "method": "getFileReadTickets",
      "deps": "soa/fileManagementService",
      "inputData": {
        "files": "{{data.modelObject}}"
      },
      "outputData": {
        "downloadedFile": ""
      },
      "events": {
        "success": [
          {
            "name": "dataset.openFileFromTicket"
          }
        ]
      }
    },
    "openDatasetFileFromTicketForDSM": {
      "actionType": "openFile",
      "inputData": {
        "fileTicket": "{{data.downloadedFile.ticket}}",
        "openFileName": ""
      }
    },
    "openDatasetFileFromTicket": {
      "actionType": "openFile",
      "inputData": {
        "fileTicket": "{{data.downloadedFile.tickets[1][0]}}",
        "openFileName": "{{data.downloadedFile.tickets[0][0].props.original_file_name.dbValues[0]}}"
      }
    },
    "prepareAndCopyDatasetDownloadURL": {
      "actionType": "JSFunction",
      "method": "prepareAndCopyFileDownloadURLToClipboard",
      "deps": "js/tcClipboardService",
      "inputData": {
        "selectedObjUid": "{{ctx.mselected[0].uid}}"
      },
      "outputData": {},
      "actionMessages": {
        "success": [
          {
            "message": "copyDownloadableFileUrlSuccessful"
          }
        ],
        "failure": [
          {
            "message": "copyDownloadableFileUrlFailure"
          }
        ]
      }
    },
    "navigateHoveredFolder": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/navigateObjectCommandHandler",
      "inputData": {
        "context": "{{commandContext.vmo}}",
        "chevronPopup": "{{commandContext.context.chevronPopup}}"
      }
    },
    "openInNewTab": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{ctx.selected.uid}}"
      },
      "navigateIn": "newTab"
    },
    "openInNewWindow": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{ctx.selected.uid}}"
      },
      "navigateIn": "newWindow",
      "options": {
        "top": 10,
        "left": 10
      }
    },
    "Awp0OpenInRACCommndAction": {
      "actionType": "Navigate",
      "navigateTo": "launcher/openinrac",
      "navigationParams": {
        "-s": "226TCSession",
        "-o": "{{ctx.selected.uid}}",
        "-attach": "true"
      },
      "navigateIn": "newTab"
    },
    "shareURL": {
      "actionType": "Copy",
      "method": "copyUrlToClipboard",
      "inputData": {
        "objectToCopy": "{{ctx.mselected}}",
        "copyType": "URL"
      },
      "actionMessages": {
        "success": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1)",
            "message": "copySingleSuccessful"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length > 1)",
            "message": "copyMultipleSuccessful"
          }
        ]
      }
    },
    "startEditSummary": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/startEditGroupCommandService",
      "inputData": {
        "handleContext": "",
        "view": "{{ctx.ViewModeContext.ViewModeContext}}"
      }
    },
    "startEditTable": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/startEditGroupCommandService",
      "inputData": {
        "handleContext": "TABLE_CONTEXT"
      }
    },
    "isDirty": {
      "actionType": "JSFunctionAsync",
      "method": "isDirty",
      "outputData": {
        "dirty": "isDirty"
      },
      "events": {
        "success": [
          {
            "condition": "!data.dirty",
            "name": "checkEditInProgress"
          },
          {
            "condition": "data.dirty",
            "name": "leaveConfirmation.success"
          }
        ]
      },
      "deps": "js/editHandlerService"
    },
    "checkEditInProgressBeforeCheckin": {
      "actionType": "JSFunction",
      "method": "editInProgress",
      "outputData": {
        "editInProgress": "editInProgress"
      },
      "events": {
        "success": [
          {
            "condition": "!data.editInProgress",
            "name": "retrieveCheckinInputs"
          },
          {
            "condition": "data.editInProgress",
            "name": "saveEditsAndCheckin"
          }
        ]
      },
      "deps": "js/editHandlerService"
    },
    "editInProgress": {
      "actionType": "JSFunction",
      "method": "editInProgress",
      "outputData": {
        "editInProgress": "editInProgress"
      },
      "events": {
        "success": [
          {
            "condition": "!data.editInProgress",
            "name": "retrieveSelectedObjects"
          },
          {
            "condition": "data.editInProgress",
            "name": "checkOutOnCancelEdits"
          }
        ]
      },
      "deps": "js/editHandlerService"
    },
    "checkOutOnCancelEdits": {
      "actionType": "JSFunction",
      "method": "cancelEdits",
      "events": {
        "success": [
          {
            "name": "retrieveSelectedObjects"
          }
        ]
      },
      "deps": "js/editHandlerService"
    },
    "isDirtyOnCancelEdits": {
      "actionType": "JSFunctionAsync",
      "method": "isDirty",
      "outputData": {
        "dirty": "isDirty"
      },
      "events": {
        "success": [
          {
            "condition": "!data.dirty",
            "name": "cancelEdits"
          },
          {
            "condition": "data.dirty",
            "name": "cancelEditsPreferenceCheck"
          }
        ]
      },
      "deps": "js/editHandlerService"
    },
    "cancelEditsLeaveConfirmationAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {}
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "cancelEditsLeaveConfirmationMessage"
          }
        ]
      }
    },
    "cancelEdits": {
      "actionType": "JSFunction",
      "method": "cancelEdits",
      "deps": "js/editHandlerService",
      "events": {
        "success": [
          {
            "name": "updateURLParam"
          }
        ]
      }
    },
    "cancelEditsPreferenceCheck": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "cancelEditsPreferenceSetTrue",
            "condition": "ctx.preferences.AWC_CancelEdit_Confirmation[0] === 'true'"
          },
          {
            "name": "cancelEdits",
            "condition": "ctx.preferences.AWC_CancelEdit_Confirmation[0] !== 'true'"
          }
        ]
      }
    },
    "getSelectedObjects": {
      "actionType": "JSFunctionAsync",
      "method": "getAdaptedObjects",
      "inputData": {
        "sourceObjects": "{{ctx.mselected}}"
      },
      "outputData": {
        "checkoutInput": ""
      },
      "events": {
        "success": [
          {
            "name": "checkItOut"
          }
        ]
      },
      "deps": "js/adapterService"
    },
    "updateEditStateInURL": {
      "actionType": "JSFunction",
      "method": "updateEditStateInURL",
      "deps": "js/Awp0ShowSaveAsService"
    },
    "getCheckinInputs": {
      "actionType": "JSFunctionAsync",
      "method": "getAdaptedObjects",
      "inputData": {
        "sourceObjects": "{{ctx.mselected}}"
      },
      "outputData": {
        "checkinInput": ""
      },
      "events": {
        "success": [
          {
            "name": "checkIn"
          }
        ]
      },
      "deps": "js/adapterService"
    },
    "getCancelCheckoutInputs": {
      "actionType": "JSFunctionAsync",
      "method": "getAdaptedObjects",
      "inputData": {
        "sourceObjects": "{{ctx.mselected}}"
      },
      "outputData": {
        "cancelCheckoutInput": ""
      },
      "events": {
        "success": [
          {
            "name": "cancelCheckout"
          }
        ]
      },
      "deps": "js/adapterService"
    },
    "performCheckout": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-Reservation",
      "method": "checkout",
      "inputData": {
        "objects": "{{data.checkoutInput}}"
      },
      "outputData": {
        "checkOutPartialErrors": "partialErrors"
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1)",
            "message": "checkoutFailureSingle"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length > 1)",
            "message": "checkoutFailureMultiple"
          }
        ]
      }
    },
    "performCheckin": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-Reservation",
      "method": "checkin",
      "inputData": {
        "objects": "{{data.checkinInput}}"
      },
      "outputData": {
        "checkinPartialErrors": "partialErrors"
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1)",
            "message": "checkinFailureSingle"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length > 1)",
            "message": "checkinFailureMultiple"
          }
        ]
      }
    },
    "performCancelCheckout": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-Reservation",
      "method": "cancelCheckout",
      "inputData": {
        "objects": "{{data.cancelCheckoutInput}}"
      },
      "outputData": {
        "cancelCheckOutPartialErrors": "partialErrors"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": "{{ctx.mselected}}"
            }
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "message": "cancelCheckoutSuccess"
          }
        ],
        "failure": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1)",
            "message": "cancelCheckoutFailureSingle"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length > 1)",
            "message": "cancelCheckoutFailureMultiple"
          }
        ]
      }
    },
    "leaveConfirmation": {
      "actionType": "JSFunctionAsync",
      "method": "leaveConfirmation",
      "events": {
        "success": [
          {
            "name": "retrieveSelectedObjects"
          }
        ]
      },
      "deps": "js/editHandlerService"
    },
    "saveEditsAndCheckin": {
      "actionType": "JSFunctionAsync",
      "method": "saveEdits",
      "deps": "js/editHandlerService",
      "inputData": {},
      "events": {
        "success": [
          {
            "name": "retrieveCheckinInputs"
          }
        ]
      }
    },
    "saveEdits": {
      "actionType": "JSFunction",
      "method": "updateRedlineProps",
      "deps": "js/xrtUtilities",
      "inputData": {},
      "events": {
        "success": [
          {
            "name": "save.performOperation"
          }
        ]
      }
    },
    "performSaveOperation": {
      "actionType": "JSFunctionAsync",
      "method": "saveEdits",
      "deps": "js/editHandlerService",
      "inputData": {},
      "events": {
        "success": [
          {
            "name": "updateURLParam"
          }
        ]
      }
    },
    "toggleCommandLabels": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/commandLabelToggleService",
      "inputData": {},
      "events": {
        "success": [
          {
            "name": "commandBarResized"
          }
        ]
      }
    },
    "Awp0ObjectInfoCommandAction": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "Awp0ObjectInfo",
          "parent": ".aw-layout-workarea",
          "placement": "right",
          "width": "SMALL",
          "height": "FULL",
          "push": true,
          "isCloseVisible": false
        }
      }
    },
    "Awp0IdDispRuleAdminInfoCommandAction": {
      "actionType": "JSFunction",
      "method": "setUnSetInContextIdDisplayRule",
      "deps": "js/idDisplayRuleMgmntUtils",
      "inputData": {
        "context": {
          "idDisplayRuleContext": "{{commandContext.vmo}}"
        }
      },
      "outputData": {
        "isIdDispRuleInfoReadyToLaunch": ""
      },
      "events": {
        "success": [
          {
            "name": "idDisplayRule.contextSet",
            "condition": "data.isIdDispRuleInfoReadyToLaunch === true"
          },
          {
            "name": "complete",
            "eventData": {
              "source": "globalNavigationSideNav"
            }
          }
        ]
      }
    },
    "launchIdDispRuleInfoPanelAction": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "global": true,
          "view": "Awp0IdDispRuleAdminInfo",
          "placement": "left",
          "parent": ".aw-layout-workarea",
          "width": "SMALL",
          "height": "FULL",
          "isCloseVisible": false,
          "subPanelContext": "{{commandContext}}"
        }
      }
    },
    "addProfilePicture": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "Awp0AddProfilePicture",
          "placement": "right",
          "parent": ".aw-layout-workarea",
          "width": "SMALL",
          "height": "FULL",
          "isCloseVisible": false
        }
      }
    },
    "Awp0ChangePasswordCommandAction": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "Awp0ChangePassword",
          "placement": "right",
          "parent": ".aw-layout-workarea",
          "width": "SMALL",
          "height": "FULL",
          "isCloseVisible": false
        }
      }
    },
    "Awp0SelectAllCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "primaryWorkarea.selectAction",
            "eventData": {
              "selectAll": true
            }
          }
        ]
      }
    },
    "Awp0DeselectAllCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "primaryWorkarea.selectAction",
            "eventData": {
              "selectAll": false
            }
          }
        ]
      }
    },
    "Awp0SelectAllObjectSetCommandAction": {
      "actionType": "JSFunction",
      "method": "handleObjectSetSelectAll",
      "deps": "js/xrtUtilities",
      "inputData": {
        "selectAll": true,
        "selectionModel": "{{commandContext.selectionModel}}",
        "objectSetState": "{{commandContext.objectSetState}}"
      }
    },
    "Awp0DeselectAllObjectSetCommandAction": {
      "actionType": "JSFunction",
      "method": "handleObjectSetSelectAll",
      "deps": "js/xrtUtilities",
      "inputData": {
        "selectAll": false,
        "selectionModel": "{{commandContext.selectionModel}}",
        "objectSetState": "{{commandContext.objectSetState}}"
      }
    },
    "Awp0EnableMultiSelectCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "primaryWorkarea.multiSelectAction",
            "eventData": {
              "multiSelect": true
            }
          }
        ]
      }
    },
    "Awp0DisableMultiSelectCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "primaryWorkarea.multiSelectAction",
            "eventData": {
              "multiSelect": false
            }
          }
        ]
      }
    },
    "Awp0EnableMultiSelectObjectSetCommandAction": {
      "actionType": "JSFunction",
      "method": "handleObjectSetMultiSelect",
      "deps": "js/xrtUtilities",
      "inputData": {
        "multiSelect": true,
        "selectionModel": "{{commandContext.selectionModel}}",
        "objectSetState": "{{commandContext.objectSetState}}"
      }
    },
    "Awp0DisableMultiSelectObjectSetCommandAction": {
      "actionType": "JSFunction",
      "method": "handleObjectSetMultiSelect",
      "deps": "js/xrtUtilities",
      "inputData": {
        "multiSelect": false,
        "selectionModel": "{{commandContext.selectionModel}}",
        "objectSetState": "{{commandContext.objectSetState}}"
      }
    },
    "registerAddContext": {
      "actionType": "JSFunctionAsync",
      "method": "populateAddObjectContext",
      "deps": "js/addObjectUtils",
      "inputData": {
        "0": {
          "types": "{{ctx.state.params.cmdArg}}",
          "isConfRevPWAEnabledThroughPref": "{{ctx.preferences.AWC_display_configured_revs_for_pwa[0]}}"
        }
      },
      "outputData": {
        "addObjectContext": ""
      },
      "events": {
        "success": [
          {
            "name": "addObject.ensureFilterTypesLoaded2"
          },
          {
            "name": "addObject.open"
          }
        ]
      }
    },
    "ensureFilterTypesLoaded": {
      "actionType": "JSFunctionAsync",
      "method": "ensureModelTypesLoaded",
      "inputData": {
        "typeNames": "{{ctx.addObject.typeFilterNamesArray}}"
      },
      "deps": "soa/kernel/soaService"
    },
    "ensureFilterTypesLoaded2": {
      "actionType": "JSFunctionAsync",
      "method": "ensureModelTypesLoaded",
      "inputData": {
        "typeNames": "{{data.addObjectContext.typeFilterNamesArray}}"
      },
      "deps": "soa/kernel/soaService"
    },
    "registerAddToContext": {
      "actionType": "JSFunctionAsync",
      "method": "populateAddObjectContext",
      "deps": "js/addObjectUtils",
      "inputData": {
        "0": {
          "target": "{{commandContext.vmo}}",
          "relationMap": "{{commandContext.modelTypeRelationListMap}}",
          "searchFilter": "{{commandContext.parameterMap.Awp0ShowAddObject.searchFilter}}",
          "panelActive": "{{ctx.activeToolsAndInfoCommand.commandId === 'Awp0ShowCreateObject'}}",
          "visibleTabs": "{{commandContext.parameterMap.Awp0ShowAddObject.visibleTabs}}",
          "objectSetSourceHasDataset": "{{commandContext.objectSetSourceHasDataset}}",
          "showConfiguredRevision": "{{commandContext.searchCriteria.showConfiguredRev}}"
        }
      },
      "outputData": {
        "addObjectContext": ""
      },
      "events": {
        "success": [
          {
            "name": "addObject.ensureFilterTypesLoaded2"
          },
          {
            "name": "addObject.openObjectSet"
          }
        ]
      }
    },
    "FileDeleteCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "confirmFileDeleteEvent"
          }
        ]
      }
    },
    "openAddPanel": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Awp0ShowCreateObject",
        "location": "aw_toolsAndInfo",
        "context": "{{function:updateAddPanelContext}}",
        "config": {
          "isPinUnpinEnabled": true
        }
      },
      "deps": "js/addObjectUtils"
    },
    "openAddPanelObjectSet": {
      "actionType": "activateCommandPanel",
      "inputData": {
        "commandId": "Awp0ShowAddObject",
        "location": "aw_toolsAndInfo",
        "context": "{{function:updateAddPanelContext}}",
        "config": {
          "isPinUnpinEnabled": true
        }
      },
      "deps": "js/addObjectUtils"
    },
    "Awp0DeleteCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "confirmDeleteEvent",
            "condition": "(ctx.mselected && ctx.mselected.length === 1)"
          },
          {
            "name": "confirmMultipleDeleteEvent",
            "condition": "(ctx.mselected && ctx.mselected.length > 1)"
          }
        ]
      }
    },
    "Awp0ExportDeleteCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "exportExcel.removeColumn",
            "eventData": {
              "column": "{{commandContext.vmo}}"
            }
          }
        ]
      }
    },
    "performDelete": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2006-03-DataManagement",
      "method": "deleteObjects",
      "inputData": {
        "objects": {
          "$adapt": "{{ctx.mselected}}"
        }
      },
      "outputData": {
        "deleteObjectsPartialErrors": "partialErrors"
      },
      "events": {
        "success": [
          {
            "name": "primaryWorkarea.reset"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1)",
            "message": "deleteObjectsSingleFailureMessage"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length > 1)",
            "message": "deleteObjectsMultipleFailureMessage"
          }
        ]
      }
    },
    "initiateDeleteAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "delete.initiateDeleteWithConfRevContext",
            "condition": "((!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount >= 1 && !ctx.xrtSummaryContextObject ) || (!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount === 1 && ctx.xrtSummaryContextObject.uid === ctx.selected.uid ) || ( ctx.xrtSummaryContextObject && ctx.showConfiguredRev === 'true' && ctx.xrtSummaryContextObject.uid !== ctx.selected.uid )) && (ctx.relationContext.relationInfo.length > 0)"
          },
          {
            "name": "delete.initiateRegularDeleteOperation",
            "condition": "!(((!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount >= 1 && !ctx.xrtSummaryContextObject ) || (!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount === 1 && ctx.xrtSummaryContextObject.uid === ctx.selected.uid ) || ( ctx.xrtSummaryContextObject && ctx.showConfiguredRev === 'true' && ctx.xrtSummaryContextObject.uid !== ctx.selected.uid )) && (ctx.relationContext.relationInfo.length > 0))"
          }
        ]
      }
    },
    "getSelObjsHavingUnderlyingItem": {
      "actionType": "JSFunction",
      "method": "cutInputs",
      "deps": "js/cutUtils",
      "inputData": {
        "isConfRevContext": "true"
      },
      "outputData": {
        "objsHavingUnderlyingItem": ""
      },
      "events": {
        "success": [
          {
            "name": "delete.haveConfRevsToCut",
            "condition": "data.objsHavingUnderlyingItem.length !== 0"
          },
          {
            "name": "delete.initiateUnlinkDeleteOperation",
            "condition": "data.objsHavingUnderlyingItem.length === 0"
          }
        ]
      }
    },
    "getUnderlyingObjsForConfRevs": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-AWS2-2020-05-DataManagement",
      "method": "getRelatedObjsForConfiguredRevision",
      "deps": "js/cutUtils",
      "inputData": {
        "input": "{{data.objsHavingUnderlyingItem}}"
      },
      "outputData": {
        "underlyingObjsInfo": "response"
      },
      "events": {
        "success": [
          {
            "name": "delete.cutUnderlyingItemFromParent"
          }
        ]
      }
    },
    "cutConfRevsFromTheirItem": {
      "actionType": "TcSoaService",
      "serviceName": "Core-2014-10-DataManagement",
      "method": "removeChildren",
      "deps": "js/cutUtils",
      "inputData": {
        "inputData": "{{data.underlyingObjsInfo}}"
      },
      "events": {
        "success": [
          {
            "name": "delete.initiateUnlinkDeleteOperation"
          }
        ]
      }
    },
    "performDeleteWithConfRevContext": {
      "actionType": "JSFunctionAsync",
      "method": "executePerformUnlinkDelete",
      "deps": "js/cutUtils",
      "inputData": {
        "selectedObjects": {
          "$adapt": "{{ctx.mselected}}"
        },
        "isConfRevContextApplied": "{{((!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount >= 1 && !ctx.xrtSummaryContextObject ) || (!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount === 1 && ctx.xrtSummaryContextObject.uid === ctx.selected.uid ) || ( ctx.xrtSummaryContextObject && ctx.showConfiguredRev === 'true' && ctx.xrtSummaryContextObject.uid !== ctx.selected.uid )) && (ctx.relationContext.relationInfo.length > 0)}}"
      },
      "outputData": {
        "returnMsg": "",
        "deleteObjectsPartialErrors": "partialErrors",
        "objectsFailedToDelete": "{{function:getDeleteObjectsPartialErrors}}"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": "{{ctx.pselected}}"
            }
          }
        ],
        "failure": [
          {
            "name": "confirmSingleCutOrCancelEvent",
            "condition": "data.objectsFailedToDelete.totalSelected === 1"
          },
          {
            "name": "confirmMultipleCutOrCancelEvent",
            "condition": "data.objectsFailedToDelete.totalSelected > 1"
          }
        ]
      }
    },
    "performUnlinkAndDelete": {
      "actionType": "JSFunctionAsync",
      "method": "executePerformUnlinkDelete",
      "deps": "js/cutUtils",
      "inputData": {
        "selectedObjects": {
          "$adapt": "{{ctx.mselected}}"
        },
        "isConfRevContextApplied": "{{((!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount >= 1 && !ctx.xrtSummaryContextObject ) || (!ctx.showConfiguredRev && ctx.pwaSelectionInfo.currentSelectedCount === 1 && ctx.xrtSummaryContextObject.uid === ctx.selected.uid ) || ( ctx.xrtSummaryContextObject && ctx.showConfiguredRev === 'true' && ctx.xrtSummaryContextObject.uid !== ctx.selected.uid )) && (ctx.relationContext.relationInfo.length > 0)}}"
      },
      "outputData": {
        "returnMsg": "",
        "deleteObjectsPartialErrors": "partialErrors",
        "objectsFailedToDelete": "{{function:getDeleteObjectsPartialErrors}}"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "condition": "data.returnMsg !== 'ServiceUnavailable' && ctx.pselected",
            "eventData": {
              "relatedModified": "{{function:adaptedRelatedModifiedCutInput}}",
              "createdObjects": "",
              "childObjects": "{{ctx.mselected}}",
              "refreshLocationFlag": true
            }
          },
          {
            "name": "primaryWorkarea.reset",
            "condition": "data.returnMsg !== 'ServiceUnavailable'"
          },
          {
            "name": "performDelete",
            "condition": "data.returnMsg === 'ServiceUnavailable'"
          }
        ],
        "failure": [
          {
            "name": "confirmSingleCutOrCancelEvent",
            "condition": "!(ctx.relationContext === undefined ||  ctx.relationContext && ctx.relationContext.relationInfo.length === 0) && data.objectsFailedToDelete.totalSelected === 1"
          },
          {
            "name": "confirmMultipleCutOrCancelEvent",
            "condition": "!(ctx.relationContext === undefined ||  ctx.relationContext && ctx.relationContext.relationInfo.length === 0) && data.objectsFailedToDelete.totalSelected > 1"
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "deleteObjectsSingleFailureMessage",
            "condition": "ctx.relationContext === undefined ||  ctx.relationContext && ctx.relationContext.relationInfo.length === 0"
          }
        ]
      }
    },
    "copyObject": {
      "actionType": "Copy",
      "method": "copyUrlToClipboard",
      "inputData": {
        "objectToCopy": "{{ctx.mselected}}",
        "copyType": "Object"
      },
      "actionMessages": {
        "success": [
          {
            "condition": "(ctx.mselected && ctx.mselected.length === 1)",
            "message": "copySingleSuccessful"
          },
          {
            "condition": "(ctx.mselected && ctx.mselected.length > 1)",
            "message": "copyMultipleSuccessful"
          }
        ]
      }
    },
    "copyObjectContextMenu": {
      "actionType": "Copy",
      "method": "copyUrlToClipboard",
      "inputData": {
        "objectToCopy": "{{commandContext.selected}}",
        "copyType": "Object"
      },
      "actionMessages": {
        "success": [
          {
            "condition": "(commandContext.selected && commandContext.selected.length === 1)",
            "message": "copySingleSuccessfulContextMenu"
          },
          {
            "condition": "(commandContext.selected && commandContext.selected.length > 1)",
            "message": "copyMultipleSuccessful"
          }
        ]
      }
    },
    "pasteContentsFromClipboard": {
      "actionType": "JSFunction",
      "method": "execute",
      "deps": "js/pasteService",
      "inputData": {
        "targetObject": "{{ctx.selected}}",
        "sourceObjects": {
          "$adapt": "{{ctx.awClipBoardProvider}}"
        },
        "relationType": "",
        "commandContext": "{{commandContext}}"
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": [
                "{{ctx.selected}}"
              ],
              "createdObjects": "{{function:adaptedClipboardObjectsInput}}"
            }
          }
        ],
        "failure": [
          {
            "name": "cdm.relatedModified",
            "condition": "errorCode.code === 6007 || errorCode.code === 35010 || errorCode.code === 89009",
            "eventData": {
              "relatedModified": [
                "{{ctx.selected}}"
              ],
              "createdObjects": "{{function:adaptedClipboardObjectsInput}}"
            }
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "ctx.awClipBoardProvider.length === 1",
            "message": "pasteSuccessMessage"
          },
          {
            "condition": "ctx.awClipBoardProvider.length > 1",
            "message": "pasteMultipleSuccessMessage"
          }
        ]
      }
    },
    "getModelTypeRelationForPaste": {
      "actionType": "JSFunction",
      "method": "getModelTypeRelationsWithValidSourceObjects",
      "deps": "js/xrtObjectSetService",
      "inputData": {
        "sourceObjects": {
          "$adapt": "{{ctx.awClipBoardProvider}}"
        },
        "modelTypeRelations": "{{commandContext.modelTypeRelationListMap}}",
        "showConfiguredRevision": "{{commandContext.searchCriteria.showConfiguredRev}}"
      },
      "outputData": {
        "modelTypeRelationObject": ""
      },
      "events": {
        "success": [
          {
            "name": "pasteToObjectSet"
          }
        ]
      }
    },
    "pasteContentsFromClipboardToObjectSet": {
      "actionType": "JSFunction",
      "method": "executeWithMultipleRelations",
      "deps": "js/pasteService",
      "inputData": {
        "targetObject": {
          "$adapt": "{{ctx.selected}}"
        },
        "relationTypeToSources": "{{data.modelTypeRelationObject.relationTypeToSources}}"
      },
      "outputData": {
        "response": ""
      },
      "events": {
        "success": [
          {
            "name": "cdm.relatedModified",
            "eventData": {
              "relatedModified": "{{function:adaptedRelatedModifiedPasteInput}}",
              "createdObjects": "{{data.modelTypeRelationObject.validSourceObjects}}"
            }
          }
        ],
        "failure": [
          {
            "name": "cdm.relatedModified",
            "condition": "errorCode.code === 6007 || errorCode.code === 35010 || errorCode.code === 89009",
            "eventData": {
              "relatedModified": "{{function:adaptedRelatedModifiedPasteInput}}",
              "createdObjects": "{{data.modelTypeRelationObject.validSourceObjects}}"
            }
          }
        ]
      },
      "actionMessages": {
        "success": [
          {
            "condition": "data.modelTypeRelationObject.validSourceObjects.length === 1",
            "message": "pasteToObjectSetSuccessMessage"
          },
          {
            "condition": "data.modelTypeRelationObject.validSourceObjects.length > 1",
            "message": "pasteToObjectSetMultipleSuccessMessage"
          }
        ]
      }
    },
    "activateExportToExcelPanel": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "Awp0ExportToExcel",
          "parent": ".aw-layout-workarea",
          "width": "SMALL",
          "height": "FULL",
          "context": {
            "providerName": "{{commandContext.providerName}}",
            "columns": "{{commandContext.columns}}",
            "objectSetUri": "{{commandContext.objectSetUri}}",
            "operationType": "{{commandContext.operationType}}",
            "columnProvider": "{{commandContext.columnProvider}}",
            "searchCriteria": "{{commandContext.searchCriteria}}",
            "displayTitle": "{{commandContext.displayTitle}}",
            "vmo": "{{commandContext.vmo}}"
          },
          "isCloseVisible": false,
          "subPanelContext": "{{commandContext}}"
        }
      }
    },
    "exportSelectedColumnsAddPanelAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "awPanel.navigate",
            "eventData": {
              "destPanelId": "Awp0ExportAddPropertiesSub",
              "title": "{{i18n.exportAddPropertiesTitle}}",
              "providerName": "{{ctx.panelContext.providerName}}",
              "dataProvider": "{{ctx.panelContext.dataProvider}}",
              "columnProvider": "{{ctx.panelContext.columnProvider}}",
              "searchCriteria": "{{ctx.panelContext.searchCriteria}}",
              "isolateMode": true,
              "recreatePanel": true,
              "supportGoBack": true
            }
          }
        ]
      }
    },
    "exportMoveDown": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Awp0ExportMoveDown"
          }
        ]
      }
    },
    "exportMoveUp": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "Awp0ExportMoveUp"
          }
        ]
      }
    },
    "arrangeShowAll": {
      "actionType": "JSFunction",
      "method": "showAll",
      "inputData": {
        "0": "{{commandContext.arrangeData}}"
      },
      "deps": "js/tcarrange.service"
    },
    "arrangeReset": {
      "actionType": "JSFunction",
      "method": "reset",
      "inputData": {
        "0": "{{commandContext.arrangeData}}"
      },
      "deps": "js/arrange.service"
    },
    "arrangeMoveUp": {
      "actionType": "JSFunction",
      "method": "moveUp",
      "deps": "js/arrange.service",
      "inputData": {
        "0": "{{commandContext.arrangeData}}",
        "1": "{{commandContext.dataProvider.dataProviderColumnConfigs}}"
      },
      "outputData": {
        "arrangeData": "result.arrangeData",
        "dataProvider.dataProviderAvailableColumnConfigs": "result.dataProviderAvailableColumnConfigs",
        "dataProvider.dataProviderColumnConfigs": "result.dataProviderColumnConfigs"
      },
      "events": {
        "success": [
          {
            "name": "dataProviderColumnConfigs.focusSelection"
          }
        ]
      }
    },
    "arrangeMoveDown": {
      "actionType": "JSFunction",
      "method": "moveDown",
      "deps": "js/arrange.service",
      "inputData": {
        "0": "{{commandContext.arrangeData}}",
        "1": "{{commandContext.dataProvider.dataProviderColumnConfigs}}"
      },
      "outputData": {
        "arrangeData": "result.arrangeData",
        "dataProvider.dataProviderAvailableColumnConfigs": "result.dataProviderAvailableColumnConfigs",
        "dataProvider.dataProviderColumnConfigs": "result.dataProviderColumnConfigs"
      },
      "events": {
        "success": [
          {
            "name": "dataProviderColumnConfigs.focusSelection"
          }
        ]
      }
    },
    "arrangeAddColumns": {
      "actionType": "JSFunction",
      "method": "addColumns",
      "deps": "js/arrange.service",
      "inputData": {
        "0": "{{commandContext.arrangeData}}",
        "1": "{{commandContext.dataProvider}}",
        "2": {}
      },
      "outputData": {
        "arrangeData": "result.arrangeData",
        "dataProvider.dataProviderAvailableColumnConfigs": "result.dataProviderAvailableColumnConfigs",
        "dataProvider.dataProviderColumnConfigs": "result.dataProviderColumnConfigs"
      }
    },
    "arrangeRemoveColumns": {
      "actionType": "JSFunction",
      "method": "removeColumns",
      "deps": "js/arrange.service",
      "inputData": {
        "0": "{{commandContext.arrangeData}}",
        "1": "null",
        "2": "{{commandContext.dataProvider}}"
      },
      "outputData": {
        "arrangeData": "result.arrangeData",
        "dataProvider.dataProviderAvailableColumnConfigs": "result.dataProviderAvailableColumnConfigs",
        "dataProvider.dataProviderColumnConfigs": "result.dataProviderColumnConfigs"
      }
    },
    "arrangeViewConfigs": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "viewColumnConfigs",
          "width": 195,
          "reference": "button[button-id='arrangeViewConfigs']",
          "hasArrow": true,
          "customClass": "aw-arrange-balloon",
          "clickOutsideToClose": true,
          "placement": "bottom",
          "subPanelContext": {
            "savedColumnConfigs": "{{commandContext.arrangeData.savedColumnConfigs}}"
          }
        }
      }
    },
    "deleteNamedColumnConfigCommandAction": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "arrangePanel.deleteNamedColumnConfig",
            "eventData": {
              "namedColumnConfig": "{{commandContext.vmo}}"
            }
          }
        ]
      }
    },
    "openChangeOwnerPanel": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "Awp0ChangeOwner",
          "placement": "right",
          "parent": ".aw-layout-workarea",
          "width": "MEDIUM",
          "height": "FULL",
          "isCloseVisible": false,
          "subPanelContext": "{{commandContext}}"
        }
      }
    },
    "setCompactLayout": {
      "actionType": "JSFunction",
      "method": "setLayout",
      "inputData": {
        "0": "compact"
      },
      "deps": "js/layout.service"
    },
    "setComfyLayout": {
      "actionType": "JSFunction",
      "method": "setLayout",
      "inputData": {
        "0": "comfy"
      },
      "deps": "js/layout.service"
    },
    "showFavorites": {
      "actionType": "Navigate",
      "navigateTo": "myFavorites",
      "navigationParams": {}
    },
    "showHelp": {
      "actionType": "Navigate",
      "navigateIn": "newTab",
      "navigateTo": "https://docs.sw.siemens.com/en-US/doc/282219420/PL20221031255989072.xid1899337/xid1899339",
      "navigationParams": {}
    },
    "showHelpAbout": {
      "actionType": "JSFunction",
      "method": "showHelpAbout",
      "deps": "js/helpAboutService"
    },
    "openInNewTabCellTitle": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{commandContext.vmo}}",
          "path": "uid"
        }
      },
      "navigateIn": "newTab"
    },
    "openInNewWindowCellTitle": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": {
          "$adapt": "{{commandContext.vmo}}",
          "path": "uid"
        }
      },
      "navigateIn": "newWindow",
      "options": {
        "top": 10,
        "left": 10
      }
    },
    "openArrangePanelBasic": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel2",
      "deps": "js/commandPanel.service",
      "inputData": {
        "inputObj": {
          "commandId": "arrange",
          "location": "aw_toolsAndInfo",
          "config": {
            "width": "EXTRAWIDE"
          }
        }
      }
    },
    "processArrangeSettings": {
      "actionType": "JSFunction",
      "method": "processArrangeSettings",
      "deps": "js/columnArrangeService",
      "inputData": {
        "dataProvider": "{{commandContext.dataProvider}}",
        "gridId": "{{commandContext.gridId}}",
        "gridOptions": "{{commandContext.gridOptions}}",
        "columnsData": "{{commandContext.columnsData}}"
      },
      "events": {
        "success": [
          {
            "name": "openArrangePanelBasic"
          }
        ]
      }
    },
    "isDirtyOnEditLocalization": {
      "actionType": "JSFunctionAsync",
      "method": "isDirty",
      "outputData": {
        "dirtyOnEditLocalization": "isDirty"
      },
      "events": {
        "success": [
          {
            "condition": "!data.dirtyOnEditLocalization",
            "name": "checkEditInProgressBeforeEditLocalization"
          },
          {
            "condition": "data.dirtyOnEditLocalization",
            "name": "leaveConfirmationBeforeEditLocalization"
          }
        ]
      },
      "deps": "js/editHandlerService"
    },
    "leaveConfirmationBeforeEditLocalization": {
      "actionType": "JSFunctionAsync",
      "method": "leaveConfirmation",
      "events": {
        "success": [
          {
            "name": "openEditLocalizationSinglePanel"
          }
        ]
      },
      "deps": "js/editHandlerService"
    },
    "editInProgressBeforeEditLocalization": {
      "actionType": "JSFunction",
      "method": "editInProgress",
      "outputData": {
        "editInProgress": "editInProgress"
      },
      "events": {
        "success": [
          {
            "condition": "!data.editInProgress",
            "name": "openEditLocalizationSinglePanel"
          },
          {
            "condition": "data.editInProgress",
            "name": "cancelEditsBeforeEditLocalization"
          }
        ]
      },
      "deps": "js/editHandlerService"
    },
    "cancelEditsBeforeEditLocalization": {
      "actionType": "JSFunction",
      "method": "cancelEdits",
      "deps": "js/editHandlerService",
      "events": {
        "success": [
          {
            "name": "openEditLocalizationSinglePanel"
          }
        ]
      }
    },
    "openEditLocalizationSinglePanel": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "global": true,
          "view": "EditLocalizationSingleProperty",
          "placement": "right",
          "parent": ".aw-layout-workarea",
          "width": "WIDE",
          "height": "FULL",
          "isCloseVisible": false,
          "subPanelContext": "{{commandContext}}"
        }
      }
    },
    "addorRemoveLocalesAction": {
      "actionType": "popup",
      "inputData": {
        "options": {
          "view": "ViewLocaleLanguages",
          "width": 195,
          "reference": ".aw-commandId-Awp0AddorRemoveLocales",
          "hasArrow": true,
          "draggable": false,
          "customClass": "aw-arrange-balloon",
          "clickOutsideToClose": true,
          "placement": [
            "bottom",
            "top",
            "left",
            "right"
          ],
          "subPanelContext": "{{commandContext}}"
        }
      }
    },
    "checkIsDSMUsableForDownload": {
      "actionType": "JSFunction",
      "method": "isDSMUsable",
      "deps": "js/dsmUtils",
      "outputData": {
        "isDSMUsableFlag": ""
      },
      "events": {
        "success": [
          {
            "condition": "data.isDSMUsableFlag",
            "name": "getModelObjectFromVMO"
          },
          {
            "condition": "!data.isDSMUsableFlag",
            "name": "getSelObjsForMultipleFileDwnld"
          }
        ]
      }
    },
    "getModelObjectFromVMO": {
      "actionType": "JSFunction",
      "method": "getObjects",
      "deps": "soa/kernel/clientDataModel",
      "inputData": {
        "uid": {
          "$adapt": "{{ctx.mselected}}",
          "path": "uid"
        }
      },
      "outputData": {
        "datasetModelObject": ""
      },
      "events": {
        "success": [
          {
            "name": "dataset.getRefListForMultipleFileDwnldForDSM"
          }
        ]
      }
    },
    "getRefListForMultipleFileDwnldForDSM": {
      "actionType": "JSFunction",
      "method": "getObjects",
      "deps": "soa/kernel/clientDataModel",
      "inputData": {
        "dataset": {
          "$adapt": "{{data.datasetModelObject}}",
          "path": "props.ref_list.dbValues"
        }
      },
      "outputData": {
        "modelObject": ""
      },
      "events": {
        "success": [
          {
            "name": "dataset.getPlmdFileTicketForMultipleDwnldForDSM"
          }
        ]
      }
    },
    "getPlmdFileTicketForMultipleDwnldForDSM": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-Core-2014-10-FileManagement",
      "method": "getPlmdFileTicketForDownload",
      "inputData": {
        "infos": "{{function:getDsmDownloadInfo}}"
      },
      "outputData": {
        "downloadedFile": ""
      },
      "events": {
        "success": [
          {
            "name": "dataset.openFileFromTicketForDSM"
          }
        ]
      },
      "deps": "js/dsmUtils"
    },
    "getImanModelObjectFromVMO": {
      "actionType": "JSFunction",
      "method": "getObjects",
      "deps": "soa/kernel/clientDataModel",
      "inputData": {
        "uid": {
          "$adapt": "{{ctx.mselected}}",
          "path": "uid"
        }
      },
      "outputData": {
        "datasetModelObject": ""
      },
      "events": {
        "success": [
          {
            "name": "dataset.getImanPlmdFileTicketForMultipleDwnldForDSM"
          }
        ]
      }
    },
    "getImanPlmdFileTicketForMultipleDwnldForDSM": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-Core-2014-10-FileManagement",
      "method": "getPlmdFileTicketForDownload",
      "inputData": {
        "infos": "{{function:getImanDsmDownloadInfo}}"
      },
      "outputData": {
        "downloadedFile": ""
      },
      "events": {
        "success": [
          {
            "name": "dataset.openFileFromTicketForDSM"
          }
        ]
      },
      "deps": "js/dsmUtils"
    },
    "enablePLStats": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "Awp0PLStats",
        "location": "globalNavigationSideNav",
        "context": {
          "pinned": true,
          "isPinnable": true,
          "panelPinned": true,
          "isPinUnpinEnabled": true,
          "width": "WIDE"
        },
        "push": false,
        "closeWhenCommandHidden": true,
        "config": {
          "pinned": true,
          "isPinnable": true,
          "panelPinned": true,
          "isPinUnpinEnabled": true,
          "width": "WIDE"
        }
      }
    },
    "startEditInfoPanel": {
      "actionType": "JSFunction",
      "method": "startEdit",
      "inputData": {
        "editHandler": "{{commandContext.editHandler}}",
        "editHandlerContext": "{{commandContext.editHandler.context}}"
      },
      "deps": "js/Awp0ObjectInfoService"
    },
    "saveEditInfoPanel": {
      "actionType": "JSFunction",
      "method": "saveEdit",
      "inputData": {
        "editHandler": "{{commandContext.editHandler}}",
        "editHandlerContext": "{{commandContext.editHandler.context}}"
      },
      "deps": "js/Awp0ObjectInfoService"
    },
    "cancelEditInfoPanel": {
      "actionType": "JSFunction",
      "method": "cancelEdit",
      "inputData": {
        "editHandler": "{{commandContext.editHandler}}",
        "editHandlerContext": "{{commandContext.editHandler.context}}"
      },
      "deps": "js/Awp0ObjectInfoService"
    },
    "removeProjectCellCmdAction": {
      "actionType": "JSFunction",
      "method": "execute",
      "inputData": {
        "vmo": "{{commandContext.vmo}}",
        "commandContext": "{{commandContext}}"
      },
      "deps": "js/removeObjectCellCommandHandler"
    },
    "uiwidgetAddProjectCmdActivatePanel": {
      "actionType": "JSFunction",
      "method": "updateAtomicDataValue",
      "inputData": {
        "AtomicObj": "{{commandContext}}",
        "value": {
          "activeView": "AssignProjectSub"
        }
      },
      "deps": "js/addObjectUtils"
    },
    "preCheckoutViewer": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "uvCommand.executed",
            "eventData": {
              "callback": "preCheckout",
              "vmo": "{{commandContext.vmo}}"
            }
          }
        ]
      }
    },
    "preCancelCheckoutViewer": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "uvCommand.executed",
            "eventData": {
              "callback": "preCancelCheckout",
              "vmo": "{{commandContext.vmo}}"
            }
          }
        ]
      },
      "policy": {
        "types": [
          {
            "name": "Dataset",
            "properties": [
              {
                "name": "is_modifiable"
              },
              {
                "name": "fnd0IsCheckoutable"
              },
              {
                "name": "last_mod_date"
              }
            ]
          }
        ]
      }
    },
    "preCheckinViewer": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "uvCommand.executed",
            "eventData": {
              "callback": "preCheckin",
              "vmo": "{{commandContext.vmo}}"
            }
          }
        ]
      }
    },
    "showDataSetForUV": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{commandContext.vmo.uid}}"
      }
    },
    "getModelObjectFromVMOForUV": {
      "actionType": "JSFunction",
      "method": "getObjects",
      "deps": "soa/kernel/clientDataModel",
      "inputData": {
        "dataset": "{{commandContext.vmo.props.ref_list.dbValues}}"
      },
      "outputData": {
        "modelObject": ""
      },
      "events": {
        "success": [
          {
            "name": "dataset.downloadSelectedDataset"
          }
        ]
      }
    },
    "openInNewTabForUV": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{commandContext.vmo.uid}}"
      },
      "navigateIn": "newTab"
    },
    "openInNewWindowForUV": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{commandContext.vmo.uid}}"
      },
      "navigateIn": "newWindow",
      "options": {
        "top": 10,
        "left": 10
      }
    },
    "changeObjectSetListView": {
      "actionType": "JSFunction",
      "method": "updateObjectSetViewMode",
      "deps": "js/xrtObjectSetService",
      "inputData": {
        "commandContext": "{{commandContext.currentDisplayField}}",
        "newDisplay": "listDisplay",
        "objectSetSource": "{{commandContext.objectSetSource}}"
      }
    },
    "changeObjectSetTableView": {
      "actionType": "JSFunction",
      "method": "updateObjectSetViewMode",
      "deps": "js/xrtObjectSetService",
      "inputData": {
        "commandContext": "{{commandContext.currentDisplayField}}",
        "newDisplay": "tableDisplay",
        "objectSetSource": "{{commandContext.objectSetSource}}"
      }
    },
    "changeObjectSetCompareView": {
      "actionType": "JSFunction",
      "method": "updateObjectSetViewMode",
      "deps": "js/xrtObjectSetService",
      "inputData": {
        "commandContext": "{{commandContext.currentDisplayField}}",
        "newDisplay": "compareDisplay",
        "objectSetSource": "{{commandContext.objectSetSource}}"
      }
    },
    "changeObjectSetImageView": {
      "actionType": "JSFunction",
      "method": "updateObjectSetViewMode",
      "deps": "js/xrtObjectSetService",
      "inputData": {
        "commandContext": "{{commandContext.currentDisplayField}}",
        "newDisplay": "thumbnailDisplay",
        "objectSetSource": "{{commandContext.objectSetSource}}"
      }
    },
    "preProcessTableProp": {
      "actionType": "JSFunction",
      "method": "preProcessAction",
      "deps": "js/abstractTablePropertyService",
      "inputData": {
        "viewModel": "{{commandContext.viewModel}}"
      }
    },
    "createTableProperty": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-AWS2-2016-04-DataManagement",
      "method": "getInitialTableRowData",
      "inputData": {
        "owningObject": "{{ctx.TablePropertyInitialRowDataInput.owningObject}}",
        "tablePropertyName": "{{ctx.TablePropertyInitialRowDataInput.tablePropertyName}}"
      },
      "outputData": {
        "tableRows": "tableRows"
      },
      "events": {
        "success": [
          {
            "name": "TablePropertyInitialRowData.createSuccessful",
            "eventData": {
              "tableRowData": "{{data.tableRows}}"
            }
          }
        ]
      },
      "deps": "js/abstractTablePropertyService"
    },
    "createTablePropertyBatch": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "preProcessTableProp"
        },
        {
          "action": "createTableProperty"
        }
      ]
    },
    "duplicateTableProperty": {
      "actionType": "JSFunction",
      "method": "duplicateRowOnTable",
      "deps": "js/tablePropertyDuplicateService",
      "inputData": {
        "selectedVMO": "{{ctx.tablePropertyEditData}}"
      }
    },
    "duplicateTablePropertyBatch": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "preProcessTableProp"
        },
        {
          "action": "duplicateTableProperty"
        }
      ]
    },
    "removeTableProperty": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "TablePropertyRowData.remove",
            "eventData": {
              "selectionData": "{{ctx.TablePropertySelection}}"
            }
          }
        ]
      }
    },
    "removeTablePropertyBatch": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "preProcessTableProp"
        },
        {
          "action": "removeTableProperty"
        }
      ]
    },
    "createNameValueProperty": {
      "actionType": "dialog",
      "inputData": {
        "options": {
          "view": "Awp0NameValueCreate",
          "placement": "right",
          "parent": ".aw-layout-workarea",
          "width": "MEDIUM",
          "height": "FULL",
          "isCloseVisible": false,
          "subPanelContext": "{{commandContext}}"
        }
      }
    },
    "createNameValuePropertyBatch": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "preProcessTableProp"
        },
        {
          "action": "createNameValueProperty"
        }
      ]
    },
    "removeNameValueProperty": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "NameValueRowData.remove",
            "eventData": {
              "selectionData": "{{ctx.NameValueSelection}}"
            }
          }
        ]
      }
    },
    "removeNameValuePropertyBatch": {
      "actionType": "batchJob",
      "steps": [
        {
          "action": "preProcessTableProp"
        },
        {
          "action": "removeNameValueProperty"
        }
      ]
    },
    "startEditXRTEditor": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "startEditXRTEditor",
            "eventData": {
              "commandContext": "{{commandContext}}"
            }
          }
        ]
      }
    },
    "cancelEditXRTEditor": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "cancelEditXRTEditor",
            "eventData": {
              "commandContext": "{{commandContext}}"
            }
          }
        ]
      }
    },
    "saveEditXRTEditor": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "saveEditXRTEditor",
            "eventData": {
              "commandContext": "{{commandContext}}"
            }
          }
        ]
      }
    },
    "setActiveLayoutAsTopToBottom": {
      "actionType": "JSFunction",
      "method": "setActiveLayout",
      "deps": "js/awGraphService",
      "inputData": {
        "graphModel": "{{ctx.graph.graphModel}}",
        "layoutOption": "GcTopToBottomLayout"
      }
    },
    "setActiveLayoutAsBottomToTop": {
      "actionType": "JSFunction",
      "method": "setActiveLayout",
      "deps": "js/awGraphService",
      "inputData": {
        "graphModel": "{{ctx.graph.graphModel}}",
        "layoutOption": "GcBottomToTopLayout"
      }
    },
    "setActiveLayoutAsRightToLeft": {
      "actionType": "JSFunction",
      "method": "setActiveLayout",
      "deps": "js/awGraphService",
      "inputData": {
        "graphModel": "{{ctx.graph.graphModel}}",
        "layoutOption": "GcRightToLeftLayout"
      }
    },
    "setActiveLayoutAsLeftToRight": {
      "actionType": "JSFunction",
      "method": "setActiveLayout",
      "deps": "js/awGraphService",
      "inputData": {
        "graphModel": "{{ctx.graph.graphModel}}",
        "layoutOption": "GcLeftToRightLayout"
      }
    },
    "setActiveLayoutAsIncremental": {
      "actionType": "JSFunction",
      "method": "setActiveLayout",
      "deps": "js/awGraphService",
      "inputData": {
        "graphModel": "{{ctx.graph.graphModel}}",
        "layoutOption": "GcIncrementalLayout"
      }
    },
    "setActiveLayoutAsOrganic": {
      "actionType": "JSFunction",
      "method": "setActiveLayout",
      "deps": "js/awGraphService",
      "inputData": {
        "graphModel": "{{ctx.graph.graphModel}}",
        "layoutOption": "GcOrganicLayout"
      }
    },
    "setActiveLayoutAsBalloon": {
      "actionType": "JSFunction",
      "method": "setActiveLayout",
      "deps": "js/awGraphService",
      "inputData": {
        "graphModel": "{{ctx.graph.graphModel}}",
        "layoutOption": "GcBalloonLayout"
      }
    },
    "setActiveLayoutAsSnake": {
      "actionType": "JSFunction",
      "method": "setActiveLayout",
      "deps": "js/awGraphService",
      "inputData": {
        "graphModel": "{{ctx.graph.graphModel}}",
        "layoutOption": "GcSnakeLayout"
      }
    },
    "startEdit": {
      "actionType": "JSFunction",
      "method": "startEdit",
      "deps": "js/graphCommandService",
      "inputData": {
        "graphModel": "{{ctx.graph.graphModel}}"
      }
    },
    "exitEdit": {
      "actionType": "JSFunction",
      "method": "exitEdit",
      "deps": "js/graphCommandService",
      "inputData": {
        "graphModel": "{{ctx.graph.graphModel}}",
        "legendState": "{{ctx.graph.legendState}}"
      }
    },
    "GcShowLegendPanel": {
      "actionType": "JSFunction",
      "method": "activateCommandPanel",
      "deps": "js/commandPanel.service",
      "inputData": {
        "commandId": "graphLegend",
        "location": "aw_toolsAndInfo"
      }
    },
    "toggleUseTransparency": {
      "actionType": "JSFunction",
      "method": "toggleUseTransparency",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}"
      }
    },
    "setNavigationModeRotate": {
      "actionType": "JSFunction",
      "method": "setNavigationMode",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}",
        "navigationModeStr": "ROTATE"
      }
    },
    "setNavigationModePan": {
      "actionType": "JSFunction",
      "method": "setNavigationMode",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}",
        "navigationModeStr": "PAN"
      }
    },
    "setNavigationModeZoom": {
      "actionType": "JSFunction",
      "method": "setNavigationMode",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}",
        "navigationModeStr": "ZOOM"
      }
    },
    "setNavigationModeAreaSelect": {
      "actionType": "JSFunction",
      "method": "setNavigationMode",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}",
        "navigationModeStr": "AREA_SELECT"
      }
    },
    "setUvNavigationModeRotate": {
      "actionType": "JSFunction",
      "method": "setNavigationMode",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextNamespace": "awUniversalViewer",
        "navigationModeStr": "ROTATE"
      }
    },
    "setUvNavigationModePan": {
      "actionType": "JSFunction",
      "method": "setNavigationMode",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextNamespace": "awUniversalViewer",
        "navigationModeStr": "PAN"
      }
    },
    "setUvNavigationModeZoom": {
      "actionType": "JSFunction",
      "method": "setNavigationMode",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextNamespace": "awUniversalViewer",
        "navigationModeStr": "ZOOM"
      }
    },
    "showAwv0ViewerSettingsPanel": {
      "actionType": "JSFunction",
      "method": "activateViewerCommandDialog",
      "deps": "js/viewerContext.service",
      "inputData": {
        "commandId": "Awv0ViewerSettings",
        "context": "{{commandContext}}"
      }
    },
    "executeOrientIsometricCommand": {
      "actionType": "JSFunction",
      "method": "executeViewOrientationCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}",
        "cameraOrientation": "ISOMETRIC"
      }
    },
    "executeOrientTrimetricCommand": {
      "actionType": "JSFunction",
      "method": "executeViewOrientationCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}",
        "cameraOrientation": "TRIMETRIC"
      }
    },
    "executeOrientTopCommand": {
      "actionType": "JSFunction",
      "method": "executeViewOrientationCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}",
        "cameraOrientation": "TOP"
      }
    },
    "executeOrientFrontCommand": {
      "actionType": "JSFunction",
      "method": "executeViewOrientationCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}",
        "cameraOrientation": "FRONT"
      }
    },
    "executeOrientRightCommand": {
      "actionType": "JSFunction",
      "method": "executeViewOrientationCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}",
        "cameraOrientation": "RIGHT"
      }
    },
    "executeOrientBackCommand": {
      "actionType": "JSFunction",
      "method": "executeViewOrientationCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}",
        "cameraOrientation": "BACK"
      }
    },
    "executeOrientBottomCommand": {
      "actionType": "JSFunction",
      "method": "executeViewOrientationCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}",
        "cameraOrientation": "BOTTOM"
      }
    },
    "executeOrientLeftCommand": {
      "actionType": "JSFunction",
      "method": "executeViewOrientationCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}",
        "cameraOrientation": "LEFT"
      }
    },
    "UvexecuteOrientIsometricCommand": {
      "actionType": "JSFunction",
      "method": "executeViewOrientationCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextNamespace": "awUniversalViewer",
        "cameraOrientation": "ISOMETRIC"
      }
    },
    "UvexecuteOrientTrimetricCommand": {
      "actionType": "JSFunction",
      "method": "executeViewOrientationCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextNamespace": "awUniversalViewer",
        "cameraOrientation": "TRIMETRIC"
      }
    },
    "UvexecuteOrientTopCommand": {
      "actionType": "JSFunction",
      "method": "executeViewOrientationCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextNamespace": "awUniversalViewer",
        "cameraOrientation": "TOP"
      }
    },
    "UvexecuteOrientFrontCommand": {
      "actionType": "JSFunction",
      "method": "executeViewOrientationCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextNamespace": "awUniversalViewer",
        "cameraOrientation": "FRONT"
      }
    },
    "UvexecuteOrientRightCommand": {
      "actionType": "JSFunction",
      "method": "executeViewOrientationCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextNamespace": "awUniversalViewer",
        "cameraOrientation": "RIGHT"
      }
    },
    "UvexecuteOrientBackCommand": {
      "actionType": "JSFunction",
      "method": "executeViewOrientationCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextNamespace": "awUniversalViewer",
        "cameraOrientation": "BACK"
      }
    },
    "UvexecuteOrientBottomCommand": {
      "actionType": "JSFunction",
      "method": "executeViewOrientationCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextNamespace": "awUniversalViewer",
        "cameraOrientation": "BOTTOM"
      }
    },
    "UvexecuteOrientLeftCommand": {
      "actionType": "JSFunction",
      "method": "executeViewOrientationCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextNamespace": "awUniversalViewer",
        "cameraOrientation": "LEFT"
      }
    },
    "executeAllOnCommand": {
      "actionType": "JSFunction",
      "method": "executeAllOnCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}"
      }
    },
    "executeAllOffCommand": {
      "actionType": "JSFunction",
      "method": "executeAllOffCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}"
      }
    },
    "executeSelectedOffCommand": {
      "actionType": "JSFunction",
      "method": "executeSelectedOffCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}",
        "allSelectedCSIDS": "{{commandContext.viewerAtomicData.selectedCsids}}",
        "partitionSelectedCSIDS": "{{commandContext.viewerAtomicData.selectedPartitionCsids}}"
      }
    },
    "executeSelectedOnCommand": {
      "actionType": "JSFunction",
      "method": "executeSelectedOnCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}",
        "allSelectedCSIDS": "{{commandContext.viewerAtomicData.selectedCsids}}",
        "partitionSelectedCSIDS": "{{commandContext.viewerAtomicData.selectedPartitionCsids}}"
      }
    },
    "executeSelectedOnlyCommand": {
      "actionType": "JSFunction",
      "method": "executeSelectedOnlyCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}",
        "allSelectedCSIDS": "{{commandContext.viewerAtomicData.selectedCsids}}",
        "partitionSelectedCSIDS": "{{commandContext.viewerAtomicData.selectedPartitionCsids}}"
      }
    },
    "executeFitCommand": {
      "actionType": "JSFunction",
      "method": "executeFitCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}",
        "occmgmtContext": "{{commandContext.occmgmtContext}}"
      }
    },
    "confirmRemoveAnalysisResult": {
      "actionType": "Event",
      "method": "Event",
      "inputData": {
        "events": [
          {
            "name": "showConfirmRemoveAnalysisResultMessage"
          }
        ]
      }
    },
    "removeAnalysisResultAction": {
      "actionType": "JSFunction",
      "method": "executeRemoveAnalysisResultCommand",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}"
      }
    },
    "showSnapShotViewData": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{ctx.selected.uid}}",
        "page": "{{i18n.threeDPageTitle}}",
        "pageId": "tc_xrt_jt_viewer"
      }
    },
    "openSnapShotViewDataInNewTab": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{ctx.selected.uid}}",
        "page": "{{i18n.threeDPageTitle}}",
        "pageId": "tc_xrt_jt_viewer"
      },
      "navigateIn": "newTab"
    },
    "openSnapShotViewDataInNewWindow": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{ctx.selected.uid}}",
        "page": "{{i18n.threeDPageTitle}}",
        "pageId": "tc_xrt_jt_viewer"
      },
      "navigateIn": "newWindow"
    },
    "close3DSubCommandsToolbar": {
      "actionType": "JSFunction",
      "method": "closeSubCommandsToolbar",
      "deps": "js/viewerContext.service",
      "inputData": {
        "viewerContextData": "{{commandContext.viewerContextData}}"
      }
    },
    "rotatePdfCWAction": {
      "actionType": "JSFunction",
      "method": "rotateCW",
      "inputData": {
        "context": "{{commandContext}}"
      },
      "deps": "js/pdfViewerUtils"
    },
    "rotatePdfCCWAction": {
      "actionType": "JSFunction",
      "method": "rotateCCW",
      "inputData": {
        "context": "{{commandContext}}"
      },
      "deps": "js/pdfViewerUtils"
    },
    "rotateCWAction": {
      "actionType": "JSFunction",
      "method": "rotateCW",
      "inputData": {
        "context": "{{commandContext}}"
      },
      "deps": "js/Awp0ImageViewerService"
    },
    "rotateCCWAction": {
      "actionType": "JSFunction",
      "method": "rotateCCW",
      "inputData": {
        "context": "{{commandContext}}"
      },
      "deps": "js/Awp0ImageViewerService"
    },
    "uvTextWordWrapAction": {
      "actionType": "JSFunction",
      "method": "toggleWordWrap",
      "deps": "js/Awp0TextViewerService"
    },
    "executeOpenInVisCommand": {
      "actionType": "JSFunction",
      "method": "executeOpenInVisCommand",
      "deps": "js/Awv0VisualizationService"
    },
    "showHomeFolderAction": {
      "actionType": "Navigate",
      "navigateTo": "com_siemens_splm_clientfx_tcui_xrt_showObject",
      "navigationParams": {
        "uid": "{{ctx.user.props.home_folder.dbValues[0]}}",
        "cmdId": "{{commandContext.cmdId}}",
        "cmdArg": "{{commandContext.cmdArgs}}"
      }
    },
    "getUnPinInputs": {
      "actionType": "JSFunctionAsync",
      "method": "getAdaptedObjects",
      "inputData": {
        "sourceObjects": "{{ctx.mselected}}"
      },
      "outputData": {
        "unpinInput": ""
      },
      "events": {
        "success": [
          {
            "name": "unPinObject"
          }
        ]
      },
      "deps": "js/adapterService"
    },
    "getPinInputs": {
      "actionType": "JSFunctionAsync",
      "method": "getAdaptedObjects",
      "inputData": {
        "sourceObjects": "{{ctx.mselected}}"
      },
      "outputData": {
        "pinInput": ""
      },
      "events": {
        "success": [
          {
            "name": "pinObject"
          }
        ]
      },
      "deps": "js/adapterService"
    },
    "getPinDelegateInputs": {
      "actionType": "JSFunctionAsync",
      "method": "getAdaptedObjects",
      "inputData": {
        "sourceObjects": "{{ctx.mselected}}"
      },
      "outputData": {
        "pinDelegateInput": ""
      },
      "events": {
        "success": [
          {
            "name": "pinDelegateObject",
            "eventData": {
              "pinDelegateParams": "{{data.eventData.pinDelegateParamString}}"
            }
          }
        ]
      },
      "deps": "js/adapterService"
    },
    "unpinSelectedObject": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-AWS2-2018-05-DataManagement",
      "method": "unpinObjects",
      "inputData": {
        "uidsToUnpin": [
          "{{data.unpinInput[0].uid}}"
        ],
        "returnGateway": false
      },
      "outputData": {},
      "events": {
        "success": [
          {
            "name": "cdm.updated",
            "eventData": {
              "updatedObjects": [
                "{{data.unpinInput[0]}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "unpinFailure"
          }
        ]
      }
    },
    "pinSelectedObject": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-AWS2-2018-05-DataManagement",
      "method": "pinObjects",
      "inputData": {
        "input": [
          {
            "uid": "{{data.pinInput[0].uid}}",
            "actionParams": "",
            "templateId": ""
          }
        ]
      },
      "outputData": {},
      "events": {
        "success": [
          {
            "name": "cdm.updated",
            "eventData": {
              "updatedObjects": [
                "{{data.pinInput[0]}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "pinFailure"
          }
        ]
      }
    },
    "pinSelectedObjectDelegateAction": {
      "actionType": "TcSoaService",
      "serviceName": "Internal-AWS2-2018-05-DataManagement",
      "method": "pinObjects",
      "inputData": {
        "input": [
          {
            "uid": "{{data.pinDelegateInput[0].uid}}",
            "actionParams": "{{data.eventData.pinDelegateParams}}",
            "templateId": ""
          }
        ]
      },
      "outputData": {},
      "events": {
        "success": [
          {
            "name": "cdm.updated",
            "eventData": {
              "updatedObjects": [
                "{{data.pinDelegateInput[0]}}"
              ]
            }
          }
        ]
      },
      "actionMessages": {
        "failure": [
          {
            "message": "pinFailure"
          }
        ]
      }
    },
    "showUIComp": {
      "actionType": "Navigate",
      "navigateTo": "showUIComp",
      "navigationParams": {}
    }
  },
  "conditions": {
    "DigitalAssetsPanelCommandCondition": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'Pka0ArtwkDesignRevision' ) > -1 && ctx.aw_host_type.localeCompare('ADOBE') === 0"
    },
    "ImagePanelCommandCondition": {
      "expression": "(ctx.selected.modelType.typeHierarchyArray.indexOf( 'Ret0RetailProductRevision' ) > -1 || ctx.selected.modelType.typeHierarchyArray.indexOf( 'Ret02DCADRevision' ) > -1) && ctx.aw_host_type.localeCompare('ADOBE') === 0"
    },
    "exportExcelCommandCondition": {
      "expression": "ctx.selected.modelType && ( commandContext.openedObject && commandContext.openedObject.modelType.typeHierarchyArray.indexOf( 'Folder' ) !== -1 || ctx.aceActiveContext && !ctx.splitView.mode ) && !conditions.is4GDObject"
    },
    "roundTripWordCommandVisibilityCondition": {
      "expression": "ctx.selected.modelType && conditions.isReqMicroserviceInstalled"
    },
    "isExportWithAddinEnabled": {
      "expression": "ctx.preferences.REQ_Export_WithAddin[0] === 'true'"
    },
    "is4GDObject": {
      "expression": "ctx.selected.uid.endsWith('AWB4GD')"
    },
    "isReqMicroserviceInstalled": {
      "expression": "ctx.preferences.REQ_Microservice_Installed[0] === 'true'"
    },
    "isRMWorkspace": {
      "expression": "ctx.workspace.workspaceId === 'TcRMWorkspace'"
    },
    "exportSummaryTableExcelCommandCondition": {
      "expression": "ctx.xrtPageContext.secondaryXrtPageID === 'tc_xrt_summary_table' && conditions.isRMWorkspace"
    },
    "exportImportExcelCommandCondition": {
      "expression": "ctx.selected.modelType && ( commandContext.openedObject && commandContext.openedObject.modelType.typeHierarchyArray.indexOf( 'Folder' ) !== -1 || ctx.aceActiveContext && !ctx.splitView.mode ) && !conditions.is4GDObject && !ctx.hiddenCommands.Arm0ExportImport"
    },
    "enableMoveUpExcelColumnCmd": {
      "expression": "ctx.excelListCommands && ctx.excelListCommands.enableMoveUp === true && !(commandContext.createContext.data.isExportColumnEmpty.dbValue) && commandContext.createContext.data.dataProviders.exportColumnList.selectedObjects.length"
    },
    "enableMoveDownExcelColumnCmd": {
      "expression": "ctx.excelListCommands && ctx.excelListCommands.enableMoveDown === true && !(commandContext.createContext.data.isExportColumnEmpty.dbValue) && commandContext.createContext.data.dataProviders.exportColumnList.selectedObjects.length"
    },
    "AddToFavoritesVisibility": {
      "expression": "ctx.visibleServerCommands.Awp0AddToFavorites === true"
    },
    "RemoveFromFavoritesVisibility": {
      "expression": "ctx.visibleServerCommands.Awp0RemoveFromFavorites === true"
    },
    "IsHostingEnabled": {
      "expression": "ctx.aw_hosting_enabled"
    },
    "isEditButtonVisibleHosted": {
      "expression": "ctx.aw_hosting_state.enableEditing && conditions.isEditButtonVisible"
    },
    "isSaveButtonVisibleHosted": {
      "expression": "ctx.aw_hosting_state.enableEditing && conditions.isSaveButtonVisible"
    },
    "isCancelButtonVisibleHosted": {
      "expression": "ctx.aw_hosting_state.enableEditing && conditions.isCancelButtonVisible"
    },
    "OpenHostedEnabled": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.aw_hosting_enabled",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.aw_hosting_config.SuppressSendToCommand",
            "$query": {
              "$eq": false
            }
          },
          {
            "$or": [
              {
                "$source": "ctx.aw_hosting_hostServices.HS_HOST_OPEN__VERSION_2014_02",
                "$query": {
                  "$eq": true
                }
              },
              {
                "$source": "ctx.aw_hosting_hostServices.HS_HOST_OPEN__VERSION_2015_10",
                "$query": {
                  "$eq": true
                }
              }
            ]
          },
          {
            "$source": "ctx.mselected.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "ctx.mselected",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": "{{ctx.aw_hosting_sendToTypes}}"
              }
            }
          }
        ]
      }
    },
    "OpenNewViewHostedEnabled": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.aw_hosting_enabled",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.aw_hosting_config.SuppressSendToNewViewCommand",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "ctx.aw_hosting_hostServices.HS_HOST_OPEN_NEW_VIEW_SVC__VERSION_2016_04",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.mselected.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "ctx.mselected",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": "{{ctx.aw_hosting_sendToTypes}}"
              }
            }
          }
        ]
      }
    },
    "AddComponentHostedEnabled": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.aw_hosting_enabled",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.aw_hosting_config.SuppressAddComponentHostedCommand",
            "$query": {
              "$eq": false
            }
          },
          {
            "$source": "ctx.aw_hosting_hostServices.HS_HOST_ADD_COMPONENT__VERSION_2014_02",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": "ctx.mselected.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "ctx.mselected",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": "{{ctx.aw_hosting_sendToTypes}}"
              }
            }
          }
        ]
      }
    },
    "alertReplaceCommandVisible": {
      "expression": "ctx.visibleServerCommands.Awp0ReplaceDataset && ctx.selected.props.ref_list.dbValues.length > 0"
    },
    "isImanFile": {
      "expression": {
        "$source": {
          "$adapt": "commandContext.selected"
        },
        "$query": {
          "$source": "modelType.typeHierarchyArray",
          "$query": {
            "$in": [
              "ImanFile"
            ]
          }
        }
      }
    },
    "isDatasetSelected": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.mselected.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "ctx.selected.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Dataset"
              ]
            }
          }
        ]
      }
    },
    "cmdShowAlternateIdCommand": {
      "expression": "ctx.visibleServerCommands.Awp0CreateAlternateID === true"
    },
    "cmdShowAliasIdCommand": {
      "expression": {
        "$or": [
          {
            "$source": "ctx.selected.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "Item"
              ]
            }
          },
          {
            "$source": "ctx.selected.modelType.typeHierarchyArray",
            "$query": {
              "$in": [
                "ItemRevision"
              ]
            }
          }
        ]
      }
    },
    "cmdShowDisplayRuleCommand": {
      "expression": "ctx.sublocation.clientScopeURI === 'Awp0MyIdDisplayRules'"
    },
    "isDisableRedLineCmdVisible": {
      "expression": "ctx.isRedLineMode === 'true' "
    },
    "isRedLineFeatureEnabled": {
      "expression": "ctx.preferences.AWC_Enable_RedLine_feature[0] === 'true' "
    },
    "isRedLineCmdVisible": {
      "expression": {
        "$query": {
          "$and": [
            {
              "$source": "ctx.selected",
              "$query": {
                "$source": "modelType.typeHierarchyArray",
                "$query": {
                  "$in": [
                    "ItemRevision"
                  ]
                }
              }
            },
            {
              "$source": "ctx.locationContext['ActiveWorkspace:SubLocation']",
              "$query": {
                "$eq": "showObject"
              }
            }
          ]
        }
      }
    },
    "signOutVisible": {
      "expression": "!ctx.signOutDisabled"
    },
    "isCommandPanelCloseVisible": {
      "expression": "!(commandContext.isPopupAnchorVisible === true)"
    },
    "goHomeVisibility": {
      "expression": "!ctx.goHomeDisabled && !ctx.embeddedLocationView"
    },
    "cutVisibility": {
      "expression": "ctx.visibleServerCommands.Awp0Cut === true && ctx.relationContext.relationInfo.length > 0 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1 && (ctx.relationContext.relationInfo[0].relationType !== 'ps_parents' && ctx.relationContext.relationInfo[0].relationType !== 'Awp0ReferencesProvider')"
    },
    "signOutVisibility": {
      "expression": "ctx.sublocation.nameToken === 'showGateway' && !ctx.signOutDisabled"
    },
    "saveAsorRevise": {
      "expression": "ctx.visibleServerCommands.Awp0ShowSaveAs === true"
    },
    "showSaveAs": {
      "expression": "ctx.visibleServerCommands.Awp0ShowSaveAs === true"
    },
    "showRevise": {
      "expression": "ctx.visibleServerCommands.Awp0ShowRevise === true"
    },
    "checkoutVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.visibleServerCommands.Awp0Checkout",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": {
              "$adapt": "ctx.mselected"
            },
            "$query": {
              "$source": "props.owning_site.dbValues.0.length",
              "$query": {
                "$isNull": true
              }
            }
          }
        ]
      }
    },
    "checkinVisibility": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.visibleServerCommands.Awp0Checkin",
            "$query": {
              "$eq": true
            }
          },
          {
            "$source": {
              "$adapt": "ctx.mselected"
            },
            "$query": {
              "$source": "props.owning_site.dbValues.0.length",
              "$query": {
                "$isNull": true
              }
            }
          }
        ]
      }
    },
    "cancelCheckoutVisibility": {
      "expression": "ctx.visibleServerCommands.Awp0CancelCheckout === true"
    },
    "checkSelections": {
      "expression": "(ctx.mselected && ctx.mselected.length > 0)"
    },
    "cmdOpenBaseVisibleCondition": {
      "expression": "ctx.selected && ctx.mselected && ctx.mselected.length === 1 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1 && ( 'com.siemens.splm.clientfx.tcui.xrt.showObjectLocation' !== ctx.locationContext['ActiveWorkspace:Location'] || ( ctx.state.processed && ctx.selected.uid !== ctx.state.processed.uid ) )"
    },
    "cmdOpenFromCommandArgsActiveCondition": {
      "expression": "ctx.selected && commandContext && commandContext.vmo && ctx.selected.uid !== commandContext.vmo.uid"
    },
    "cmdOpenInNewTabCommandActive": {
      "expression": "ctx.selected && ctx.mselected && ctx.mselected.length === 1 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1 && !ctx.aw_hosting_enabled"
    },
    "cmdOpenInNewWindowCommandActive": {
      "expression": "ctx.selected && ctx.mselected && ctx.mselected.length === 1 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1 && !ctx.aw_hosting_enabled"
    },
    "cmdAwp0ShowObjectCellBaseVisibleCondition": {
      "expression": {
        "$source": {
          "$adapt": "commandContext.vmo"
        },
        "$query": {
          "$source": "modelType.typeHierarchyArray",
          "$query": {
            "$notin": [
              "Dataset"
            ]
          }
        }
      }
    },
    "cmdAwp0ShowObjectCellForObjectNavigationBaseVisibleCondition": {
      "expression": "commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'Folder' ) === -1"
    },
    "cmdAwp0ShowObjectCellDatasetBaseVisibleCondition": {
      "expression": {
        "$source": {
          "$adapt": "commandContext.vmo"
        },
        "$query": {
          "$source": "modelType.typeHierarchyArray",
          "$query": {
            "$in": [
              "Dataset"
            ]
          }
        }
      }
    },
    "cmdAwp0ViewFileBaseVisibleCondition": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.mselected.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "ctx.mselected",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Dataset"
                ]
              }
            }
          },
          {
            "$source": "ctx.visibleServerCommands.Awp0ViewFile",
            "$query": {
              "$eq": true
            }
          }
        ]
      }
    },
    "cmdNavigateObjectBaseVisibleCondition": {
      "expression": "commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'Folder' ) != -1 && !conditions.isTreeView && !conditions.isTreeSummaryView"
    },
    "isListView": {
      "expression": "ctx.ViewModeContext.ViewModeContext === 'ListView'"
    },
    "isTableView": {
      "expression": "ctx.ViewModeContext.ViewModeContext === 'TableView'"
    },
    "isSummaryView": {
      "expression": "ctx.ViewModeContext.ViewModeContext === 'SummaryView'"
    },
    "isNoneView": {
      "expression": "ctx.ViewModeContext.ViewModeContext === 'None'"
    },
    "isTableSummaryView": {
      "expression": "ctx.ViewModeContext.ViewModeContext === 'TableSummaryView'"
    },
    "isImageView": {
      "expression": "ctx.ViewModeContext.ViewModeContext === 'ImageView'"
    },
    "isTreeView": {
      "expression": "ctx.ViewModeContext.ViewModeContext === 'TreeView'"
    },
    "isTreeSummaryView": {
      "expression": "ctx.ViewModeContext.ViewModeContext === 'TreeSummaryView'"
    },
    "isTableContextNotActive": {
      "expression": "ctx.TABLE_CONTEXT && ctx.TABLE_CONTEXT._editing"
    },
    "isNoneContextNotActive": {
      "expression": "ctx.NONE && ctx.NONE._editing"
    },
    "isTableContextActive": {
      "expression": "ctx.TABLE_CONTEXT && !ctx.TABLE_CONTEXT._editing"
    },
    "isNoneContextActive": {
      "expression": "ctx.NONE && !ctx.NONE._editing"
    },
    "isAnyContextActive": {
      "expression": "conditions.isNoneContextActive || conditions.isTableContextActive"
    },
    "isEditInProgressInTableOrTreeWithSummary": {
      "expression": "!ctx.NONE._editing && !(ctx.TABLE_CONTEXT && ctx.TABLE_CONTEXT._editing)"
    },
    "isEditAccessGranted": {
      "expression": "ctx.NONE.canEdit || ctx.TABLE_CONTEXT.canEdit"
    },
    "isStartEditAllowed": {
      "expression": "conditions.isEditAccessGranted && (conditions.isSummaryView || conditions.isNoneView) && conditions.isEditInProgressInTableOrTreeWithSummary && ctx.visibleServerCommands.Awp0StartEdit"
    },
    "isStartEditGroupCommandAllowed": {
      "expression": "conditions.isEditInProgressInTableOrTreeWithSummary && conditions.isEditAccessGranted && (conditions.isTreeSummaryView || conditions.isTableSummaryView)"
    },
    "isStartEditSummaryAllowed": {
      "expression": "conditions.isStartEditGroupCommandAllowed && conditions.isNoneContextActive && ctx.visibleServerCommands.Awp0StartEdit && ctx.NONE.canEdit"
    },
    "isStartEditTableAllowed": {
      "expression": "conditions.isEditInProgressInTableOrTreeWithSummary && conditions.isEditAccessGranted && ctx.visibleServerCommands.Awp0StartEditTable && ( ctx.search && ctx.search.totalFound !== undefined ? ( ctx.search.totalFound > 0 ) : true) && ctx.TABLE_CONTEXT.canEdit"
    },
    "saveEditsCommandActive": {
      "expression": "conditions.isNoneContextNotActive"
    },
    "saveEditsPWACommandActive": {
      "expression": "!conditions.isEditInProgressInTableOrTreeWithSummary && conditions.isTableContextNotActive"
    },
    "cancelEditsCommandActive": {
      "expression": "conditions.isNoneContextNotActive"
    },
    "cancelEditsPWACommandActive": {
      "expression": "!conditions.isEditInProgressInTableOrTreeWithSummary && conditions.isTableContextNotActive"
    },
    "addProfilePictureVisibility": {
      "expression": "ctx.visibleServerCommands.Awp0AddProfilePicture"
    },
    "cmdObjectInfoActive": {
      "expression": "ctx.selected && ctx.mselected.length === 1 && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1"
    },
    "awp0ChangePasswordCommandCondition": {
      "expression": "ctx.visibleServerCommands.Awp0ChangePassword && ctx.locationContext['ActiveWorkspace:SubLocation'] === 'showObject'"
    },
    "cmdShareURLCommandVisible": {
      "expression": "ctx.sublocation.nameToken !== 'showGateway' && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1"
    },
    "awp0OpenInRACCommandCondition": {
      "expression": "ctx.selected && ctx.mselected && ctx.mselected.length === 1 && ctx.aw_host_type !== 'RAC' && ctx.isMobileOS !== true && ctx.selected.modelType.typeHierarchyArray.indexOf( 'BusinessObject' ) > -1"
    },
    "awp0SelectAllCondition": {
      "expression": "commandContext.pwaSelectionModel.mode === 'multiple' && commandContext.pwaSelectionModel.selectionState !== 'all'"
    },
    "awp0DeselectAllCondition": {
      "expression": "commandContext.pwaSelectionModel.mode === 'multiple' && commandContext.pwaSelectionModel.selectionState === 'all'"
    },
    "awp0SelectAllObjectSetCondition": {
      "expression": "commandContext.selectionModel.mode === 'multiple' && commandContext.selectionModel.selectionState !== 'all'"
    },
    "awp0DeselectAllObjectSetCondition": {
      "expression": "commandContext.selectionModel.mode === 'multiple' && commandContext.selectionModel.selectionState === 'all'"
    },
    "awp0MultiSelectEnableCondition": {
      "expression": "!commandContext.pwaSelectionModel.multiSelectEnabled && commandContext.pwaSelectionModel.mode === 'multiple'"
    },
    "awp0MultiSelectDisableCondition": {
      "expression": "commandContext.pwaSelectionModel.multiSelectEnabled && commandContext.pwaSelectionModel.mode === 'multiple'"
    },
    "awp0MultiSelectObjectSetEnableCondition": {
      "expression": "!commandContext.selectionModel.multiSelectEnabled && commandContext.selectionModel.mode === 'multiple'"
    },
    "awp0MultiSelectObjectSetDisableCondition": {
      "expression": "commandContext.selectionModel.multiSelectEnabled && commandContext.selectionModel.mode === 'multiple'"
    },
    "folderSelected": {
      "expression": "ctx.selected.modelType.typeHierarchyArray.indexOf( 'Folder' ) > -1 && ctx.sublocation.nameToken === 'com.siemens.splm.clientfx.tcui.xrt.objectNavigationSubLocation' && ctx.mselected.length === 1"
    },
    "xrtIncludeAddCommand": {
      "expression": "!ctx.editInProgress && (commandContext.xrtCommands['com.teamcenter.rac.common.AddNew'] || commandContext.xrtCommands['com.teamcenter.rac.common.AddReference'] || commandContext.xrtCommands['Awp0ShowAddObject'])"
    },
    "xrtObjectSetSourceIsDCP": {
      "expression": "commandContext && commandContext.isObjectSetSourceDCP"
    },
    "idDispRuleAdminInfoCmdVisible": {
      "expression": "commandContext.vmo &&  commandContext.vmo.props.object_string.dbValue !== 'noIdDisplayRule' "
    },
    "xrtIncludeAddCommandDCP": {
      "expression": "conditions.xrtIncludeAddCommand && conditions.xrtObjectSetSourceIsDCP"
    },
    "cmdCopyCommandVisible": {
      "expression": "ctx.visibleServerCommands.Awp0Copy && ctx.sublocation.nameToken !== ctx.defaultRoutePath && ctx.mselected && ctx.mselected.length > 0"
    },
    "cmdCopyFileDwnldLinkCmdVisible": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.mselected.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "ctx.mselected",
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": [
                  "Dataset"
                ]
              }
            }
          }
        ]
      }
    },
    "isAddToOpenForCurrentObjectSet": {
      "expression": "ctx.activeToolsAndInfoCommand.commandId === 'Awp0ShowAddObject' && ctx.panelContext.objectSetTitleKey === commandContext.objectSetTitleKey"
    },
    "isExportToExcelForCurrentObjectSet": {
      "expression": "commandContext.dataProvider !== undefined"
    },
    "Awp0DeleteCommandConditionVisible": {
      "expression": "ctx.visibleServerCommands.Awp0Delete"
    },
    "arrangeShowAllSelected": {
      "expression": "commandContext.arrangeData.operationType === 'intersection'"
    },
    "arrangeShowAllVisible": {
      "expression": "commandContext.arrangeData.columnDefs.length > 0 && ( !commandContext.arrangeData.columnConfigId || commandContext.arrangeData.operationType === 'intersection' || commandContext.arrangeData.operationType === 'union' || commandContext.arrangeData.operationType === 'as_arranged' || commandContext.arrangeData.operationType === 'configured' ) && ( commandContext.arrangeData.columnConfigId ? commandContext.arrangeData.columnConfigId.indexOf( 'objSetSrc' ) === -1 : true )"
    },
    "arrangeShowAllEnable": {
      "expression": "commandContext.arrangeData.isExistingColumnConfigLoaded !== true"
    },
    "arrangeResetVisible": {
      "expression": "commandContext.arrangeData.columnDefs.length > 0 || commandContext.arrangeData.availableColumnDefs.length > 0"
    },
    "arrangeItemSelected": {
      "expression": "commandContext.arrangeData.filter === '' && commandContext.dataProvider.dataProviderColumnConfigs.selectedObjects.length > 0"
    },
    "arrangeMoveUpEnable": {
      "expression": "conditions.arrangeItemSelected && commandContext.dataProvider.dataProviderColumnConfigs.selectedObjects[0].name !== commandContext.arrangeData.columnDefs[0].name && commandContext.arrangeData.columnDefs.length > 1"
    },
    "arrangeMoveDownEnable": {
      "expression": "conditions.arrangeItemSelected && commandContext.dataProvider.dataProviderColumnConfigs.selectedObjects[commandContext.dataProvider.dataProviderColumnConfigs.selectedObjects.length-1].name !== commandContext.arrangeData.columnDefs[commandContext.arrangeData.columnDefs.length-1].name && commandContext.arrangeData.columnDefs.length > 1"
    },
    "arrangeAddColumnsEnable": {
      "expression": "commandContext.dataProvider.dataProviderAvailableColumnConfigs.selectedObjects.length > 0"
    },
    "arrangeRemoveColumnsEnable": {
      "expression": "commandContext.dataProvider.dataProviderColumnConfigs.selectedObjects.length > 1 || ( commandContext.dataProvider.dataProviderColumnConfigs.selectedObjects.length === 1 && commandContext.dataProvider.dataProviderColumnConfigs.selectedObjects[0].uid !== 'object_name' )"
    },
    "deleteNamedColumnConfigVisible": {
      "expression": "commandContext.vmo.isModifiable === true"
    },
    "isPinEnabled": {
      "expression": "commandContext.isPinUnpinEnabled && !commandContext.panelPinned"
    },
    "isUnpinEnabled": {
      "expression": "commandContext.isPinUnpinEnabled && commandContext.panelPinned"
    },
    "Awp0ChangeOwnerVisibleCondition": {
      "expression": "ctx.visibleServerCommands.Awp0ChangeOwner"
    },
    "awp0PasteVisibleCondition": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.mselected.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "ctx.selected.props.is_modifiable.dbValues",
            "$query": {
              "$in": [
                "1"
              ]
            }
          },
          {
            "$source": "ctx.selectedModelTypeRelations.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "ctx.sublocation.clientScopeURI",
            "$query": {
              "$ne": "Awp0ShowObject"
            }
          }
        ]
      }
    },
    "awp0PasteContextMenuVisibleCondition": {
      "expression": {
        "$and": [
          {
            "$source": "ctx.mselected.length",
            "$query": {
              "$eq": 1
            }
          },
          {
            "$source": "ctx.selected.props.is_modifiable.dbValues",
            "$query": {
              "$in": [
                "1"
              ]
            }
          },
          {
            "$source": "ctx.selectedModelTypeRelations.length",
            "$query": {
              "$gt": 0
            }
          },
          {
            "$source": "ctx.awClipBoardProvider.length",
            "$query": {
              "$gt": 0
            }
          }
        ]
      }
    },
    "awp0PasteToObjectSetActiveCondition": {
      "expression": "commandContext.objectSetSource !== null && commandContext.objectSetSource !== undefined"
    },
    "awp0PasteToObjectSetDCPActiveCondition": {
      "expression": "conditions.awp0PasteToObjectSetActiveCondition && conditions.xrtObjectSetSourceIsDCP"
    },
    "awp0PasteToObjectSetVisibleCondition": {
      "expression": {
        "$and": [
          {
            "$or": [
              {
                "$source": "ctx.selected.props.is_modifiable.dbValues",
                "$query": {
                  "$in": [
                    "1"
                  ]
                }
              },
              {
                "$source": "commandContext.isObjectSetSourceS2P",
                "$query": {
                  "$eq": "true"
                }
              }
            ]
          },
          {
            "$source": {
              "$adapt": "ctx.awClipBoardProvider"
            },
            "$query": {
              "$source": "modelType.typeHierarchyArray",
              "$query": {
                "$in": "{{commandContext.modelTypeRelations}}"
              }
            }
          },
          {
            "$source": "commandContext.xrtCommands.Awp0Paste",
            "$query": {
              "$eq": true
            }
          },
          {
            "$or": [
              {
                "$source": "commandContext.selectionModel.selectionData.selected",
                "$query": {
                  "$isNull": true
                }
              },
              {
                "$source": "commandContext.selectionModel.selectionData.selected.length",
                "$query": {
                  "$eq": 0
                }
              }
            ]
          }
        ]
      }
    },
    "isCompactLayout": {
      "expression": "ctx.layout === 'compact'"
    },
    "isComfyLayout": {
      "expression": "ctx.layout === 'comfy'"
    },
    "isLabelShown": {
      "expression": "ctx.toggleLabel === true"
    },
    "isOpenArrangePanelVisible": {
      "expression": "commandContext.gridOptions.enableArrangeMenu && commandContext.isArrangeSupported && !commandContext.isNarrowMode"
    },
    "isOpenArrangePanelEnabled": {
      "expression": "!commandContext.tableInstance.isEditing"
    },
    "awp0ExportToExcelVisibleCondition": {
      "expression": "commandContext.columns.length > 0"
    },
    "exportVisibleMoveUpColumn": {
      "expression": "ctx.excelListCommands && ctx.excelListCommands.enableMoveUp === true"
    },
    "exportVisibleMoveDownColumn": {
      "expression": "ctx.excelListCommands && ctx.excelListCommands.enableMoveDown === true"
    },
    "isPropertyLocalizable": {
      "expression": "commandContext.isLocalizable && (( !commandContext.isArray && commandContext.dbValue[0] ) || ( commandContext.isArray && commandContext.dbValue.length > 0 )) && !commandContext.hasLov && commandContext.hasReadAccess !== false"
    },
    "isConfRevPWAEnabledThroughPref": {
      "expression": "ctx.preferences.AWC_display_configured_revs_for_pwa[0] === 'true'"
    },
    "plStatsEnabled": {
      "expression": "ctx.plStatsEnabled === true"
    },
    "fileUploadPanelInsideInfoPanelOpen": {
      "expression": "commandContext.upload === true"
    },
    "isEditButtonVisible": {
      "expression": "commandContext.editHandler && commandContext.editHandler.canEdit === true && commandContext.editHandler._editing === false"
    },
    "isSaveButtonVisible": {
      "expression": "commandContext.editHandler && commandContext.editHandler._editing === true"
    },
    "isCancelButtonVisible": {
      "expression": "commandContext.editHandler && commandContext.editHandler._editing === true"
    },
    "removeProjectsCmdCond": {
      "expression": "(commandContext.vmo)"
    },
    "uvCheckoutCmdCondition": {
      "expression": "commandContext.vmo.props.fnd0IsCheckoutable.dbValues[0] === '1' && commandContext.vmo.props.is_modifiable.dbValues[0] === '1'"
    },
    "uvCancelCheckoutCmdCondition": {
      "expression": "commandContext.vmo.props.checked_out_user.dbValues[0] === ctx.user.uid"
    },
    "uvCheckinCmdCondition": {
      "expression": "commandContext.vmo.props.checked_out_user.dbValues[0] === ctx.user.uid"
    },
    "universalViewerPopupCommandsActive": {
      "expression": "commandContext && commandContext.vmo && commandContext.vmo.modelType.typeHierarchyArray.indexOf( 'Dataset' ) !== -1"
    },
    "objectSetMultipleViewModes": {
      "expression": "commandContext.displayModesCount > 1"
    },
    "objectSetSupportsListView": {
      "expression": "commandContext.displayModes.listDisplay && conditions.objectSetMultipleViewModes"
    },
    "objectSetSupportsTableView": {
      "expression": "commandContext.displayModes.tableDisplay && conditions.objectSetMultipleViewModes"
    },
    "objectSetSupportsCompareView": {
      "expression": "commandContext.displayModes.compareDisplay && conditions.objectSetMultipleViewModes"
    },
    "objectSetSupportsImageView": {
      "expression": "commandContext.displayModes.thumbnailDisplay && conditions.objectSetMultipleViewModes"
    },
    "isObjectSetListView": {
      "expression": "commandContext.currentDisplay === 'listDisplay'"
    },
    "isObjectSetTableView": {
      "expression": "commandContext.currentDisplay === 'tableDisplay'"
    },
    "isObjectSetCompareView": {
      "expression": "commandContext.currentDisplay === 'compareDisplay'"
    },
    "isObjectSetImageView": {
      "expression": "commandContext.currentDisplay === 'thumbnailDisplay'"
    },
    "showObjectTablePropertyActive": {
      "expression": {
        "$source": {
          "$adapt": "commandContext.vmo"
        },
        "$query": {
          "$source": "modelType.typeHierarchyArray",
          "$query": {
            "$in": [
              "Fnd0TableRow"
            ]
          }
        }
      }
    },
    "tablePropertyRowSelected": {
      "expression": {
        "$source": "ctx.selected",
        "$query": {
          "$source": "modelType.typeHierarchyArray",
          "$query": {
            "$in": [
              "Fnd0TableRow"
            ]
          }
        }
      }
    },
    "cmdTablePropertyCreateActive": {
      "expression": "ctx.editInProgress && commandContext.isBulkEditing && commandContext.createCommandEnabled"
    },
    "cmdTablePropertyDuplicateActive": {
      "expression": "ctx.editInProgress && commandContext.isBulkEditing && ctx.tablePropertyEditData && ctx.tablePropertyEditData.gridId === commandContext.viewModel.providerName && commandContext.createCommandEnabled"
    },
    "cmdTablePropertyRemoveActive": {
      "expression": "ctx.editInProgress && commandContext.isBulkEditing && commandContext.removeCommandEnabled && ctx.ActiveTablePropertyId === commandContext.viewModel.providerName"
    },
    "cmdNameValuePropertyCreateActive": {
      "expression": "ctx.editInProgress && commandContext.isBulkEditing && commandContext.createCommandEnabled"
    },
    "cmdNameValuePropertyRemoveActive": {
      "expression": "ctx.editInProgress && commandContext.isBulkEditing && commandContext.removeCommandEnabled && ctx.ActiveTablePropertyId === commandContext.viewModel.providerName"
    },
    "startEditAllowed": {
      "expression": "commandContext.content && commandContext.editing !== true"
    },
    "cancelEditAllowed": {
      "expression": "commandContext.content && commandContext.editing === true"
    },
    "saveEditAllowed": {
      "expression": "commandContext.content && commandContext.editing === true"
    },
    "isGcStartEditCommandVisible": {
      "expression": "ctx.graph.graphModel.config.enableEdit&& !ctx.graph.graphModel.graphControl.inputMode.editMode"
    },
    "isGcExitEditCommandVisible": {
      "expression": "ctx.graph.graphModel.config.enableEdit && ctx.graph.graphModel.graphControl.inputMode.editMode"
    },
    "isGcVisibleLegend": {
      "expression": "ctx.graph.legendData!==undefined"
    },
    "cmdGcLayoutCommandGroupActive": {
      "expression": "ctx.graph.graphModel.config.layout && ctx.graph.graphModel.config.layout.options.length > 0"
    },
    "cmdGcTopToBottomLayoutActive": {
      "expression": "ctx.graph.graphModel.config.layout.options.indexOf('TopToBottom')>-1"
    },
    "cmdGcRightToLeftLayoutActive": {
      "expression": "ctx.graph.graphModel.config.layout.options.indexOf('RightToLeft')>-1"
    },
    "cmdGcLeftToRightLayoutActive": {
      "expression": "ctx.graph.graphModel.config.layout.options.indexOf('LeftToRight')>-1"
    },
    "cmdGcBottomToTopLayoutActive": {
      "expression": "ctx.graph.graphModel.config.layout.options.indexOf('BottomToTop')>-1"
    },
    "cmdGcOrganicLayoutActive": {
      "expression": "ctx.graph.graphModel.config.layout.options.indexOf('Organic')>-1 && ctx.graph.graphModel.config.layout.layoutMode==='IncUpdateLayout'"
    },
    "cmdGcBalloonLayoutActive": {
      "expression": "ctx.graph.graphModel.config.layout.options.indexOf('Balloon')>-1 && ctx.graph.graphModel.config.layout.layoutMode==='IncUpdateLayout'"
    },
    "cmdGcSnakeLayoutActive": {
      "expression": "ctx.graph.graphModel.config.layout.options.indexOf('Snake')>-1 && ctx.graph.graphModel.config.layout.layoutMode==='IncUpdateLayout'"
    },
    "cmdGcIncrementalLayoutActive": {
      "expression": "ctx.graph.graphModel.config.layout.options.indexOf('Incremental')>-1 && ctx.graph.graphModel.config.layout.layoutMode==='IncUpdateLayout'"
    },
    "cmdGcLayoutCommandGroupSelected": {
      "expression": "ctx.graph.graphModel.config.layout.defaultOption"
    },
    "cmdGcTopToBottomLayoutSelected": {
      "expression": "ctx.graph.graphModel.config.layout.defaultOption.indexOf('TopToBottom')>-1"
    },
    "cmdGcRightToLeftLayoutSelected": {
      "expression": "ctx.graph.graphModel.config.layout.defaultOption.indexOf('RightToLeft')>-1"
    },
    "cmdGcLeftToRightLayoutSelected": {
      "expression": "ctx.graph.graphModel.config.layout.defaultOption.indexOf('LeftToRight')>-1"
    },
    "cmdGcBottomToTopLayoutSelected": {
      "expression": "ctx.graph.graphModel.config.layout.defaultOption.indexOf('BottomToTop')>-1"
    },
    "cmdGcOrganicLayoutSelected": {
      "expression": "ctx.graph.graphModel.config.layout.defaultOption.indexOf('Organic')>-1"
    },
    "cmdGcBalloonLayoutSelected": {
      "expression": "ctx.graph.graphModel.config.layout.defaultOption.indexOf('Balloon')>-1"
    },
    "cmdGcSnakeLayoutSelected": {
      "expression": "ctx.graph.graphModel.config.layout.defaultOption.indexOf('Snake')>-1"
    },
    "cmdGcIncrementalLayoutSelected": {
      "expression": "ctx.graph.graphModel.config.layout.defaultOption.indexOf('Incremental')>-1"
    },
    "viewerLicenceMockup": {
      "expression": "ctx.viewer && ctx.viewer.licLevel && ctx.viewer.licLevel===3"
    },
    "viewerLicenceOnOrAboveStandard": {
      "expression": "ctx.viewer && ctx.viewer.licLevel && ctx.viewer.licLevel>=1"
    },
    "isInACESublocation": {
      "expression": "ctx.sublocation.nameToken==='com.siemens.splm.client.occmgmt:OccurrenceManagementSubLocation'"
    },
    "allOffCommandVisibility": {
      "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed"
    },
    "allOnCommandVisibility": {
      "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed"
    },
    "isViewerIn3DMode": {
      "expression": "commandContext.viewerAtomicData.viewerViewMode === 'VIEWER3D'"
    },
    "isViewerRevealed": {
      "expression": "commandContext.viewerAtomicData.isViewerRevealed"
    },
    "isViewerRevealedAndIn3DMode": {
      "expression": "commandContext.viewerAtomicData.isViewerRevealed && commandContext.viewerAtomicData.viewerViewMode === 'VIEWER3D'"
    },
    "isViewerRevealedAndIn3DModeWithLicenseAboveBase": {
      "expression": "conditions.isViewerRevealedAndIn3DMode && ctx.viewer && ctx.viewer.licLevel && ctx.viewer.licLevel > 0"
    },
    "useTransparencySelectionDisplay": {
      "expression": "commandContext.viewerAtomicData.viewerPreference.AWC_visSelectionDisplay"
    },
    "viewOrientationCommandVisibility": {
      "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed"
    },
    "selectedOffCommandVisibility": {
      "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed && commandContext.viewerAtomicData.selectedCsids && commandContext.viewerAtomicData.selectedCsids.indexOf('') === -1 && commandContext.viewerAtomicData.selectedCsids.length > 0 && commandContext.viewerAtomicData.selectedModelObjects[0].uid !== commandContext.occmgmtContext.openedElement.uid && commandContext.viewerAtomicData.isSelectedOffVisible"
    },
    "selectedOnCommandVisibility": {
      "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed && commandContext.viewerAtomicData.selectedCsids && commandContext.viewerAtomicData.selectedCsids.indexOf('') === -1 && commandContext.viewerAtomicData.selectedCsids.length > 0 && commandContext.viewerAtomicData.selectedModelObjects[0].uid !== commandContext.occmgmtContext.openedElement.uid && commandContext.viewerAtomicData.isSelectedOnVisible"
    },
    "selectContextCommandVisibility": {
      "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed && commandContext.viewerAtomicData.selectedModelObjects && commandContext.viewerAtomicData.selectedCsids.length > 0 && commandContext.viewerAtomicData.selectedCsids.indexOf('') === -1 && commandContext.viewerAtomicData.selectedCsids.length === 1 && commandContext.viewerAtomicData.selectedModelObjects[0].uid === commandContext.occmgmtContext.openedElement.uid"
    },
    "fitCommandVisibility": {
      "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed && (!commandContext.viewerAtomicData.AllInvisibleCSIDs || commandContext.viewerAtomicData.AllInvisibleCSIDs.indexOf('') === -1 || (commandContext.viewerAtomicData.AllInvisibleExceptionCSIDs && commandContext.viewerAtomicData.AllInvisibleExceptionCSIDs.length > 0))"
    },
    "selectedOnlyCommandVisibility": {
      "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed && commandContext.viewerAtomicData.selectedModelObjects && commandContext.viewerAtomicData.selectedModelObjects.length > 0 && commandContext.viewerAtomicData.selectedCsids.indexOf('') === -1 && commandContext.viewerAtomicData.selectedModelObjects[0].uid !== commandContext.occmgmtContext.openedElement.uid"
    },
    "isLogicalNotSelected": {
      "expression": "!commandContext.viewerAtomicData.isLogicalSelected"
    },
    "isRotate": {
      "expression": "commandContext.viewerAtomicData.viewerPreference.AWC_visNavigationMode==='ROTATE'"
    },
    "isPan": {
      "expression": "commandContext.viewerAtomicData.viewerPreference.AWC_visNavigationMode==='PAN'"
    },
    "isZoom": {
      "expression": "commandContext.viewerAtomicData.viewerPreference.AWC_visNavigationMode==='ZOOM'"
    },
    "isAreaSelect": {
      "expression": "commandContext.viewerAtomicData.IsNavigationModeAreaSelect===true"
    },
    "enableAreaSelect": {
      "expression": "conditions.isMMVDisabledForView && conditions.isLogicalNotSelected"
    },
    "isMMVDisabledForView": {
      "expression": "!commandContext.viewerAtomicData.isMMVEnabledForView"
    },
    "isUniversalViewerRevealedAndIn3DMode": {
      "expression": "ctx.awUniversalViewer.isViewerRevealed && ctx.awUniversalViewer.viewerViewMode === 'VIEWER3D'"
    },
    "removeAnalysisResultCommandVisibility": {
      "expression": "conditions.isViewerIn3DMode && conditions.isViewerRevealed && conditions.isLogicalNotSelected"
    },
    "hasReferenceListNotLoaded": {
      "expression": "ctx.selected && ctx.selected.type==='SnapShotViewData' && !ctx.selected.props.ref_names"
    },
    "hasPVData": {
      "expression": {
        "$or": [
          {
            "$source": "conditions.hasReferenceListNotLoaded",
            "$query": {
              "$eq": true
            }
          },
          {
            "$and": [
              {
                "$source": "conditions.hasReferenceListNotLoaded",
                "$query": {
                  "$eq": false
                }
              },
              {
                "$source": "ctx.selected",
                "$query": {
                  "$all": {
                    "$source": "props.ref_names",
                    "$query": {
                      "$in": [
                        "RootContext"
                      ]
                    }
                  }
                }
              }
            ]
          }
        ]
      }
    },
    "isHostingDisabledWithSnapshotViewData": {
      "expression": "ctx.selected && ctx.selected.type==='SnapShotViewData' && !ctx.aw_hosting_enabled"
    },
    "isViewerOptionEnabedIn3DMode": {
      "expression": "conditions.isViewerRevealedAndIn3DMode  && !commandContext.viewerAtomicData.isExplodeViewVisible"
    },
    "rotatePdfActive": {
      "expression": "commandContext.type === 'aw-pdf-viewer'"
    },
    "rotateCmdVisible": {
      "expression": "commandContext.type === 'aw-image-viewer' || commandContext.type === 'aw-pdf-viewer'"
    },
    "rotateImageActive": {
      "expression": "commandContext.type === 'aw-image-viewer'"
    },
    "uvTextWordWrapCmdVisible": {
      "expression": "ctx.viewerContext.showWordWrap && ctx.viewerContext.isTextViewer"
    },
    "uvTextWordWrapCmdSelected": {
      "expression": "ctx.viewerContext.wordWrapped"
    },
    "Awp0OpenVVICmdCond": {
      "expression": "ctx.selected && ctx.visibleServerCommands.Awp0OpenVVI"
    },
    "showHomeFolderVisibility": {
      "expression": "ctx.showHomeFolderDisabled !== true"
    },
    "Awp0UnPinObjectVisible": {
      "expression": "ctx.visibleServerCommands.Awp0UnPinObject"
    },
    "Awp0PinObjectVisible": {
      "expression": "ctx.visibleServerCommands.Awp0PinObject && ctx.mselected.length === 1"
    }
  },
  "i18n": {
    "digitalAssetsPanelTitle": [
      "AdobeMessages"
    ],
    "imagePanelTitle": [
      "AdobeMessages"
    ],
    "cmdDeleteDigitalAsset": [
      "AdobeMessages"
    ],
    "adobe_cell_commands_updatesList": [
      "AdobeMessages"
    ],
    "cmdReplaceDigitalAsset": [
      "AdobeMessages"
    ],
    "showObjectCell": [
      "AdobeMessages"
    ],
    "adobe_cell_commands_inUseList": [
      "AdobeMessages"
    ],
    "DigitalAssetsPanelDesc": [
      "AdobeMessages"
    ],
    "ImagePanelDesc": [
      "AdobeMessages"
    ],
    "cmdReplaceDigitalAssetDesc": [
      "AdobeMessages"
    ],
    "cmdDeleteDigitalAssetDesc": [
      "AdobeMessages"
    ],
    "showObjectCellDesc": [
      "AdobeMessages"
    ],
    "notificationForExportRInB": [
      "ExcelRoundTripMessages"
    ],
    "exportImportCmdTitle": [
      "ExcelRoundTripMessages"
    ],
    "exportCmdTitle": [
      "ExcelRoundTripMessages"
    ],
    "importCmdTitle": [
      "ExcelRoundTripMessages"
    ],
    "arm0_exportCommands": [
      "ExcelRoundTripMessages"
    ],
    "Arm0ExportImportDesc": [
      "ExcelRoundTripMessages"
    ],
    "Arm0ExportDesc": [
      "ExcelRoundTripMessages"
    ],
    "Arm0ImportExcelDesc": [
      "ExcelRoundTripMessages"
    ],
    "deletePropCmdTitle": [
      "ExcelRoundTripMessages"
    ],
    "addColumns": [
      "ExcelRoundTripMessages"
    ],
    "Arm0SelectedColmnsSubAddCmdDesc": [
      "ExcelRoundTripMessages"
    ],
    "exportMoveUpCommandTitle": [
      "ZeroCompileCommandMessages"
    ],
    "exportMoveDownCommandTitle": [
      "ZeroCompileCommandMessages"
    ],
    "Arm0MoveUpExcelColumnDesc": [
      "ExcelRoundTripMessages"
    ],
    "Arm0MoveDownExcelColumnDesc": [
      "ExcelRoundTripMessages"
    ],
    "addToFavoritesCommandTitle": [
      "FavoritesMessages"
    ],
    "removeFromFavoritesCommandTitle": [
      "FavoritesMessages"
    ],
    "Awp0AddToFavoritesDesc": [
      "FavoritesMessages"
    ],
    "Awp0RemoveFromFavoritesDesc": [
      "FavoritesMessages"
    ],
    "HostingSetRevisionRule": [
      "hostingMessages"
    ],
    "revRuleChangeSucess": [
      "hostingMessages"
    ],
    "revRuleChangeFailed": [
      "hostingMessages"
    ],
    "Awp0AddComponentHostedDesc": [
      "hostingMessages"
    ],
    "Awp0OpenHostedDesc": [
      "hostingMessages"
    ],
    "replaceFileCommandTitle": [
      "ReplaceFileMessages"
    ],
    "InvalidSelectedObject": [
      "ReplaceFileMessages"
    ],
    "AsynUploadInProgress": [
      "ReplaceFileMessages"
    ],
    "PlatformNotSupported": [
      "ReplaceFileMessages"
    ],
    "Awp0ReplaceDatasetDesc": [
      "ReplaceFileMessages"
    ],
    "replaceNoValidTarget": [
      "ReplaceFileMessages"
    ],
    "Awp0EnableRedLineMode": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0DisableRedLineMode": [
      "ZeroCompileCommandMessages"
    ],
    "profile": [
      "UIMessages"
    ],
    "QuickAccessTitle": [
      "ZeroCompileCommandMessages"
    ],
    "checkoutTitle": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CopyFileLinkTitle": [
      "ZeroCompileCommandMessages"
    ],
    "copyDownloadableFileUrlSuccessful": [
      "ZeroCompileCommandMessages"
    ],
    "copyDownloadableFileUrlFailure": [
      "ZeroCompileCommandMessages"
    ],
    "checkinTitle": [
      "ZeroCompileCommandMessages"
    ],
    "checkinPartialSuccessMultiple": [
      "ZeroCompileCommandMessages"
    ],
    "checkinFailure": [
      "ZeroCompileCommandMessages"
    ],
    "checkoutPartialSuccessMultiple": [
      "ZeroCompileCommandMessages"
    ],
    "checkoutFailure": [
      "ZeroCompileCommandMessages"
    ],
    "cancelCheckoutPartialSuccessMultiple": [
      "ZeroCompileCommandMessages"
    ],
    "cancelCheckoutFailure": [
      "ZeroCompileCommandMessages"
    ],
    "cancelCheckoutSuccess": [
      "ZeroCompileCommandMessages"
    ],
    "saveEditsTitle": [
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages"
    ],
    "cancelEditsTitle": [
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages"
    ],
    "Awp0ShowSaveAsTitle": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ShowReviseTitle": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CutTitle": [
      "ZeroCompileCommandMessages"
    ],
    "cutSingleSuccessful": [
      "ZeroCompileCommandMessages"
    ],
    "cutMultipleSuccessful": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0OpenInNewTabTitle": [
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages"
    ],
    "Awp0OpenInNewWindowTitle": [
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages"
    ],
    "Awp0OpenInRACTitle": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CommandLabelToggleTitle": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0StartEditSummaryTitle": [
      "ZeroCompileCommandMessages"
    ],
    "awp0_addProfilePictureCommands": [
      "AddProfilePictureMessages"
    ],
    "selectAll": [
      "ZeroCompileCommandMessages"
    ],
    "clearSelections": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ShareURLTitle": [
      "ZeroCompileCommandMessages"
    ],
    "copySingleSuccessful": [
      "ZeroCompileCommandMessages"
    ],
    "copyMultipleSuccessful": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CopyTitle": [
      "ZeroCompileCommandMessages"
    ],
    "dataSetCannotBeDownloaded": [
      "ZeroCompileCommandMessages"
    ],
    "singleObjectWasDownloadedMessage": [
      "ZeroCompileCommandMessages"
    ],
    "multipleObjectsWereDownloadedMessage": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0AddObjectTitle": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0DeleteCommandDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CreateAlternateIdTitle": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CreateAliasIdTitle": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CreateDispRuleTitle": [
      "ZeroCompileCommandMessages"
    ],
    "singleDeleteConfirmationMessage": [
      "ZeroCompileCommandMessages"
    ],
    "deleteSuccessMessage": [
      "ZeroCompileCommandMessages"
    ],
    "deleteObjectsPartialSuccessMultiple": [
      "ZeroCompileCommandMessages"
    ],
    "deleteSingleFailureMessage": [
      "ZeroCompileCommandMessages"
    ],
    "deleteSingleFailureAskCutMessage": [
      "ZeroCompileCommandMessages"
    ],
    "deleteMultipleFailureMessage": [
      "ZeroCompileCommandMessages"
    ],
    "arrangeShowAll": [
      "ZeroCompileCommandMessages"
    ],
    "arrangeShowCommon": [
      "ZeroCompileCommandMessages"
    ],
    "arrangeMoveUp": [
      "ZeroCompileCommandMessages"
    ],
    "arrangeMoveDown": [
      "ZeroCompileCommandMessages"
    ],
    "arrangeViewConfigs": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ExportToExcelTitle": [
      "ZeroCompileCommandMessages"
    ],
    "pasteSuccessMessage": [
      "ZeroCompileCommandMessages"
    ],
    "pasteMultipleSuccessMessage": [
      "ZeroCompileCommandMessages"
    ],
    "comfyLayout": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ManageGroup": [
      "ZeroCompileCommandBaseMessages"
    ],
    "Awp0ShareGroup": [
      "ZeroCompileCommandBaseMessages"
    ],
    "Awp0ViewGroup": [
      "ZeroCompileCommandBaseMessages"
    ],
    "helpTitle": [
      "ZeroCompileCommandBaseMessages"
    ],
    "helpAboutTitle": [
      "ZeroCompileCommandBaseMessages"
    ],
    "aw_staticToolsAndInfo": [
      "ZeroCompileCommandBaseMessages"
    ],
    "aw_userLink": [
      "ZeroCompileCommandBaseMessages"
    ],
    "aw_toolbarRight": [
      "ZeroCompileCommandBaseMessages"
    ],
    "aw_contextMenu2": [
      "ZeroCompileCommandBaseMessages"
    ],
    "modelObjectObjectNavigationCellListActionCommands": [
      "ZeroCompileCommandBaseMessages"
    ],
    "modelObjectNavigationBreadCrumbCellListActionCommands": [
      "ZeroCompileCommandBaseMessages"
    ],
    "aw_workArea_right": [
      "ShowObjectMessages"
    ],
    "aw_objectSet": [
      "ZeroCompileCommandBaseMessages"
    ],
    "arrangeCommandbar": [
      "ZeroCompileCommandBaseMessages"
    ],
    "selectionMode": [
      "ZeroCompileCommandMessages"
    ],
    "singleObjDeleteConfirmationMessage": [
      "ZeroCompileCommandMessages"
    ],
    "exportAddPropertiesTitle": [
      "ZeroCompileCommandMessages"
    ],
    "arrangeShowAllDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0RedLineModeDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0GoHomeDesc": [
      "GoHomeCommandMessages"
    ],
    "cmdViewProfileDesc": [
      "UIMessages"
    ],
    "cmdQuickAccessDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CutDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CancelCheckoutDesc": [
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages"
    ],
    "Awp0CheckinDesc": [
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages"
    ],
    "Awp0ShowObjectDesc": [
      "ShowObjectMessages"
    ],
    "Awp0ShowSaveAsDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ShowReviseDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0OpenInNewWindowDesc": [
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages"
    ],
    "Awp0ShowObjectCellDatasetDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ViewFileDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0NavigateObjectDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0StartEditSummaryDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0StartEditTableDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CancelEditsPWADesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CommandLabelToggleDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0AddProfilePictureDesc": [
      "AddProfilePictureMessages"
    ],
    "Awp0ChangePasswordDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0SelectAllDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0DeselectAllDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0EnableMultiSelectDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ShowCreateObjectDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ShowAddObjectDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0DeleteDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CopyDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CopyDownloadLinkDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0PasteDesc": [
      "ZeroCompileCommandMessages"
    ],
    "arrangeResetDesc": [
      "ZeroCompileCommandMessages"
    ],
    "arrangeMoveUpDesc": [
      "ZeroCompileCommandMessages"
    ],
    "arrangeMoveDownDesc": [
      "ZeroCompileCommandMessages"
    ],
    "arrangeAddColumnsDesc": [
      "ZeroCompileCommandMessages"
    ],
    "arrangeRemoveColumnsDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ChangeOwnerDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ShowCompactLayoutDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ShowComfyLayoutDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CloseCommandPanelDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ViewGroupDesc": [
      "ZeroCompileCommandBaseMessages"
    ],
    "Awp0PasteGroupDesc": [
      "ZeroCompileCommandBaseMessages"
    ],
    "Awp0GoFavoritesDesc": [
      "ZeroCompileCommandBaseMessages"
    ],
    "Awp0HelpDesc": [
      "ZeroCompileCommandBaseMessages"
    ],
    "Awp0HelpGroupDesc": [
      "ZeroCompileCommandBaseMessages"
    ],
    "Awp0HelpAboutDesc": [
      "ZeroCompileCommandBaseMessages"
    ],
    "openArrangePanelDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CheckoutDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0SignOutDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0OpenInNewTabDesc": [
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages"
    ],
    "Awp0OpenInRACDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ShareURLDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0StartEditDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0OpenGroupDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0SaveEditsDesc": [
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages"
    ],
    "Awp0ObjectInfoDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0EditGroupDesc": [
      "ZeroCompileCommandBaseMessages",
      "ZeroCompileCommandBaseMessages"
    ],
    "Awp0ManageGroupDesc": [
      "ZeroCompileCommandBaseMessages"
    ],
    "Awp0NewGroupDesc": [
      "ZeroCompileCommandBaseMessages"
    ],
    "Awp0ShareGroupDesc": [
      "ZeroCompileCommandBaseMessages"
    ],
    "Awp0CreateAlternateIdDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CreateAliasIdDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CreateDispRuleDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0IdDispRuleAdminInfoDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ExportToExcelDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0MoveUpExcelColumnDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0OpenInNewTabCellTitleDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0OpenInNewWindowCellTitleDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0MoveDownExcelColumnDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0ExportSelectedColumnsAddDesc": [
      "ZeroCompileCommandMessages"
    ],
    "arrangeViewConfigsDesc": [
      "ZeroCompileCommandMessages"
    ],
    "deleteNamedColumnConfigDesc": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0CancelEdits": [
      "tcuijsTooltipMessages",
      "tcuijsTooltipMessages"
    ],
    "showObjectCommandTitle": [
      "XRTMessages"
    ],
    "ADD_BUTTON_TITLE": [
      "BaseMessages",
      "BaseMessages"
    ],
    "arrangeMenu": [
      "treeTableMessages"
    ],
    "homeCommandTitle": [
      "UIMessages"
    ],
    "signOut": [
      "UIMessages"
    ],
    "save": [
      "XRTMessages"
    ],
    "newTabTitle": [
      "awAddDirectiveMessages"
    ],
    "navigationConfirmationSingle": [
      "XRTMessages"
    ],
    "discard": [
      "XRTMessages"
    ],
    "objectInfoLabel": [
      "XRTMessages"
    ],
    "taskbarFullScreen": [
      "UIElementsMessages",
      "UIElementsMessages"
    ],
    "taskbarFullScreenExit": [
      "UIElementsMessages"
    ],
    "REMOVE_BUTTON_TITLE": [
      "BaseMessages",
      "BaseMessages"
    ],
    "commandPanel": [
      "UIElementsMessages"
    ],
    "RESET_TEXT": [
      "BaseMessages"
    ],
    "MOVE_UP_BUTTON_TITLE": [
      "BaseMessages"
    ],
    "MOVE_DOWN_BUTTON_TITLE": [
      "BaseMessages"
    ],
    "showObjectCommandDownloadTitle": [
      "XRTMessages"
    ],
    "objectNavigationSubLocationTitle": [
      "XRTMessages"
    ],
    "startEdit": [
      "XRTMessages"
    ],
    "delete": [
      "ZeroCompileCommandMessages"
    ],
    "OpenGroupCommandFooterDesc": [
      "ZeroCompileCommandMessages"
    ],
    "favoritesTitle": [
      "ZeroCompileCommandBaseMessages"
    ],
    "AddProfilePicture": [
      "AddProfilePictureMessages"
    ],
    "Awp0ChangeOwner": [
      "Awp0ChangeOwnerMessages"
    ],
    "Awp0EditGroup": [
      "ZeroCompileCommandBaseMessages",
      "ZeroCompileCommandBaseMessages"
    ],
    "Awp0PasteGroup": [
      "ZeroCompileCommandBaseMessages"
    ],
    "Awp0ChangePasswordTitle": [
      "ZeroCompileCommandMessages"
    ],
    "COMMON_USER_SETTING_BAR_CLOSE": [
      "commonFrameMessages"
    ],
    "cancelCheckoutTitle": [
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages"
    ],
    "Awp0FullScreenDesc": [
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages"
    ],
    "Awp0MultipleFileDwnldTitle": [
      "ZeroCompileCommandMessages"
    ],
    "compactLayout": [
      "ZeroCompileCommandMessages"
    ],
    "cancel": [
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages"
    ],
    "Awp0SaveEditsGroup": [
      "ZeroCompileCommandBaseMessages",
      "ZeroCompileCommandBaseMessages"
    ],
    "showFileVersions": [
      "ZeroCompileCommandMessages"
    ],
    "showFileVersionsDesc": [
      "ZeroCompileCommandMessages"
    ],
    "editLocalizationSingle": [
      "MultiLanguagePropertyMessages"
    ],
    "editLocalizationSingleDesc": [
      "MultiLanguagePropertyMessages"
    ],
    "addorRemoveLocales": [
      "MultiLanguagePropertyMessages"
    ],
    "addorRemoveLocalesDesc": [
      "MultiLanguagePropertyMessages"
    ],
    "removeLocale": [
      "MultiLanguagePropertyMessages"
    ],
    "removeLocaleDesc": [
      "MultiLanguagePropertyMessages"
    ],
    "addObjectPanelPinButtonToolTip": [
      "awAddDirectiveMessages"
    ],
    "addObjectPanelUnpinButtonToolTip": [
      "awAddDirectiveMessages"
    ],
    "plStatsTitle": [
      "plStatsMessages"
    ],
    "plStatsDesc": [
      "plStatsMessages"
    ],
    "Awp0ViewFileTitle": [
      "ZeroCompileCommandMessages",
      "ZeroCompileCommandMessages"
    ],
    "FileUploadTitle": [
      "ZeroCompileCommandMessages"
    ],
    "FileUploadDesc": [
      "ZeroCompileCommandMessages"
    ],
    "MORE_LINK_TEXT": [
      "BaseMessages"
    ],
    "removeProjectTitle": [
      "ProjmgmtConstants"
    ],
    "aw_removeProjectCellCommandAction": [
      "ProjmgmtConstants"
    ],
    "Awp0RemoveProjectsCellDesc": [
      "ProjmgmtConstants"
    ],
    "uiwidgetAddcmdDesc": [
      "awAddDirectiveMessages"
    ],
    "uiwidget_projectSectionCommands": [
      "awAddDirectiveMessages"
    ],
    "addProjectButtonTitle": [
      "awAddDirectiveMessages"
    ],
    "uvCheckoutTitle": [
      "Awp0ViewerGalleryMessages"
    ],
    "uvCheckinTitle": [
      "Awp0ViewerGalleryMessages"
    ],
    "aw_viewerRightSide": [
      "Awp0ViewerGalleryMessages"
    ],
    "aw_universalViewerLink": [
      "Awp0ViewerGalleryMessages"
    ],
    "uvCheckoutDesc": [
      "Awp0ViewerGalleryMessages"
    ],
    "Awp0ShowObjectForUVpDesc": [
      "Awp0ViewerGalleryMessages"
    ],
    "Awp0ViewFileForUVDesc": [
      "Awp0ViewerGalleryMessages"
    ],
    "Awp0ShowObjectTitle": [
      "ShowObjectMessages"
    ],
    "compareTitle": [
      "UIMessages"
    ],
    "objectSetCompareViewModeDesc": [
      "UIMessages"
    ],
    "showListViewText": [
      "XRTMessages"
    ],
    "showTableViewText": [
      "XRTMessages"
    ],
    "showImageViewText": [
      "XRTMessages"
    ],
    "Awp0TablePropertyDuplicateTitle": [
      "ZeroCompileCommandMessages"
    ],
    "Awp0StartEditTitle": [
      "ZeroCompileCommandMessages"
    ],
    "startEditCommandTitle": [
      "GraphMessages"
    ],
    "exitEditCommandTitle": [
      "GraphMessages"
    ],
    "legendCommandTitle": [
      "GraphMessages"
    ],
    "applyLayout": [
      "GraphMessages"
    ],
    "topToBottomLayout": [
      "GraphMessages"
    ],
    "rightToLeftLayout": [
      "GraphMessages"
    ],
    "leftToRightLayout": [
      "GraphMessages"
    ],
    "bottomToTopLayout": [
      "GraphMessages"
    ],
    "organicLayout": [
      "GraphMessages"
    ],
    "balloonLayout": [
      "GraphMessages"
    ],
    "snakeLayout": [
      "GraphMessages"
    ],
    "incrementalLayout": [
      "GraphMessages"
    ],
    "UseTransparencyOnTitle": [
      "Awv0threeDViewerMessages"
    ],
    "UseTransparencyOffTitle": [
      "Awv0threeDViewerMessages"
    ],
    "NavigationRotateTitle": [
      "Awv0threeDViewerMessages"
    ],
    "NavigationPanTitle": [
      "Awv0threeDViewerMessages"
    ],
    "NavigationZoomTitle": [
      "Awv0threeDViewerMessages"
    ],
    "AreaSelectTitle": [
      "Awv0threeDViewerMessages"
    ],
    "ViewerSettingsPanelTitle": [
      "Awv0threeDViewerMessages"
    ],
    "standardViews": [
      "Awv0threeDViewerMessages"
    ],
    "visibilityControls": [
      "Awv0threeDViewerMessages"
    ],
    "isometric": [
      "Awv0threeDViewerMessages"
    ],
    "trimetric": [
      "Awv0threeDViewerMessages"
    ],
    "top": [
      "Awv0threeDViewerMessages"
    ],
    "front": [
      "Awv0threeDViewerMessages"
    ],
    "right": [
      "Awv0threeDViewerMessages"
    ],
    "back": [
      "Awv0threeDViewerMessages"
    ],
    "bottom": [
      "Awv0threeDViewerMessages"
    ],
    "left": [
      "Awv0threeDViewerMessages"
    ],
    "allOn": [
      "Awv0threeDViewerMessages"
    ],
    "allOff": [
      "Awv0threeDViewerMessages"
    ],
    "selectedOff": [
      "Awv0threeDViewerMessages"
    ],
    "selectedOn": [
      "Awv0threeDViewerMessages"
    ],
    "selectedOnly": [
      "Awv0threeDViewerMessages"
    ],
    "contextOff": [
      "Awv0threeDViewerMessages"
    ],
    "contextOn": [
      "Awv0threeDViewerMessages"
    ],
    "contextOnly": [
      "Awv0threeDViewerMessages"
    ],
    "selectContext": [
      "Awv0threeDViewerMessages"
    ],
    "fit": [
      "Awv0threeDViewerMessages"
    ],
    "pickFilter": [
      "Awv0threeDViewerMessages"
    ],
    "3DNavigation": [
      "Awv0threeDViewerMessages"
    ],
    "removeAnalysisResult": [
      "Awv0threeDViewerMessages"
    ],
    "removeAnalysisResultCancelButtonText": [
      "Awv0threeDViewerMessages"
    ],
    "removeAnalysisResultRemoveButtonText": [
      "Awv0threeDViewerMessages"
    ],
    "removeAnalysisResultMessage": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0PanDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0RotateDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0ZoomDesc": [
      "Awv0threeDViewerMessages"
    ],
    "ViewNavigationGroupDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0UseTransparencyDesc": [
      "Awv0threeDViewerMessages"
    ],
    "MeasurementFilterGroupDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0ViewerSettingsDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0ViewOrientationGroupDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0OrientIsometricDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0OrientTrimetricDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0OrientTopDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0OrientFrontDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0OrientRightDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0OrientBackDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0OrientBottomDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0OrientLeftDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0ViewerConvenienceCommandGroupDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0AllOnDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0AllOffDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0SelectedOffDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0SelectedOnDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0SelectedOnlyDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0SelectContextDesc": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0FitDesc": [
      "Awv0threeDViewerMessages"
    ],
    "threeDPageTitle": [
      "Awv0threeDViewerMessages"
    ],
    "Close": [
      "Awv0threeDViewerMessages"
    ],
    "Awv0Close3DSubCommandsToolbarDesc": [
      "Awv0threeDViewerMessages"
    ],
    "rotateClockwise": [
      "ImageViewerMessages"
    ],
    "rotateCounterclockwise": [
      "ImageViewerMessages"
    ],
    "rotateCWDesc": [
      "ImageViewerMessages"
    ],
    "rotateCCWDesc": [
      "ImageViewerMessages"
    ],
    "uvTextWordWrapTitle": [
      "TextViewerMessages"
    ],
    "uvTextWordWrapDesc": [
      "TextViewerMessages"
    ],
    "openVVICommandTitle": [
      "VisualizationMessages"
    ],
    "Awp0OpenVVIDesc": [
      "VisualizationMessages"
    ],
    "homeFolderTitle": [
      "GatewayMessages"
    ],
    "unPinObjectCommandTitle": [
      "GatewayMessages"
    ],
    "pinObjectCommandTitle": [
      "GatewayMessages"
    ],
    "unPinObjectFailed": [
      "GatewayMessages"
    ],
    "pinObjectFailed": [
      "GatewayMessages"
    ],
    "Awp0ShowHomeFolderDesc": [
      "GatewayMessages"
    ],
    "Awp0PinObjectDesc": [
      "GatewayMessages"
    ],
    "Awp0UnPinObject": [
      "tcgatewayjsTooltipMessages"
    ],
    "uiCompCommandTitle": [
      "uiCompMessages"
    ],
    "uiCompCommandDesc": [
      "uiCompMessages"
    ]
  },
  "functions": {
    "getObjects": {
      "functionName": "getObjects",
      "parameters": [
        "{{data.objects}}"
      ]
    },
    "createInputForDSM": {
      "functionName": "createInputForDSM",
      "parameters": [
        "{{ctx.selected}}",
        "{{data}}"
      ]
    },
    "isPlatformSupported": {
      "functionName": "isPlatformSupported",
      "parameters": []
    },
    "updateAddPanelContext": {
      "functionName": "updateAddPanelContext",
      "parameters": [
        "{{data.addObjectContext}}",
        "{{commandContext}}"
      ]
    },
    "cutInputs": {
      "functionName": "cutInputs",
      "parameters": []
    },
    "adaptedRelatedModifiedCutInput": {
      "functionName": "adaptedRelatedModifiedInput",
      "parameters": []
    },
    "adaptedRelatedModifiedPasteInput": {
      "functionName": "adaptedInput",
      "parameters": [
        "{{ctx.selected}}"
      ]
    },
    "adaptedClipboardObjectsInput": {
      "functionName": "adaptedInput",
      "parameters": [
        "{{ctx.awClipBoardProvider}}"
      ]
    },
    "getDsmDownloadInfo": {
      "functionName": "getDsmDownloadInfo",
      "parameters": [
        "{{data.datasetModelObject}}",
        "{{data.modelObject}}"
      ]
    },
    "getImanDsmDownloadInfo": {
      "functionName": "getDsmDownloadInfo",
      "parameters": [
        "{{data.datasetModelObject}}",
        "{{data.downloadedFile.tickets[0]}}"
      ]
    },
    "getRemoveFileInputs": {
      "functionName": "getRemoveFileInputs",
      "parameters": [
        "{{commandContext.selectionModel.selectionData}}",
        "{{data.datasetTypesWithDefaultRelInfo}}"
      ]
    },
    "getDatasetTypesWithDefaultRelationInput": {
      "functionName": "getDatasetTypesWithDefaultRelationInput",
      "parameters": [
        "{{commandContext.selectionModel.selectionData}}"
      ]
    }
  },
  "messages": {
    "exportGenericFailureMessage": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "notificationForExportRunInBackgroundMsg": {
      "messageType": "INFO",
      "messageText": "{{i18n.notificationForExportRInB}}"
    },
    "revRuleChangeSucess": {
      "messageType": "INFO",
      "messageText": "{{i18n.revRuleChangeSucess}}",
      "messageTextParams": []
    },
    "revRuleChangeFailed": {
      "messageType": "ERROR",
      "messageText": "{{i18n.revRuleChangeFailed}}",
      "messageTextParams": []
    },
    "invalidInputObject": {
      "messageType": "ERROR",
      "messageText": "{{i18n.InvalidSelectedObject}}",
      "messageTextParams": [
        "null"
      ]
    },
    "uploadInProgress": {
      "messageType": "ERROR",
      "messageText": "{{i18n.AsynUploadInProgress}}",
      "messageTextParams": [
        "null"
      ]
    },
    "platformnotsupported": {
      "messageType": "INFO",
      "messageText": "{{i18n.PlatformNotSupported}}"
    },
    "dataSetCannotBeReplacedMessage": {
      "messageType": "ERROR",
      "messageText": "{{i18n.replaceNoValidTarget}}",
      "messageTextParams": [
        "{{ctx.selected.props.object_string.uiValues[0]}}"
      ]
    },
    "checkoutFailureSingle": {
      "messageType": "ERROR",
      "messageText": "{{i18n.checkoutFailure}}",
      "messageTextParams": [
        "{{ctx.mselected[0].props.object_string.uiValues[0]}}",
        "{{data.checkOutPartialErrors[0].errorValues[0].message}}"
      ]
    },
    "checkoutFailureMultiple": {
      "expression": {
        "successCount": "ctx.mselected.length - data.checkOutPartialErrors.length"
      },
      "messageType": "ERROR",
      "messageKey": "commandNotyError",
      "messageTextParams": [
        "{{expression.successCount}}",
        "{{ctx.mselected.length}}"
      ],
      "messageData": {
        "partialErrors": "{{data.checkOutPartialErrors}}"
      },
      "message": {
        "messageParam": {
          "name": "checkoutPartialSuccessMultiple"
        },
        "partialError": {
          "name": "checkoutFailure"
        }
      }
    },
    "checkinFailureSingle": {
      "messageType": "ERROR",
      "messageText": "{{i18n.checkinFailure}}",
      "messageTextParams": [
        "{{ctx.mselected[0].props.object_string.uiValues[0]}}",
        "{{data.checkinPartialErrors[0].errorValues[0].message}}"
      ]
    },
    "checkinFailureMultiple": {
      "expression": {
        "successCount": "ctx.mselected.length - data.checkinPartialErrors.length"
      },
      "messageType": "ERROR",
      "messageKey": "checkinNotyError",
      "messageTextParams": [
        "{{expression.successCount}}",
        "{{ctx.mselected.length}}"
      ],
      "messageData": {
        "partialErrors": "{{data.checkinPartialErrors}}"
      },
      "message": {
        "messageParam": {
          "name": "checkinPartialSuccessMultiple"
        },
        "partialError": {
          "name": "checkinFailure"
        }
      }
    },
    "cancelCheckoutFailureSingle": {
      "messageType": "ERROR",
      "messageText": "{{i18n.cancelCheckoutFailure}}",
      "messageTextParams": [
        "{{ctx.mselected[0].props.object_string.uiValues[0]}}",
        "{{data.cancelCheckOutPartialErrors[0].errorValues[0].message}}"
      ]
    },
    "cancelCheckoutSuccess": {
      "messageType": "INFO",
      "messageText": "{{i18n.cancelCheckoutSuccess}}",
      "messageTextParams": [
        "{{ctx.mselected.length}}",
        "{{ctx.mselected.length}}"
      ]
    },
    "cancelCheckoutFailureMultiple": {
      "expression": {
        "successCount": "ctx.mselected.length - data.cancelCheckOutPartialErrors.length"
      },
      "messageType": "ERROR",
      "messageKey": "cancelCheckoutNotyError",
      "messageTextParams": [
        "{{expression.successCount}}",
        "{{ctx.mselected.length}}"
      ],
      "messageData": {
        "partialErrors": "{{data.cancelCheckOutPartialErrors}}"
      },
      "message": {
        "messageParam": {
          "name": "cancelCheckoutPartialSuccessMultiple"
        },
        "partialError": {
          "name": "cancelCheckoutFailure"
        }
      }
    },
    "cutCommandFailure": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "cutSingleSuccessful": {
      "messageType": "INFO",
      "messageText": "{{i18n.cutSingleSuccessful}}",
      "messageTextParams": [
        "{{ctx.mselected[0].props.object_string.uiValues[0]}}",
        "{{ctx.pselected}}"
      ]
    },
    "cutMultipleSuccessful": {
      "messageType": "INFO",
      "messageText": "{{i18n.cutMultipleSuccessful}}",
      "messageTextParams": [
        "{{ctx.mselected.length}}",
        "{{ctx.pselected}}"
      ]
    },
    "copySingleSuccessful": {
      "messageType": "INFO",
      "messageText": "{{i18n.copySingleSuccessful}}",
      "messageTextParams": [
        "{{ctx.mselected[0].props.object_string.uiValues[0]}}"
      ]
    },
    "copySingleSuccessfulContextMenu": {
      "messageType": "INFO",
      "messageText": "{{i18n.copySingleSuccessful}}",
      "messageTextParams": [
        "{{commandContext.selected[0].props.object_string.uiValues[0]}}"
      ]
    },
    "copyMultipleSuccessful": {
      "messageType": "INFO",
      "messageText": "{{i18n.copyMultipleSuccessful}}",
      "messageTextParams": [
        "{{ctx.mselected.length}}"
      ]
    },
    "copyMultipleSuccessfulContextMenu": {
      "messageType": "INFO",
      "messageText": "{{i18n.copyMultipleSuccessful}}",
      "messageTextParams": [
        "{{commandContext.selected.length}}"
      ]
    },
    "dataSetCannotBeDownloadedMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.dataSetCannotBeDownloaded}}",
      "messageTextParams": [
        "{{data.datasetModelObject.props.object_string.uiValues[0]}}"
      ]
    },
    "singleObjectWasDownloaded": {
      "messageType": "INFO",
      "messageText": "{{i18n.singleObjectWasDownloadedMessage}}",
      "messageTextParams": [
        "{{data.inputModelObjects.length}}"
      ]
    },
    "multipleObjectsWereDownloaded": {
      "messageType": "INFO",
      "messageText": "{{i18n.multipleObjectsWereDownloadedMessage}}",
      "messageTextParams": [
        "{{data.inputModelObjects.length}}"
      ]
    },
    "multipleObjectsWereDownloadedFailure": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "copyDownloadableFileUrlSuccessful": {
      "messageType": "INFO",
      "messageText": "{{i18n.copyDownloadableFileUrlSuccessful}}",
      "messageTextParams": [
        "{{ctx.mselected[0].props.object_string.uiValues[0]}}"
      ]
    },
    "copyDownloadableFileUrlFailure": {
      "messageType": "INFO",
      "messageText": "{{i18n.copyDownloadableFileUrlFailure}}",
      "messageTextParams": []
    },
    "cancelEditsLeaveConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.navigationConfirmationSingle}}",
      "messageTextParams": [
        "{{ctx.selected.props.object_string.uiValues[0]}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}",
          "action": ""
        },
        {
          "option": "Discard",
          "text": "{{i18n.discard}}",
          "action": "cancelEdits"
        }
      ]
    },
    "singleFileDeleteConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.singleObjDeleteConfirmationMessage}}",
      "messageTextParams": [
        "{{commandContext.selectionModel.selectionData.selected[0].props.object_string.uiValue}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Delete",
          "text": "{{i18n.delete}}",
          "action": "getDatasetTypesWithDefaultRelation"
        }
      ]
    },
    "singleCutOrCancelCfgRevConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deleteSingleFailureAskCutMessage}}",
      "messageTextParams": [
        "{{ctx.selected.props.object_string.uiValues[0]}}",
        "{{data.deleteObjectsPartialErrors[0].errorValues[0].message}}"
      ],
      "navigationOptions": [
        {
          "option": "Cut",
          "text": "{{i18n.Awp0CutTitle}}",
          "action": "cutConfiguredRevs"
        },
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        }
      ]
    },
    "singleCutOrCancelConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deleteSingleFailureAskCutMessage}}",
      "messageTextParams": [
        "{{ctx.selected.props.object_string.uiValues[0]}}",
        "{{data.deleteObjectsPartialErrors[0].errorValues[0].message}}"
      ],
      "navigationOptions": [
        {
          "option": "Cut",
          "text": "{{i18n.Awp0CutTitle}}",
          "action": "cutConfiguredRevs"
        },
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        }
      ]
    },
    "multipleCutOrCancelConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.deleteMultipleFailureMessage}}",
      "expression": {
        "totalRemainToDelete": "objectsFailedToDelete.totalRemainToDelete",
        "totalSelected": "objectsFailedToDelete.totalSelected",
        "message": "objectsFailedToDelete.message"
      },
      "messageTextParams": [
        "{{expression.totalRemainToDelete}}",
        "{{expression.totalSelected}}",
        "{{expression.message}}"
      ],
      "messageData": {
        "partialErrors": "{{data.deleteObjectsPartialErrors}}"
      },
      "navigationOptions": [
        {
          "option": "Cut",
          "text": "{{i18n.Awp0CutTitle}}",
          "action": "cutConfiguredRevs"
        },
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}",
          "action": "refreshSelectedObject"
        }
      ]
    },
    "singleObjDeleteConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.singleObjDeleteConfirmationMessage}}",
      "messageTextParams": [
        "{{ctx.selected.props.object_string.uiValues[0]}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Delete",
          "text": "{{i18n.delete}}",
          "action": "initiateDeleteAction"
        }
      ]
    },
    "multipleDeleteConfirmationMessage": {
      "messageType": "WARNING",
      "messageText": "{{i18n.singleDeleteConfirmationMessage}}",
      "messageTextParams": [
        "{{ctx.mselected.length}}"
      ],
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.cancel}}"
        },
        {
          "option": "Delete",
          "text": "{{i18n.delete}}",
          "action": "initiateDeleteAction"
        }
      ]
    },
    "deleteObjectsSuccessfulMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.deleteSuccessMessage}}",
      "messageTextParams": [
        "{{ctx.mselected.length}}",
        "{{ctx.mselected.length}}"
      ]
    },
    "deleteObjectsSingleFailureMessage": {
      "messageType": "ERROR",
      "messageText": "{{i18n.deleteSingleFailureMessage}}",
      "messageTextParams": [
        "{{ctx.mselected[0].props.object_string.uiValues[0]}}",
        "{{data.deleteObjectsPartialErrors[0].errorValues[0].message}}"
      ]
    },
    "deleteObjectsMultipleFailureMessage": {
      "expression": {
        "failureCount": "objectsFailedToDelete.totalDeleted"
      },
      "messageType": "ERROR",
      "messageKey": "deleteObjectsNotyError",
      "messageTextParams": [
        "{{expression.failureCount}}",
        "{{ctx.mselected.length}}"
      ],
      "messageData": {
        "partialErrors": "{{data.deleteObjectsPartialErrors}}"
      }
    },
    "pasteSuccessMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.pasteSuccessMessage}}",
      "messageTextParams": [
        "{{ctx.awClipBoardProvider[0].props.object_string.uiValues[0]}}",
        "{{ctx.selected.props.object_string.uiValues[0]}}"
      ]
    },
    "pasteMultipleSuccessMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.pasteMultipleSuccessMessage}}",
      "messageTextParams": [
        "{{ctx.awClipBoardProvider.length}}",
        "{{ctx.selected.props.object_string.uiValues[0]}}"
      ]
    },
    "pasteToObjectSetSuccessMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.pasteSuccessMessage}}",
      "messageTextParams": [
        "{{data.modelTypeRelationObject.validSourceObjects[0].props.object_string.uiValues[0]}}",
        "{{ctx.selected.props.object_string.uiValues[0]}}"
      ]
    },
    "pasteToObjectSetMultipleSuccessMessage": {
      "messageType": "INFO",
      "messageText": "{{i18n.pasteMultipleSuccessMessage}}",
      "messageTextParams": [
        "{{data.modelTypeRelationObject.validSourceObjects.length}}",
        "{{ctx.selected.props.object_string.uiValues[0]}}"
      ]
    },
    "pasteToObjectSetSourceDuplicateFailureMessage": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "performCutFailure": {
      "messageType": "ERROR",
      "messageText": "{{errorCode}}"
    },
    "confirmRemoveAnalysisResult": {
      "messageType": "WARNING",
      "messageText": "{{i18n.removeAnalysisResultMessage}}",
      "navigationOptions": [
        {
          "option": "Cancel",
          "text": "{{i18n.removeAnalysisResultCancelButtonText}}"
        },
        {
          "option": "Remove",
          "text": "{{i18n.removeAnalysisResultRemoveButtonText}",
          "action": "removeAnalysisResultAction"
        }
      ]
    },
    "unpinFailure": {
      "messageType": "ERROR",
      "messageText": "{{i18n.unPinObjectFailed}}"
    },
    "pinFailure": {
      "messageType": "ERROR",
      "messageText": "{{i18n.pinObjectFailed}}"
    }
  },
  "onEvent": [
    {
      "eventId": "favorites.add",
      "action": "addFavorites"
    },
    {
      "eventId": "favorites.remove",
      "action": "removeFavorites"
    },
    {
      "eventId": "dataset.ref_listIsNull",
      "action": "getPropertyRefListSOA"
    },
    {
      "eventId": "dataset.ref_listIsNotNull",
      "action": "getDatasetObjectJS"
    },
    {
      "eventId": "dataset.getDatasetObject",
      "action": "getDatasetObjectJS"
    },
    {
      "eventId": "imanfile.originalfilenamenull",
      "action": "getOriginalFilenameSOA"
    },
    {
      "eventId": "imanfile.originalfilenamenotnull",
      "action": "getOriginalFileNameObjectsJS"
    },
    {
      "eventId": "imanfile.populateFileNames",
      "action": "populateFileNames"
    },
    {
      "eventId": "imanfile.replaceDataset",
      "action": "replaceDataset"
    },
    {
      "eventId": "imanfile.displayReplacePanel",
      "action": "replacePanelDisplay"
    },
    {
      "eventId": "replaceFile.syncronousReplace",
      "action": "nullEventCheck"
    },
    {
      "eventId": "replaceFile.isDSMEnabled",
      "action": "getPropertyRefListSOA"
    },
    {
      "eventId": "replaceFile.loadPlmdObjects",
      "action": "loadPlmdReplaceOperationData"
    },
    {
      "eventId": "replaceFile.EvaluateCondition",
      "action": "evaluateCondition"
    },
    {
      "eventId": "replaceFile.openSinglePLmdFile",
      "action": "openPlmdFile"
    },
    {
      "eventId": "dataset.typeInfoObtained",
      "action": "removeFileFromDataset"
    },
    {
      "eventId": "cut.performCutOnUnderlyingObjects",
      "action": "performCutOnUnderlyingObjects"
    },
    {
      "eventId": "cut.performCutOperation",
      "action": "performCutOperation"
    },
    {
      "eventId": "cut.getUnderlyingObjects",
      "action": "getUnderlyingObjects"
    },
    {
      "eventId": "saveEdits",
      "action": "saveEdits"
    },
    {
      "eventId": "save.performOperation",
      "action": "performSaveOperation"
    },
    {
      "eventId": "checkOutOnCancelEdits",
      "action": "checkOutOnCancelEdits"
    },
    {
      "eventId": "cancelEdits",
      "action": "cancelEdits"
    },
    {
      "eventId": "cancelEditsPreferenceCheck",
      "action": "cancelEditsPreferenceCheck"
    },
    {
      "eventId": "cancelEditsPreferenceSetTrue",
      "message": "cancelEditsLeaveConfirmationMessage"
    },
    {
      "eventId": "checkEditInProgress",
      "action": "editInProgress"
    },
    {
      "eventId": "checkEditInProgressBeforeEditLocalization",
      "action": "editInProgressBeforeEditLocalization"
    },
    {
      "eventId": "cancelEditsBeforeEditLocalization",
      "action": "cancelEditsBeforeEditLocalization"
    },
    {
      "eventId": "leaveConfirmationBeforeEditLocalization",
      "action": "leaveConfirmationBeforeEditLocalization"
    },
    {
      "eventId": "openEditLocalizationSinglePanel",
      "action": "openEditLocalizationSinglePanel"
    },
    {
      "eventId": "saveEditsAndCheckin",
      "action": "saveEditsAndCheckin"
    },
    {
      "eventId": "checkEditInProgressBeforeCheckin",
      "action": "checkEditInProgressBeforeCheckin"
    },
    {
      "eventId": "retrieveSelectedObjects",
      "action": "getSelectedObjects"
    },
    {
      "eventId": "retrieveCheckinInputs",
      "action": "getCheckinInputs"
    },
    {
      "eventId": "updateURLParam",
      "action": "updateEditStateInURL"
    },
    {
      "eventId": "checkItOut",
      "action": "performCheckout"
    },
    {
      "eventId": "checkIn",
      "action": "performCheckin"
    },
    {
      "eventId": "cancelCheckout",
      "action": "performCancelCheckout"
    },
    {
      "eventId": "leaveConfirmation.success",
      "action": "leaveConfirmation"
    },
    {
      "eventId": "cutToAwClipboard",
      "action": "cutToAwClipboard"
    },
    {
      "eventId": "datasets.getFileNamesAndTickets",
      "action": "initiateMultipleFileDownload"
    },
    {
      "eventId": "datasets.openFilesFromTickets",
      "action": "openMultipleFilesFromTickets"
    },
    {
      "eventId": "confirmFileDeleteEvent",
      "message": "singleFileDeleteConfirmationMessage"
    },
    {
      "eventId": "dataset.datasetObjectLoaded",
      "action": "getDatasetRefProperties"
    },
    {
      "eventId": "dataset.getRefListModelObject",
      "action": "getRefListModelObject"
    },
    {
      "eventId": "dataset.downloadFile",
      "action": "getDatasetTicketAndOpen"
    },
    {
      "eventId": "dataset.openFileFromTicketForDSM",
      "action": "openDatasetFileFromTicketForDSM"
    },
    {
      "eventId": "dataset.openFileFromTicket",
      "action": "openDatasetFileFromTicket"
    },
    {
      "eventId": "dataset.checkIsDSMUsable",
      "action": "checkIsDSMUsable"
    },
    {
      "eventId": "idDisplayRule.contextSet",
      "action": "launchIdDispRuleInfoPanelAction"
    },
    {
      "eventId": "dataset.getPropertyForDSM",
      "action": "getPropertyForDSM"
    },
    {
      "eventId": "dataset.downloadSelectedDatasetForDSM",
      "action": "downloadSelectedDatasetForDSM"
    },
    {
      "eventId": "dataset.getRefListCDM",
      "action": "getRefListObject"
    },
    {
      "eventId": "dataset.downloadSelectedDataset",
      "action": "downloadSelectedDataset"
    },
    {
      "eventId": "addObject.ensureFilterTypesLoaded",
      "action": "ensureFilterTypesLoaded"
    },
    {
      "eventId": "addObject.ensureFilterTypesLoaded2",
      "action": "ensureFilterTypesLoaded2"
    },
    {
      "eventId": "addObject.open",
      "action": "openAddPanel"
    },
    {
      "eventId": "addObject.openObjectSet",
      "action": "openAddPanelObjectSet"
    },
    {
      "eventId": "confirmDeleteEvent",
      "message": "singleObjDeleteConfirmationMessage"
    },
    {
      "eventId": "confirmSingleCutOrCancelEvent",
      "message": "singleCutOrCancelConfirmationMessage"
    },
    {
      "eventId": "confirmMultipleCutOrCancelEvent",
      "message": "multipleCutOrCancelConfirmationMessage"
    },
    {
      "eventId": "confirmMultipleDeleteEvent",
      "message": "multipleDeleteConfirmationMessage"
    },
    {
      "eventId": "pasteToObjectSet",
      "action": "pasteContentsFromClipboardToObjectSet"
    },
    {
      "eventId": "delete.initiateDeleteWithConfRevContext",
      "action": "performDeleteWithConfRevContext"
    },
    {
      "eventId": "delete.initiateRegularDeleteOperation",
      "action": "performUnlinkAndDelete"
    },
    {
      "eventId": "delete.initiateUnlinkDeleteOperation",
      "action": "performUnlinkAndDelete"
    },
    {
      "eventId": "delete.cutUnderlyingItemFromParent",
      "action": "cutConfRevsFromTheirItem"
    },
    {
      "eventId": "delete.haveConfRevsToCut",
      "action": "getUnderlyingObjsForConfRevs"
    },
    {
      "eventId": "performDelete",
      "action": "performDelete"
    },
    {
      "eventId": "openArrangePanelBasic",
      "action": "openArrangePanelBasic"
    },
    {
      "eventId": "getSelObjsForMultipleFileDwnld",
      "action": "getSelObjsForMultipleFileDwnld"
    },
    {
      "eventId": "getModelObjectFromVMO",
      "action": "getModelObjectFromVMO"
    },
    {
      "eventId": "dataset.getRefListForMultipleFileDwnldForDSM",
      "action": "getRefListForMultipleFileDwnldForDSM"
    },
    {
      "eventId": "dataset.getPlmdFileTicketForMultipleDwnldForDSM",
      "action": "getPlmdFileTicketForMultipleDwnldForDSM"
    },
    {
      "eventId": "dataset.hasDSMUsage",
      "action": "hasDSMUsage"
    },
    {
      "eventId": "dataset.getImanModelObjectFromVMO",
      "action": "getImanModelObjectFromVMO"
    },
    {
      "eventId": "dataset.getImanPlmdFileTicketForMultipleDwnldForDSM",
      "action": "getImanPlmdFileTicketForMultipleDwnldForDSM"
    },
    {
      "eventId": "showConfirmRemoveAnalysisResultMessage",
      "message": "confirmRemoveAnalysisResult"
    },
    {},
    {
      "eventId": "unPinObject",
      "action": "unpinSelectedObject"
    },
    {
      "eventId": "pinObject",
      "action": "pinSelectedObject"
    },
    {
      "eventId": "pinDelegateObject",
      "action": "pinSelectedObjectDelegateAction",
      "cacheEventData": true
    }
  ],
  "preferences": [
    "AWC_display_configured_revs_for_pwa"
  ],
  "ctx": {
    "graph": {
      "type": "object"
    }
  }
}
